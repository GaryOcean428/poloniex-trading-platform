{"version":3,"file":"LiveTradingDashboard-C0K1vBGG.js","sources":["../../src/components/ui/Tabs.tsx","../../src/services/advancedLiveData.ts","../../src/components/dashboard/LiveDataDashboard.tsx","../../src/components/dashboard/RealTimeAlerts.tsx","../../src/components/dashboard/RealTimePortfolio.tsx","../../src/pages/LiveTradingDashboard.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\ninterface TabsProps {\n  defaultValue?: string;\n  value?: string;\n  onValueChange?: (value: string) => void;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst Tabs = ({ defaultValue, value, onValueChange, className, children }: TabsProps) => {\n  const [activeTab, setActiveTab] = React.useState(value || defaultValue || \"\");\n\n  React.useEffect(() => {\n    if (value !== undefined) {\n      setActiveTab(value);\n    }\n  }, [value]);\n\n  const handleTabChange = (tabValue: string) => {\n    if (value === undefined) {\n      setActiveTab(tabValue);\n    }\n    if (onValueChange) {\n      onValueChange(tabValue);\n    }\n  };\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child) && child.type === TabsList) {\n          return React.cloneElement(child as React.ReactElement<TabsListProps>, {\n            activeTab,\n            onTabChange: handleTabChange,\n          });\n        }\n        if (React.isValidElement(child) && child.type === TabsContent) {\n          return React.cloneElement(child as React.ReactElement<TabsContentProps>, {\n            activeTab,\n          });\n        }\n        return child;\n      })}\n    </div>\n  );\n};\n\ninterface TabsListProps {\n  className?: string;\n  children: React.ReactNode;\n  activeTab?: string;\n  onTabChange?: (value: string) => void;\n}\n\nconst TabsList = ({ className, children, activeTab, onTabChange }: TabsListProps) => {\n  return (\n    <div className={cn(\"flex border-b\", className)}>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child) && child.type === TabsTrigger) {\n          const typedChild = child as React.ReactElement<TabsTriggerProps>;\n          return React.cloneElement(typedChild, {\n            active: activeTab === typedChild.props.value,\n            onSelect: () => onTabChange && onTabChange(typedChild.props.value),\n          });\n        }\n        return child;\n      })}\n    </div>\n  );\n};\n\ninterface TabsTriggerProps {\n  className?: string;\n  value: string;\n  children: React.ReactNode;\n  active?: boolean;\n  onSelect?: () => void;\n}\n\n// Removed unused value parameter from the function parameters, keeping it in the interface\nconst TabsTrigger = ({ className, children, active, onSelect }: TabsTriggerProps) => {\n  return (\n    <button\n      className={cn(\n        \"px-4 py-2 text-sm font-medium\",\n        active\n          ? \"border-b-2 border-primary text-primary\"\n          : \"text-muted-foreground hover:text-foreground\",\n        className\n      )}\n      onClick={onSelect}\n    >\n      {children}\n    </button>\n  );\n};\n\ninterface TabsContentProps {\n  className?: string;\n  value: string;\n  children: React.ReactNode;\n  activeTab?: string;\n}\n\nconst TabsContent = ({ className, value, children, activeTab }: TabsContentProps) => {\n  if (value !== activeTab) {\n    return null;\n  }\n\n  return (\n    <div className={cn(\"mt-4\", className)}>\n      {children}\n    </div>\n  );\n};\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n","import axios, { AxiosInstance } from \"axios\";\n\n// Type definitions for live data processing\nexport interface LiveDataConfig {\n  primarySource: \"poloniex\" | \"websocket\" | \"aggregated\";\n  fallbackSources: (\"poloniex\" | \"websocket\" | \"rest\")[];\n  updateInterval: number;\n  aggregationMethod: \"weighted\" | \"median\" | \"mean\";\n  enableAnomalyDetection: boolean;\n  anomalyThreshold: number;\n  enableDataNormalization: boolean;\n  cacheDuration: number;\n  maxRetries: number;\n  retryDelay: number;\n  enableCompression: boolean;\n  logLevel: \"debug\" | \"info\" | \"warn\" | \"error\";\n}\n\nexport interface MarketDataPoint {\n  symbol: string;\n  timestamp: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  quoteVolume?: number;\n  weightedAverage?: number;\n  source?: string;\n  isAnomaly?: boolean;\n  confidence?: number;\n  normalized?: boolean;\n}\n\nexport interface OrderBookEntry {\n  price: number;\n  amount: number;\n  timestamp: number;\n}\n\nexport interface OrderBook {\n  symbol: string;\n  timestamp: number;\n  bids: OrderBookEntry[];\n  asks: OrderBookEntry[];\n  source?: string;\n  lastUpdateId?: number;\n}\n\nexport interface TradeEntry {\n  id: string;\n  symbol: string;\n  timestamp: number;\n  price: number;\n  amount: number;\n  side: \"buy\" | \"sell\";\n  source?: string;\n}\n\nexport interface MarketSummary {\n  symbol: string;\n  timestamp: number;\n  lastPrice: number;\n  bidPrice: number;\n  askPrice: number;\n  high24h: number;\n  low24h: number;\n  volume24h: number;\n  quoteVolume24h: number;\n  percentChange24h: number;\n  source?: string;\n}\n\n// Event types\ninterface LiveDataEvents {\n  data_received: { source: string; data: unknown };\n  data_processed: MarketDataPoint;\n  websocket_connected: string;\n  connection_error: { source: string; error: unknown };\n  max_retries_reached: string;\n  service_started: void;\n  service_stopped: void;\n  initialization_error: { error: unknown };\n}\n\ntype EventCallback<T> = (data: T) => void;\n\nclass BrowserEventEmitter {\n  private events: Record<string, EventCallback<any>[]> = {};\n\n  on<K extends keyof LiveDataEvents>(\n    event: K,\n    callback: EventCallback<LiveDataEvents[K]>\n  ): void {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(callback);\n  }\n\n  emit<K extends keyof LiveDataEvents>(\n    event: K,\n    data: LiveDataEvents[K]\n  ): void {\n    if (!this.events[event]) return;\n    this.events[event].forEach((callback) => {\n      try {\n        callback(data);\n      } catch (error) {\n        // console.error(\"Error in event handler:\", error);\n      }\n    });\n  }\n\n  off<K extends keyof LiveDataEvents>(\n    event: K,\n    callback: EventCallback<LiveDataEvents[K]>\n  ): void {\n    if (!this.events[event]) return;\n    this.events[event] = this.events[event].filter((cb) => cb !== callback);\n  }\n}\n\n// Default configuration\nconst defaultLiveDataConfig: LiveDataConfig = {\n  primarySource: \"aggregated\",\n  fallbackSources: [\"poloniex\", \"websocket\", \"rest\"],\n  updateInterval: 1000,\n  aggregationMethod: \"weighted\",\n  enableAnomalyDetection: true,\n  anomalyThreshold: 3.0,\n  enableDataNormalization: true,\n  cacheDuration: 60000,\n  maxRetries: 3,\n  retryDelay: 1000,\n  enableCompression: true,\n  logLevel: \"info\",\n};\n\n/**\n * Cache for market data\n * Note: We keep data as unknown in the map, but provide typed accessors below\n */\nconst dataCache = new Map<string, { data: unknown; timestamp: number }>();\n\n// Event emitter for live data updates\nexport const liveDataEvents = new BrowserEventEmitter();\n\n/**\n * Advanced Live Data Service class\n */\nexport class LiveDataService {\n  private config: LiveDataConfig;\n  private websockets: Map<string, WebSocket> = new Map();\n  private poloniexRestClient!: AxiosInstance;\n  private isRunning = false;\n  private retryCount = new Map<string, number>();\n  private dataBuffer = new Map<string, MarketDataPoint[]>();\n  private lastAnomalyCheck = new Map<string, number>();\n  private statisticalBaseline = new Map<\n    string,\n    { mean: number; stdDev: number; updateTime: number }\n  >();\n\n  constructor(config: Partial<LiveDataConfig> = {}) {\n    this.config = { ...defaultLiveDataConfig, ...config };\n    this.initializePoloniexClient();\n  }\n\n  // Typed cache helpers\n  private getCache<T>(key: string, maxAgeMs?: number): T | undefined {\n    const entry = dataCache.get(key);\n    if (!entry) return undefined;\n    if (\n      typeof maxAgeMs === \"number\" &&\n      Date.now() - entry.timestamp > maxAgeMs\n    ) {\n      return undefined;\n    }\n    return entry.data as T;\n  }\n\n  private setCache<T>(key: string, data: T): void {\n    dataCache.set(key, { data, timestamp: Date.now() });\n  }\n\n  private initializePoloniexClient(): void {\n    this.poloniexRestClient = axios.create({\n      baseURL: \"/api/futures\",\n      timeout: 10000,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"PoloniexTradingPlatform/1.0\",\n      },\n    });\n  }\n\n  public start(): void {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    this.log(\"info\", \"Starting live data service\");\n    this.initializeWebSockets();\n    liveDataEvents.emit(\"service_started\", undefined);\n  }\n\n  public stop(): void {\n    if (!this.isRunning) return;\n    this.isRunning = false;\n    this.log(\"info\", \"Stopping live data service\");\n\n    this.websockets.forEach((ws, key) => {\n      ws.close();\n      this.websockets.delete(key);\n    });\n\n    liveDataEvents.emit(\"service_stopped\", undefined);\n  }\n\n  private initializeWebSockets(): void {\n    try {\n      // Get bullet token for V3 WebSocket connection\n      this.getBulletToken()\n        .then(({ token, endpoint }) => {\n          const poloniexWs = new WebSocket(`${endpoint}?token=${token}`);\n\n          poloniexWs.onopen = () => {\n            this.log(\"info\", \"Poloniex V3 WebSocket connected\");\n\n            // Subscribe to ticker using V3 format\n            poloniexWs.send(\n              JSON.stringify({\n                id: Date.now(),\n                type: \"subscribe\",\n                topic: \"/contractMarket/ticker:BTCUSDTPERP\",\n                response: true,\n              })\n            );\n\n            this.websockets.set(\"poloniex\", poloniexWs);\n            liveDataEvents.emit(\"websocket_connected\", \"poloniex\");\n          };\n\n          poloniexWs.onmessage = (event: MessageEvent) => {\n            try {\n              const parsedData = JSON.parse(event.data);\n              this.handleWebSocketMessage(\"poloniex\", parsedData);\n            } catch (error) {\n              this.log(\"error\", `Error parsing WebSocket message: ${error}`);\n            }\n          };\n\n          poloniexWs.onerror = (event: Event) => {\n            const error =\n              event instanceof ErrorEvent ? event.error : \"WebSocket error\";\n            this.log(\"error\", `WebSocket error: ${error}`);\n            liveDataEvents.emit(\"connection_error\", {\n              source: \"poloniex\",\n              error,\n            });\n          };\n\n          poloniexWs.onclose = () => {\n            this.log(\"info\", \"Poloniex V3 WebSocket disconnected\");\n            this.websockets.delete(\"poloniex\");\n\n            if (this.isRunning) {\n              const retryCount = (this.retryCount.get(\"poloniex\") || 0) + 1;\n              this.retryCount.set(\"poloniex\", retryCount);\n\n              if (retryCount <= this.config.maxRetries) {\n                setTimeout(\n                  () => this.initializeWebSockets(),\n                  this.config.retryDelay * retryCount\n                );\n              } else {\n                liveDataEvents.emit(\"max_retries_reached\", \"poloniex\");\n              }\n            }\n          };\n        })\n        .catch((error) => {\n          this.log(\"error\", `Error getting bullet token: ${error}`);\n          liveDataEvents.emit(\"initialization_error\", { error });\n        });\n    } catch (error) {\n      this.log(\"error\", `Error initializing WebSockets: ${error}`);\n      liveDataEvents.emit(\"initialization_error\", { error });\n    }\n  }\n\n  // Add bullet token getter method\n  private async getBulletToken(): Promise<{ token: string; endpoint: string }> {\n    try {\n      const response = await fetch(\n        \"https://futures-api.poloniex.com/api/v1/bullet-public\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to get bullet token: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data && data.data && data.data.token) {\n        return {\n          token: data.data.token,\n          endpoint: data.data.instanceServers[0].endpoint,\n        };\n      } else {\n        throw new Error(\"Invalid bullet token response format\");\n      }\n    } catch (error) {\n      this.log(\"error\", `Failed to get bullet token: ${error}`);\n      throw error;\n    }\n  }\n\n  private handleWebSocketMessage(source: string, message: unknown): void {\n    try {\n      if (\n        typeof message === \"object\" &&\n        message !== null &&\n        \"type\" in message &&\n        \"data\" in message\n      ) {\n        const msg = message as { type: string; topic?: string; data: unknown };\n        if (\n          msg.type === \"message\" &&\n          msg.topic &&\n          msg.topic.includes(\"/contractMarket/ticker\") &&\n          msg.data\n        ) {\n          const td = msg.data as Record<string, unknown>;\n          const asStr = (v: unknown, def = \"0\"): string =>\n            typeof v === \"number\" ? String(v) : typeof v === \"string\" ? v : def;\n\n          const marketData: MarketDataPoint = {\n            symbol: typeof td.symbol === \"string\" ? td.symbol : \"UNKNOWN\",\n            timestamp: Date.now(),\n            open: parseFloat(asStr(td.open24h)),\n            high: parseFloat(asStr(td.high24h)),\n            low: parseFloat(asStr(td.low24h)),\n            close: parseFloat(asStr(td.price, asStr(td.lastPrice))),\n            volume: parseFloat(asStr(td.volume24h)),\n            quoteVolume: parseFloat(asStr(td.turnover24h)),\n            source: \"poloniex_ws_v3\",\n          };\n          this.processData(marketData);\n          this.addToDataBuffer(marketData);\n        }\n      }\n      liveDataEvents.emit(\"data_received\", { source, data: message });\n    } catch (error) {\n      this.log(\"error\", `Error handling WebSocket message: ${error}`);\n    }\n  }\n\n  private addToDataBuffer(dataPoint: MarketDataPoint): void {\n    const key = dataPoint.symbol;\n    if (!this.dataBuffer.has(key)) {\n      this.dataBuffer.set(key, []);\n    }\n\n    let buffer = this.dataBuffer.get(key);\n    if (!buffer) {\n      buffer = [] as MarketDataPoint[];\n      this.dataBuffer.set(key, buffer);\n    }\n    buffer.push(dataPoint);\n\n    if (buffer.length > 100) {\n      buffer.shift();\n    }\n\n    const lastUpdate = this.lastAnomalyCheck.get(key) || 0;\n    if (Date.now() - lastUpdate > 300000) {\n      this.lastAnomalyCheck.set(key, Date.now());\n      this.updateStatisticalBaseline(key);\n    }\n  }\n\n  private updateStatisticalBaseline(symbol: string): void {\n    const buffer = this.dataBuffer.get(symbol);\n    if (!buffer || buffer.length < 30) return;\n\n    const prices = buffer.map((d) => d.close);\n    const mean = prices.reduce((sum, price) => sum + price, 0) / prices.length;\n\n    const squaredDiffs = prices.map((price) => Math.pow(price - mean, 2));\n    const variance =\n      squaredDiffs.reduce((sum, diff) => sum + diff, 0) / squaredDiffs.length;\n    const stdDev = Math.sqrt(variance);\n\n    this.statisticalBaseline.set(symbol, {\n      mean,\n      stdDev,\n      updateTime: Date.now(),\n    });\n  }\n\n  private processData(dataPoint: MarketDataPoint): void {\n    try {\n      if (this.config.enableDataNormalization) {\n        dataPoint = this.normalizeData(dataPoint);\n      }\n\n      if (this.config.enableAnomalyDetection) {\n        dataPoint = this.detectAnomaly(dataPoint);\n      }\n\n      const cacheKey = `${dataPoint.symbol}_${dataPoint.timestamp}`;\n      dataCache.set(cacheKey, { data: dataPoint, timestamp: Date.now() });\n      liveDataEvents.emit(\"data_processed\", dataPoint);\n    } catch (error) {\n      this.log(\"error\", `Error processing data: ${error}`);\n    }\n  }\n\n  private normalizeData(dataPoint: MarketDataPoint): MarketDataPoint {\n    const normalized = { ...dataPoint };\n\n    // Ensure high/low bounds are correct\n    const prices = [\n      normalized.open,\n      normalized.high,\n      normalized.low,\n      normalized.close,\n    ].filter((p) => typeof p === \"number\" && isFinite(p));\n\n    if (prices.length > 0) {\n      normalized.high = Math.max(...prices);\n      normalized.low = Math.min(...prices);\n    }\n\n    normalized.normalized = true;\n    return normalized;\n  }\n\n  private detectAnomaly(dataPoint: MarketDataPoint): MarketDataPoint {\n    const baseline = this.statisticalBaseline.get(dataPoint.symbol);\n    if (!baseline) {\n      return { ...dataPoint, isAnomaly: false, confidence: 0 };\n    }\n\n    const zScore = Math.abs(\n      (dataPoint.close - baseline.mean) / baseline.stdDev\n    );\n    const isAnomaly = zScore > this.config.anomalyThreshold;\n    const confidence = Math.min(zScore / (this.config.anomalyThreshold * 2), 1);\n\n    return { ...dataPoint, isAnomaly, confidence };\n  }\n\n  public async fetchMarketData(\n    symbol: string,\n    interval = \"1h\",\n    limit = 100\n  ): Promise<MarketDataPoint[]> {\n    try {\n      const cacheKey = `${symbol}_${interval}_${limit}`;\n      const cached = this.getCache<MarketDataPoint[]>(\n        cacheKey,\n        this.config.cacheDuration\n      );\n      if (cached) {\n        return cached;\n      }\n\n      const response = await this.poloniexRestClient.get(`/${symbol}/candles`, {\n        params: { interval, limit },\n      });\n\n      if (!response.data) {\n        throw new Error(\"No data received from API\");\n      }\n\n      const marketData: MarketDataPoint[] = response.data.map(\n        (candle: Record<string, string | number>) => ({\n          symbol,\n          timestamp: Number(candle.timestamp),\n          open: parseFloat(String(candle.open || \"0\")),\n          high: parseFloat(String(candle.high || \"0\")),\n          low: parseFloat(String(candle.low || \"0\")),\n          close: parseFloat(String(candle.close || \"0\")),\n          volume: parseFloat(String(candle.volume || \"0\")),\n          quoteVolume: parseFloat(String(candle.quoteVolume || \"0\")),\n          source: \"poloniex_rest\",\n        })\n      );\n\n      const processedData = marketData.map((point) => {\n        let processed = point;\n        if (this.config.enableDataNormalization) {\n          processed = this.normalizeData(processed);\n        }\n        if (this.config.enableAnomalyDetection) {\n          processed = this.detectAnomaly(processed);\n        }\n        return processed;\n      });\n\n      this.setCache(cacheKey, processedData);\n      return processedData;\n    } catch (error) {\n      const cached = this.getCache<MarketDataPoint[]>(\n        `${symbol}_${interval}_${limit}`,\n        this.config.cacheDuration\n      );\n      if (cached) return cached;\n      throw error;\n    }\n  }\n\n  public async fetchOrderBook(symbol: string, limit = 100): Promise<OrderBook> {\n    try {\n      const cacheKey = `orderbook_${symbol}_${limit}`;\n      const cached = this.getCache<OrderBook>(\n        cacheKey,\n        this.config.cacheDuration / 10\n      );\n      if (cached) {\n        return cached;\n      }\n\n      const response = await this.poloniexRestClient.get(\n        `/${symbol}/orderBook`,\n        {\n          params: { limit },\n        }\n      );\n\n      const orderBook: OrderBook = {\n        symbol,\n        timestamp: Date.now(),\n        bids: (response.data.bids || []).map((bid: [string, string]) => ({\n          price: parseFloat(bid[0]),\n          amount: parseFloat(bid[1]),\n          timestamp: Date.now(),\n        })),\n        asks: (response.data.asks || []).map((ask: [string, string]) => ({\n          price: parseFloat(ask[0]),\n          amount: parseFloat(ask[1]),\n          timestamp: Date.now(),\n        })),\n        source: \"poloniex_rest\",\n        lastUpdateId: response.data.sequence,\n      };\n\n      this.setCache(cacheKey, orderBook);\n      return orderBook;\n    } catch (error) {\n      const cached = this.getCache<OrderBook>(\n        `orderbook_${symbol}_${limit}`,\n        this.config.cacheDuration / 10\n      );\n      if (cached) return cached;\n      throw error;\n    }\n  }\n\n  public async fetchTrades(symbol: string, limit = 100): Promise<TradeEntry[]> {\n    try {\n      const cacheKey = `trades_${symbol}_${limit}`;\n      const cached = this.getCache<TradeEntry[]>(\n        cacheKey,\n        this.config.cacheDuration / 10\n      );\n      if (cached) {\n        return cached;\n      }\n\n      const response = await this.poloniexRestClient.get(`/${symbol}/trades`, {\n        params: { limit },\n      });\n\n      const trades: TradeEntry[] = (response.data || []).map(\n        (trade: Record<string, string | number>) => ({\n          id: String(trade.id || \"\"),\n          symbol,\n          timestamp: Number(trade.ts || Date.now()),\n          price: parseFloat(String(trade.price || \"0\")),\n          amount: parseFloat(String(trade.amount || \"0\")),\n          side:\n            String(trade.takerSide || \"\").toLowerCase() === \"sell\"\n              ? \"buy\"\n              : \"sell\",\n          source: \"poloniex_rest\",\n        })\n      );\n\n      this.setCache(cacheKey, trades);\n      return trades;\n    } catch (error) {\n      const cached = this.getCache<TradeEntry[]>(\n        `trades_${symbol}_${limit}`,\n        this.config.cacheDuration / 10\n      );\n      if (cached) return cached;\n      throw error;\n    }\n  }\n\n  public async fetchMarketSummary(symbol: string): Promise<MarketSummary> {\n    try {\n      const cacheKey = `summary_${symbol}`;\n      const cached = this.getCache<MarketSummary>(\n        cacheKey,\n        this.config.cacheDuration / 2\n      );\n      if (cached) {\n        return cached;\n      }\n\n      const response = await this.poloniexRestClient.get(\n        `/${symbol}/ticker24h`\n      );\n\n      const summary: MarketSummary = {\n        symbol,\n        timestamp: Date.now(),\n        lastPrice: parseFloat(String(response.data.close || \"0\")),\n        bidPrice: parseFloat(String(response.data.markPrice || \"0\")),\n        askPrice: parseFloat(String(response.data.markPrice || \"0\")),\n        high24h: parseFloat(String(response.data.high || \"0\")),\n        low24h: parseFloat(String(response.data.low || \"0\")),\n        volume24h: parseFloat(String(response.data.volume || \"0\")),\n        quoteVolume24h: parseFloat(String(response.data.quoteVolume || \"0\")),\n        percentChange24h: parseFloat(String(response.data.change || \"0\")) * 100,\n        source: \"poloniex_rest\",\n      };\n\n      this.setCache(cacheKey, summary);\n      return summary;\n    } catch (error) {\n      const cached = this.getCache<MarketSummary>(\n        `summary_${symbol}`,\n        this.config.cacheDuration / 2\n      );\n      if (cached) return cached;\n      throw error;\n    }\n  }\n\n  private log(\n    level: \"debug\" | \"info\" | \"warn\" | \"error\",\n    message: string\n  ): void {\n    const levels = { debug: 0, info: 1, warn: 2, error: 3 };\n    if (levels[level] >= levels[this.config.logLevel]) {\n      console[level](`[LiveData] ${message}`);\n    }\n  }\n}\n\n// Export singleton instance\nexport const liveDataService = new LiveDataService();\n\nexport default {\n  LiveDataService,\n  liveDataService,\n  liveDataEvents,\n};\n","import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/Tabs';\nimport {\n  LiveDataConfig,\n  LiveDataService,\n  MarketDataPoint,\n  MarketSummary,\n  OrderBook,\n  TradeEntry,\n  liveDataEvents,\n  liveDataService\n} from '@/services/advancedLiveData';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\n\nconst LiveDataDashboard: React.FC = () => {\n  const [marketData, setMarketData] = useState<MarketDataPoint[]>([]);\n  const [orderBook, setOrderBook] = useState<OrderBook | null>(null);\n  const [trades, setTrades] = useState<TradeEntry[]>([]);\n  const [marketSummary, setMarketSummary] = useState<MarketSummary | null>(null);\n  const [selectedSymbol, setSelectedSymbol] = useState<string>('BTC_USDT');\n  const [timeframe, setTimeframe] = useState<string>('1h');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [anomalies, setAnomalies] = useState<MarketDataPoint[]>([]);\n  const [serviceStatus, setServiceStatus] = useState<'stopped' | 'running'>('stopped');\n  const [config, setConfig] = useState<LiveDataConfig>({\n    primarySource: 'aggregated',\n    fallbackSources: ['poloniex', 'websocket', 'rest'],\n    updateInterval: 1000,\n    aggregationMethod: 'weighted',\n    enableAnomalyDetection: true,\n    anomalyThreshold: 3.0,\n    enableDataNormalization: true,\n    cacheDuration: 60000,\n    maxRetries: 3,\n    retryDelay: 1000,\n    enableCompression: true,\n    logLevel: 'info'\n  });\n\n  const CHART_COLORS = {\n    primary: '#06b6d4',\n    secondary: '#9ca3af',\n    error: '#ef4444'\n  };\n\n  // Available symbols\n  const symbols = [\n    'BTC_USDT', 'ETH_USDT', 'SOL_USDT', 'XRP_USDT', 'ADA_USDT',\n    'DOGE_USDT', 'MATIC_USDT', 'DOT_USDT', 'AVAX_USDT', 'LINK_USDT'\n  ];\n\n  // Available timeframes\n  const timeframes = ['5m', '15m', '30m', '1h', '4h', '1d'];\n\n  // Fetch market data\n  const fetchMarketData = useCallback(async () => {\n    try\n    {\n      setIsLoading(true);\n      setError(null);\n\n      const data = await liveDataService.fetchMarketData(selectedSymbol, timeframe, 100);\n      setMarketData(data);\n\n      // Extract anomalies\n      const anomalyPoints = data.filter((point: MarketDataPoint) => point.isAnomaly);\n      setAnomalies(anomalyPoints);\n\n      setIsLoading(false);\n    } catch (err)\n    {\n      // console.error('Error fetching market data:', err);\n      setError(`Failed to fetch market data: ${err instanceof Error ? err.message : 'Unknown error'}`);\n      setIsLoading(false);\n    }\n  }, [selectedSymbol, timeframe]);\n\n  // Fetch order book\n  const fetchOrderBook = useCallback(async () => {\n    try\n    {\n      const book = await liveDataService.fetchOrderBook(selectedSymbol);\n      setOrderBook(book);\n    } catch (err)\n    {\n      // console.error('Error fetching order book:', err);\n      // Don't set error state to avoid disrupting the UI\n    }\n  }, [selectedSymbol]);\n\n  // Fetch trades\n  const fetchTrades = useCallback(async () => {\n    try\n    {\n      const tradeData = await liveDataService.fetchTrades(selectedSymbol, 50);\n      setTrades(tradeData);\n    } catch (err)\n    {\n      // console.error('Error fetching trades:', err);\n      // Don't set error state to avoid disrupting the UI\n    }\n  }, [selectedSymbol]);\n\n  // Fetch market summary\n  const fetchMarketSummary = useCallback(async () => {\n    try\n    {\n      const summary = await liveDataService.fetchMarketSummary(selectedSymbol);\n      setMarketSummary(summary);\n    } catch (err)\n    {\n      // console.error('Error fetching market summary:', err);\n      // Don't set error state to avoid disrupting the UI\n    }\n  }, [selectedSymbol]);\n\n  // Start/stop live data service\n  const toggleLiveDataService = () => {\n    if (serviceStatus === 'stopped')\n    {\n      liveDataService.start();\n      setServiceStatus('running');\n    } else\n    {\n      liveDataService.stop();\n      setServiceStatus('stopped');\n    }\n  };\n\n  // Update configuration\n  const updateConfig = (newConfig: Partial<LiveDataConfig>) => {\n    const updatedConfig = { ...config, ...newConfig };\n    setConfig(updatedConfig);\n\n    // Restart service if running\n    if (serviceStatus === 'running')\n    {\n      liveDataService.stop();\n\n      // Create new service with updated config\n      const newService = new LiveDataService(updatedConfig);\n      newService.start();\n    }\n  };\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchMarketData();\n    fetchOrderBook();\n    fetchTrades();\n    fetchMarketSummary();\n\n    // Set up event listeners\n    const handleDataProcessed = (data: MarketDataPoint) => {\n      if (data.symbol === selectedSymbol)\n      {\n        setMarketData(prevData => {\n          // Add new data point and keep the last 100\n          const newData = [...prevData, data];\n          if (newData.length > 100)\n          {\n            return newData.slice(-100);\n          }\n          return newData;\n        });\n\n        // Check for anomaly\n        if (data.isAnomaly)\n        {\n          setAnomalies(prevAnomalies => [...prevAnomalies, data]);\n        }\n      }\n    };\n\n    const handleServiceStarted = () => {\n      setServiceStatus('running');\n    };\n\n    const handleServiceStopped = () => {\n      setServiceStatus('stopped');\n    };\n\n    liveDataEvents.on('data_processed', handleDataProcessed);\n    liveDataEvents.on('service_started', handleServiceStarted);\n    liveDataEvents.on('service_stopped', handleServiceStopped);\n\n    // Clean up\n    return () => {\n      liveDataEvents.off('data_processed', handleDataProcessed);\n      liveDataEvents.off('service_started', handleServiceStarted);\n      liveDataEvents.off('service_stopped', handleServiceStopped);\n    };\n  }, [fetchMarketData, fetchOrderBook, fetchTrades, fetchMarketSummary, selectedSymbol]);\n\n  // Set up polling for order book, trades, and summary\n  useEffect(() => {\n    const orderBookInterval = setInterval(fetchOrderBook, 10000); // 10 seconds\n    const tradesInterval = setInterval(fetchTrades, 5000); // 5 seconds\n    const summaryInterval = setInterval(fetchMarketSummary, 30000); // 30 seconds\n\n    return () => {\n      clearInterval(orderBookInterval);\n      clearInterval(tradesInterval);\n      clearInterval(summaryInterval);\n    };\n  }, [fetchOrderBook, fetchTrades, fetchMarketSummary]);\n\n  // Format market data for chart\n  const formatChartData = () => {\n    return marketData.map(point => ({\n      timestamp: new Date(point.timestamp).toLocaleTimeString(),\n      close: point.close,\n      volume: point.volume / 1000, // Scale down for better visualization\n      isAnomaly: point.isAnomaly ? point.close : null\n    }));\n  };\n\n  return (\n    <div className=\"bg-bg-tertiary rounded-lg shadow-elev-2 p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-neutral-800 dark:text-white\">Advanced Live Data Dashboard</h2>\n\n        <div className=\"flex items-center space-x-4\">\n          <button\n            onClick={toggleLiveDataService}\n            className={`px-4 py-2 rounded-md text-white ${serviceStatus === 'running'\n                ? 'bg-red-600 hover:bg-red-700'\n                : 'bg-green-600 hover:bg-green-700'\n              }`}\n          >\n            {serviceStatus === 'running' ? 'Stop Live Data' : 'Start Live Data'}\n          </button>\n\n          <div className=\"relative\">\n            <select\n              aria-label=\"Select symbol\"\n              value={selectedSymbol}\n              onChange={(e) => setSelectedSymbol(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-neutral-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md dark:bg-neutral-700 dark:border-neutral-600 dark:text-white\"\n            >\n              {symbols.map(symbol => (\n                <option key={symbol} value={symbol}>{symbol}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"relative\">\n            <select\n              aria-label=\"Select timeframe\"\n              value={timeframe}\n              onChange={(e) => setTimeframe(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-neutral-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md dark:bg-neutral-700 dark:border-neutral-600 dark:text-white\"\n            >\n              {timeframes.map(tf => (\n                <option key={tf} value={tf}>{tf}</option>\n              ))}\n            </select>\n          </div>\n\n          <button\n            onClick={fetchMarketData}\n            disabled={isLoading}\n            className={`px-4 py-2 rounded-md text-white ${isLoading ? 'bg-neutral-400' : 'bg-blue-600 hover:bg-blue-700'\n              }`}\n          >\n            {isLoading ? 'Loading...' : 'Refresh'}\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n        {marketSummary && (\n          <>\n            <div className=\"bg-neutral-100 dark:bg-neutral-700 p-4 rounded-md\">\n              <h3 className=\"text-lg font-medium mb-2 text-neutral-700 dark:text-neutral-300\">Price</h3>\n              <div className=\"text-3xl font-bold text-neutral-800 dark:text-white\">\n                ${marketSummary.lastPrice.toFixed(2)}\n              </div>\n              <div className={`text-sm font-medium ${marketSummary.percentChange24h >= 0\n                  ? 'text-green-600'\n                  : 'text-red-600'\n                }`}>\n                {marketSummary.percentChange24h >= 0 ? '+' : ''}\n                {marketSummary.percentChange24h.toFixed(2)}%\n              </div>\n            </div>\n\n            <div className=\"bg-neutral-100 dark:bg-neutral-700 p-4 rounded-md\">\n              <h3 className=\"text-lg font-medium mb-2 text-neutral-700 dark:text-neutral-300\">24h Range</h3>\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <div className=\"text-sm text-neutral-500 dark:text-neutral-400\">Low</div>\n                  <div className=\"text-lg font-semibold text-neutral-800 dark:text-white\">\n                    ${marketSummary.low24h.toFixed(2)}\n                  </div>\n                </div>\n                <div className=\"w-full mx-4\">\n                  <div className=\"w-full bg-neutral-200 rounded-full h-2.5 dark:bg-neutral-600\">\n                    <div\n                      className=\"h-2.5 rounded-full bg-blue-600\"\n                      style={{\n                        width: `${((marketSummary.lastPrice - marketSummary.low24h) /\n                          (marketSummary.high24h - marketSummary.low24h) * 100).toFixed(0)}%`\n                      }}\n                    ></div>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-sm text-neutral-500 dark:text-neutral-400\">High</div>\n                  <div className=\"text-lg font-semibold text-neutral-800 dark:text-white\">\n                    ${marketSummary.high24h.toFixed(2)}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-neutral-100 dark:bg-neutral-700 p-4 rounded-md\">\n              <h3 className=\"text-lg font-medium mb-2 text-neutral-700 dark:text-neutral-300\">24h Volume</h3>\n              <div className=\"text-3xl font-bold text-neutral-800 dark:text-white\">\n                {marketSummary.volume24h.toLocaleString(undefined, { maximumFractionDigits: 2 })}\n              </div>\n              <div className=\"text-sm text-neutral-500 dark:text-neutral-400\">\n                ${marketSummary.quoteVolume24h.toLocaleString(undefined, { maximumFractionDigits: 2 })}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-medium mb-2 text-neutral-700 dark:text-neutral-300\">Price Chart</h3>\n\n        <div className=\"h-80 bg-neutral-50 dark:bg-neutral-700 p-4 rounded-md\">\n          {marketData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={formatChartData()}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"timestamp\" />\n                <YAxis yAxisId=\"left\" />\n                <YAxis yAxisId=\"right\" orientation=\"right\" />\n                <Tooltip />\n                <Legend />\n                <Line\n                  yAxisId=\"left\"\n                  type=\"monotone\"\n                  dataKey=\"close\"\n                  stroke={CHART_COLORS.primary}\n                  dot={false}\n                  activeDot={{ r: 8 }}\n                />\n                <Line\n                  yAxisId=\"right\"\n                  type=\"monotone\"\n                  dataKey=\"volume\"\n                  stroke={CHART_COLORS.secondary}\n                  dot={false}\n                />\n                <Line\n                  yAxisId=\"left\"\n                  type=\"monotone\"\n                  dataKey=\"isAnomaly\"\n                  stroke={CHART_COLORS.error}\n                  strokeWidth={0}\n                  dot={{ r: 6, fill: CHART_COLORS.error }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          ) : (\n            <div className=\"flex items-center justify-center h-full\">\n              <p className=\"text-neutral-500 dark:text-neutral-400\">No data available</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <Tabs defaultValue=\"order-book\">\n        <TabsList>\n          <TabsTrigger value=\"order-book\">Order Book</TabsTrigger>\n          <TabsTrigger value=\"recent-trades\">Recent Trades</TabsTrigger>\n          <TabsTrigger value=\"anomalies\">Anomalies</TabsTrigger>\n          <TabsTrigger value=\"configuration\">Configuration</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"order-book\">\n          {orderBook ? (\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <h4 className=\"text-md font-medium mb-2 text-green-600\">Bids</h4>\n                <div className=\"overflow-y-auto max-h-60\">\n                  <table className=\"min-w-full divide-y divide-neutral-200 dark:divide-neutral-700\">\n                    <thead className=\"bg-neutral-50 dark:bg-neutral-800\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                          Price\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                          Amount\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                          Total\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-bg-tertiary divide-y divide-border-subtle\">\n                      {orderBook.bids.map((bid, index) => (\n                        <tr key={index}>\n                          <td className=\"px-6 py-2 whitespace-nowrap text-sm font-medium text-green-600\">\n                            {bid.price.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                            {bid.amount.toFixed(6)}\n                          </td>\n                          <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                            {(bid.price * bid.amount).toFixed(2)}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              <div>\n                <h4 className=\"text-md font-medium mb-2 text-red-600\">Asks</h4>\n                <div className=\"overflow-y-auto max-h-60\">\n                  <table className=\"min-w-full divide-y divide-neutral-200 dark:divide-neutral-700\">\n                    <thead className=\"bg-neutral-50 dark:bg-neutral-800\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                          Price\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                          Amount\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                          Total\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-bg-tertiary divide-y divide-border-subtle\">\n                      {orderBook.asks.map((ask, index) => (\n                        <tr key={index}>\n                          <td className=\"px-6 py-2 whitespace-nowrap text-sm font-medium text-red-600\">\n                            {ask.price.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                            {ask.amount.toFixed(6)}\n                          </td>\n                          <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                            {(ask.price * ask.amount).toFixed(2)}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-40\">\n              <p className=\"text-neutral-500 dark:text-neutral-400\">No order book data available</p>\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"recent-trades\">\n          {trades.length > 0 ? (\n            <div className=\"overflow-y-auto max-h-60\">\n              <table className=\"min-w-full divide-y divide-neutral-200 dark:divide-neutral-700\">\n                <thead className=\"bg-neutral-50 dark:bg-neutral-800\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Time\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Price\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Amount\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Side\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-bg-tertiary divide-y divide-border-subtle\">\n                  {trades.map((trade) => (\n                    <tr key={trade.id}>\n                      <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                        {new Date(trade.timestamp).toLocaleTimeString()}\n                      </td>\n                      <td className={`px-6 py-2 whitespace-nowrap text-sm font-medium ${trade.side === 'buy' ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                        {trade.price.toFixed(2)}\n                      </td>\n                      <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                        {trade.amount.toFixed(6)}\n                      </td>\n                      <td className=\"px-6 py-2 whitespace-nowrap text-sm\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${trade.side === 'buy'\n                            ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100'\n                            : 'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'\n                          }`}>\n                          {trade.side.toUpperCase()}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-40\">\n              <p className=\"text-neutral-500 dark:text-neutral-400\">No trade data available</p>\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"anomalies\">\n          {anomalies.length > 0 ? (\n            <div className=\"overflow-y-auto max-h-60\">\n              <table className=\"min-w-full divide-y divide-neutral-200 dark:divide-neutral-700\">\n                <thead className=\"bg-neutral-50 dark:bg-neutral-800\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Time\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Price\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Confidence\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider\">\n                      Type\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-bg-tertiary divide-y divide-border-subtle\">\n                  {anomalies.map((anomaly, index) => (\n                    <tr key={index}>\n                      <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                        {new Date(anomaly.timestamp).toLocaleString()}\n                      </td>\n                      <td className=\"px-6 py-2 whitespace-nowrap text-sm font-medium text-neutral-800 dark:text-white\">\n                        {anomaly.close.toFixed(2)}\n                      </td>\n                      <td className=\"px-6 py-2 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400\">\n                        <div className=\"w-full bg-neutral-200 rounded-full h-2.5 dark:bg-neutral-700\">\n                          <div\n                            className=\"h-2.5 rounded-full bg-red-600\"\n                            style={{ width: `${((anomaly.confidence || 0) * 100).toFixed(0)}%` }}\n                          ></div>\n                        </div>\n                        <span className=\"text-xs\">{((anomaly.confidence || 0) * 100).toFixed(0)}%</span>\n                      </td>\n                      <td className=\"px-6 py-2 whitespace-nowrap text-sm\">\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100\">\n                          PRICE ANOMALY\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-40\">\n              <p className=\"text-neutral-500 dark:text-neutral-400\">No anomalies detected</p>\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"configuration\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"text-md font-medium mb-4 text-neutral-700 dark:text-neutral-300\">Data Sources</h4>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1\">\n                  Primary Source\n                </label>\n                <select\n                  aria-label=\"Primary Source\"\n                  value={config.primarySource}\n                  onChange={(e) => updateConfig({ primarySource: e.target.value as LiveDataConfig['primarySource'] })}\n                  className=\"w-full px-3 py-2 border border-neutral-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-neutral-700 dark:border-neutral-600 dark:text-white\"\n                >\n                  <option value=\"poloniex\">Poloniex API</option>\n                  <option value=\"websocket\">WebSocket</option>\n                  <option value=\"aggregated\">Aggregated (Multiple Sources)</option>\n                </select>\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1\">\n                  Aggregation Method\n                </label>\n                <select\n                  aria-label=\"Aggregation Method\"\n                  value={config.aggregationMethod}\n                  onChange={(e) => updateConfig({ aggregationMethod: e.target.value as LiveDataConfig['aggregationMethod'] })}\n                  className=\"w-full px-3 py-2 border border-neutral-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-neutral-700 dark:border-neutral-600 dark:text-white\"\n                >\n                  <option value=\"weighted\">Weighted Average</option>\n                  <option value=\"median\">Median</option>\n                  <option value=\"mean\">Mean</option>\n                </select>\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1\">\n                  Update Interval (ms)\n                </label>\n                <input\n                  aria-label=\"Update Interval (ms)\"\n                  type=\"number\"\n                  min=\"100\"\n                  max=\"10000\"\n                  step=\"100\"\n                  value={config.updateInterval}\n                  onChange={(e) => updateConfig({ updateInterval: parseInt(e.target.value) })}\n                  className=\"w-full px-3 py-2 border border-neutral-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-neutral-700 dark:border-neutral-600 dark:text-white\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-medium mb-4 text-neutral-700 dark:text-neutral-300\">Data Processing</h4>\n\n              <div className=\"flex items-center mb-4\">\n                <input\n                  type=\"checkbox\"\n                  id=\"enableAnomalyDetection\"\n                  checked={config.enableAnomalyDetection}\n                  onChange={(e) => updateConfig({ enableAnomalyDetection: e.target.checked })}\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-neutral-300 rounded\"\n                />\n                <label htmlFor=\"enableAnomalyDetection\" className=\"ml-2 block text-sm text-neutral-700 dark:text-neutral-300\">\n                  Enable Anomaly Detection\n                </label>\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1\">\n                  Anomaly Threshold (standard deviations)\n                </label>\n                <input\n                  aria-label=\"Anomaly Threshold (standard deviations)\"\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"10\"\n                  step=\"0.1\"\n                  value={config.anomalyThreshold}\n                  onChange={(e) => updateConfig({ anomalyThreshold: parseFloat(e.target.value) })}\n                  className=\"w-full px-3 py-2 border border-neutral-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-neutral-700 dark:border-neutral-600 dark:text-white\"\n                />\n              </div>\n\n              <div className=\"flex items-center mb-4\">\n                <input\n                  type=\"checkbox\"\n                  id=\"enableDataNormalization\"\n                  checked={config.enableDataNormalization}\n                  onChange={(e) => updateConfig({ enableDataNormalization: e.target.checked })}\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-neutral-300 rounded\"\n                />\n                <label htmlFor=\"enableDataNormalization\" className=\"ml-2 block text-sm text-neutral-700 dark:text-neutral-300\">\n                  Enable Data Normalization\n                </label>\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1\">\n                  Log Level\n                </label>\n                <select\n                  aria-label=\"Log Level\"\n                  value={config.logLevel}\n                  onChange={(e) => updateConfig({ logLevel: e.target.value as LiveDataConfig['logLevel'] })}\n                  className=\"w-full px-3 py-2 border border-neutral-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-neutral-700 dark:border-neutral-600 dark:text-white\"\n                >\n                  <option value=\"debug\">Debug</option>\n                  <option value=\"info\">Info</option>\n                  <option value=\"warn\">Warning</option>\n                  <option value=\"error\">Error</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default LiveDataDashboard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useWebSocket } from '../../services/websocketService';\nimport { useTradingContext } from '../../hooks/useTradingContext';\nimport { \n  Bell, \n  CheckCircle, \n  AlertTriangle, \n  XCircle, \n  Info,\n  X,\n  Volume2,\n  VolumeX,\n  Settings\n} from 'lucide-react';\n\ninterface MarketDataEvent {\n  symbol: string;\n  pair: string; // Add pair for backward compatibility\n  price: number;\n  changePercent: number;\n  volume: number;\n  timestamp: number;\n  [key: string]: unknown; // Add index signature for Record<string, unknown> compatibility\n}\n\ninterface TradeExecutionEvent {\n  id: string;\n  symbol: string;\n  pair: string; // Add pair for backward compatibility  \n  side: 'buy' | 'sell';\n  amount: number;\n  price: number;\n  profit?: number;\n  timestamp: number;\n  [key: string]: unknown; // Add index signature for Record<string, unknown> compatibility\n}\n\nexport interface RealTimeAlert {\n  id: string;\n  type: 'success' | 'warning' | 'error' | 'info';\n  category: 'trade' | 'market' | 'strategy' | 'system' | 'risk';\n  title: string;\n  message: string;\n  timestamp: number;\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  acknowledged: boolean;\n  data?: Record<string, unknown>; // Additional data for the alert\n}\n\ninterface AlertRules {\n  priceChange: {\n    enabled: boolean;\n    threshold: number; // percentage\n  };\n  volumeSpike: {\n    enabled: boolean;\n    threshold: number; // multiplier\n  };\n  portfolioChange: {\n    enabled: boolean;\n    threshold: number; // percentage\n  };\n  strategyStop: {\n    enabled: boolean;\n  };\n  connectionIssues: {\n    enabled: boolean;\n  };\n}\n\ninterface RealTimeAlertsProps {\n  maxAlerts?: number;\n  soundEnabled?: boolean;\n  onAlertClick?: (alert: RealTimeAlert) => void;\n}\n\nconst RealTimeAlerts: React.FC<RealTimeAlertsProps> = ({\n  maxAlerts = 50,\n  soundEnabled: initialSoundEnabled = true,\n  onAlertClick\n}) => {\n  const { isConnected, on, off } = useWebSocket();\n  const { activeStrategies } = useTradingContext();\n\n  const [alerts, setAlerts] = useState<RealTimeAlert[]>([]);\n  const [soundEnabled, setSoundEnabled] = useState(initialSoundEnabled);\n  const [showSettings, setShowSettings] = useState(false);\n  const [alertRules, setAlertRules] = useState<AlertRules>({\n    priceChange: { enabled: true, threshold: 5 },\n    volumeSpike: { enabled: true, threshold: 3 },\n    portfolioChange: { enabled: true, threshold: 2 },\n    strategyStop: { enabled: true },\n    connectionIssues: { enabled: true }\n  });\n\n  // Create alert utility function\n  const createAlert = useCallback((\n    type: RealTimeAlert['type'],\n    category: RealTimeAlert['category'],\n    title: string,\n    message: string,\n    priority: RealTimeAlert['priority'] = 'medium',\n    data?: Record<string, unknown>\n  ): RealTimeAlert => {\n    return {\n      id: `alert-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      type,\n      category,\n      title,\n      message,\n      timestamp: Date.now(),\n      priority,\n      acknowledged: false,\n      data\n    };\n  }, []);\n\n  // Add alert function\n  const addAlert = useCallback((alert: RealTimeAlert) => {\n    setAlerts(prev => {\n      const newAlerts = [alert, ...prev];\n      \n      // Limit alerts to maxAlerts\n      if (newAlerts.length > maxAlerts) {\n        return newAlerts.slice(0, maxAlerts);\n      }\n      \n      return newAlerts;\n    });\n\n    // Play sound for high/critical priority alerts\n    if (soundEnabled && (alert.priority === 'high' || alert.priority === 'critical')) {\n      playAlertSound(alert.type);\n    }\n  }, [maxAlerts, soundEnabled]);\n\n  // Play alert sound\n  const playAlertSound = (type: RealTimeAlert['type']) => {\n    try {\n      const AudioContextClass = window.AudioContext || (window as typeof window & { webkitAudioContext?: typeof AudioContext }).webkitAudioContext;\n      if (!AudioContextClass) return;\n      \n      const audioContext = new AudioContextClass();\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n\n      // Different frequencies for different alert types\n      const frequencies = {\n        success: 800,\n        info: 600,\n        warning: 400,\n        error: 200\n      };\n\n      oscillator.frequency.value = frequencies[type];\n      oscillator.type = 'sine';\n\n      gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);\n\n      oscillator.start(audioContext.currentTime);\n      oscillator.stop(audioContext.currentTime + 0.5);\n    } catch (error) {\n      // console.warn('Could not play alert sound:', error);\n    }\n  };\n\n  // Handle market data alerts\n  const handleMarketData = useCallback((...args: unknown[]) => {\n    const marketData = args[0] as MarketDataEvent;\n    if (!alertRules.priceChange.enabled) return;\n\n    const changePercent = Math.abs(marketData.changePercent || 0);\n    \n    if (changePercent >= alertRules.priceChange.threshold) {\n      const alert = createAlert(\n        changePercent >= 10 ? 'error' : 'warning',\n        'market',\n        'Significant Price Movement',\n        `${marketData.pair} moved ${marketData.changePercent > 0 ? '+' : ''}${marketData.changePercent.toFixed(2)}%`,\n        changePercent >= 10 ? 'high' : 'medium',\n        marketData\n      );\n      addAlert(alert);\n    }\n  }, [alertRules.priceChange, createAlert, addAlert]);\n\n  // Handle trade execution alerts\n  const handleTradeExecuted = useCallback((...args: unknown[]) => {\n    const tradeData = args[0] as TradeExecutionEvent;\n    const isProfit = (tradeData.profit || 0) > 0;\n    const alert = createAlert(\n      isProfit ? 'success' : 'error',\n      'trade',\n      'Trade Executed',\n      `${tradeData.side?.toUpperCase() || 'TRADE'} ${tradeData.amount || 0} ${tradeData.pair || ''} ${isProfit ? `+$${tradeData.profit?.toFixed(2) || '0.00'}` : `$${tradeData.profit?.toFixed(2) || '0.00'}`}`,\n      isProfit ? 'low' : 'medium',\n      tradeData\n    );\n    addAlert(alert);\n  }, [createAlert, addAlert]);\n\n  // Handle WebSocket connection changes\n  const handleConnectionChange = useCallback((...args: unknown[]) => {\n    const connectionState = args[0] as string;\n    if (!alertRules.connectionIssues.enabled) return;\n\n    if (connectionState === 'disconnected' || connectionState === 'failed') {\n      const alert = createAlert(\n        'error',\n        'system',\n        'Connection Lost',\n        'WebSocket connection lost. Trading may be affected.',\n        'high'\n      );\n      addAlert(alert);\n    } else if (connectionState === 'connected') {\n      const alert = createAlert(\n        'success',\n        'system',\n        'Connected',\n        'WebSocket connection restored.',\n        'low'\n      );\n      addAlert(alert);\n    }\n  }, [alertRules.connectionIssues, createAlert, addAlert]);\n\n  // Set up WebSocket listeners\n  useEffect(() => {\n    if (isConnected) {\n      on('marketData', handleMarketData);\n      on('tradeExecuted', handleTradeExecuted);\n      on('connectionStateChanged', handleConnectionChange);\n\n      return () => {\n        off('marketData', handleMarketData);\n        off('tradeExecuted', handleTradeExecuted);\n        off('connectionStateChanged', handleConnectionChange);\n      };\n    }\n  }, [isConnected, handleMarketData, handleTradeExecuted, handleConnectionChange, on, off]);\n\n  // Monitor strategy changes\n  useEffect(() => {\n    if (!alertRules.strategyStop.enabled) return;\n\n    const previousActiveCount = alerts.filter(a => a.category === 'strategy').length;\n    const currentActiveCount = activeStrategies.length;\n\n    if (previousActiveCount > currentActiveCount) {\n      const alert = createAlert(\n        'warning',\n        'strategy',\n        'Strategy Stopped',\n        `A trading strategy has stopped. ${currentActiveCount} strategies still active.`,\n        'medium'\n      );\n      addAlert(alert);\n    }\n  }, [activeStrategies.length, alertRules.strategyStop, createAlert, addAlert, alerts]);\n\n  // Acknowledge alert\n  const acknowledgeAlert = (alertId: string) => {\n    setAlerts(prev => \n      prev.map(alert => \n        alert.id === alertId ? { ...alert, acknowledged: true } : alert\n      )\n    );\n  };\n\n  // Remove alert\n  const removeAlert = (alertId: string) => {\n    setAlerts(prev => prev.filter(alert => alert.id !== alertId));\n  };\n\n  // Clear all alerts\n  const clearAllAlerts = () => {\n    setAlerts([]);\n  };\n\n  // Acknowledge all alerts\n  const acknowledgeAllAlerts = () => {\n    setAlerts(prev => prev.map(alert => ({ ...alert, acknowledged: true })));\n  };\n\n  // Get alert icon\n  const getAlertIcon = (alert: RealTimeAlert) => {\n    switch (alert.type) {\n      case 'success':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />;\n      case 'error':\n        return <XCircle className=\"h-5 w-5 text-red-500\" />;\n      case 'info':\n      default:\n        return <Info className=\"h-5 w-5 text-blue-500\" />;\n    }\n  };\n\n  // Get alert background color\n  const getAlertBgColor = (alert: RealTimeAlert) => {\n    const base = alert.acknowledged ? 'opacity-50 ' : '';\n    switch (alert.type) {\n      case 'success':\n        return base + 'bg-green-50 border-green-200';\n      case 'warning':\n        return base + 'bg-yellow-50 border-yellow-200';\n      case 'error':\n        return base + 'bg-red-50 border-red-200';\n      case 'info':\n      default:\n        return base + 'bg-blue-50 border-blue-200';\n    }\n  };\n\n  // Get priority badge color\n  const getPriorityColor = (priority: RealTimeAlert['priority']) => {\n    switch (priority) {\n      case 'critical':\n        return 'bg-error/10 text-error border border-error/20';\n      case 'high':\n        return 'bg-warning/10 text-warning border border-warning/20';\n      case 'medium':\n        return 'bg-warning/10 text-warning border border-warning/20';\n      case 'low':\n      default:\n        return 'bg-bg-secondary text-text-secondary border border-border-subtle';\n    }\n  };\n\n  const unacknowledgedCount = alerts.filter(a => !a.acknowledged).length;\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-2\">\n          <Bell className=\"h-5 w-5 text-text-secondary\" />\n          <h3 className=\"text-lg font-semibold text-text-primary\">Real-time Alerts</h3>\n          {unacknowledgedCount > 0 && (\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-semibold bg-error/10 text-error border border-error/20\">\n              {unacknowledgedCount} new\n            </span>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {/* Sound Toggle */}\n          <button\n            onClick={() => setSoundEnabled(!soundEnabled)}\n            className={`p-2 rounded-md transition-colors ${\n              soundEnabled \n                ? 'bg-brand-cyan/10 text-brand-cyan hover:bg-brand-cyan/20' \n                : 'bg-bg-secondary text-text-muted hover:bg-bg-tertiary'\n            }`}\n            title={soundEnabled ? 'Disable sound' : 'Enable sound'}\n          >\n            {soundEnabled ? <Volume2 className=\"h-4 w-4\" /> : <VolumeX className=\"h-4 w-4\" />}\n          </button>\n\n          {/* Settings */}\n          <button\n            onClick={() => setShowSettings(!showSettings)}\n            className=\"p-2 rounded-md bg-bg-secondary text-text-secondary hover:bg-bg-tertiary transition-colors\"\n            title=\"Alert settings\"\n          >\n            <Settings className=\"h-4 w-4\" />\n          </button>\n\n          {/* Acknowledge All */}\n          {unacknowledgedCount > 0 && (\n            <button\n              onClick={acknowledgeAllAlerts}\n              className=\"px-3 py-1 text-sm bg-brand-cyan/10 text-brand-cyan rounded-md hover:bg-brand-cyan/20 transition-colors font-medium\"\n            >\n              Acknowledge All\n            </button>\n          )}\n\n          {/* Clear All */}\n          {alerts.length > 0 && (\n            <button\n              onClick={clearAllAlerts}\n              className=\"px-3 py-1 text-sm bg-error/10 text-error rounded-md hover:bg-error/20 transition-colors font-medium\"\n            >\n              Clear All\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Settings Panel */}\n      {showSettings && (\n        <div className=\"p-4 bg-bg-secondary rounded-md border border-border-subtle\">\n          <h4 className=\"text-md font-semibold mb-3 text-text-primary\">Alert Settings</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={alertRules.priceChange.enabled}\n                  onChange={(e) => setAlertRules(prev => ({\n                    ...prev,\n                    priceChange: { ...prev.priceChange, enabled: e.target.checked }\n                  }))}\n                  className=\"rounded\"\n                />\n                <span className=\"text-sm\">Price change alerts</span>\n              </label>\n              {alertRules.priceChange.enabled && (\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"50\"\n                  value={alertRules.priceChange.threshold}\n                  onChange={(e) => setAlertRules(prev => ({\n                    ...prev,\n                    priceChange: { ...prev.priceChange, threshold: parseFloat(e.target.value) }\n                  }))}\n                  className=\"mt-1 block w-full px-3 py-1 border border-border-moderate rounded-md text-sm focus:ring-2 focus:ring-brand-cyan focus:outline-none\"\n                  placeholder=\"Threshold %\"\n                />\n              )}\n            </div>\n\n            <div>\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={alertRules.portfolioChange.enabled}\n                  onChange={(e) => setAlertRules(prev => ({\n                    ...prev,\n                    portfolioChange: { ...prev.portfolioChange, enabled: e.target.checked }\n                  }))}\n                  className=\"rounded\"\n                />\n                <span className=\"text-sm\">Portfolio change alerts</span>\n              </label>\n            </div>\n\n            <div>\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={alertRules.strategyStop.enabled}\n                  onChange={(e) => setAlertRules(prev => ({\n                    ...prev,\n                    strategyStop: { ...prev.strategyStop, enabled: e.target.checked }\n                  }))}\n                  className=\"rounded\"\n                />\n                <span className=\"text-sm\">Strategy alerts</span>\n              </label>\n            </div>\n\n            <div>\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={alertRules.connectionIssues.enabled}\n                  onChange={(e) => setAlertRules(prev => ({\n                    ...prev,\n                    connectionIssues: { ...prev.connectionIssues, enabled: e.target.checked }\n                  }))}\n                  className=\"rounded\"\n                />\n                <span className=\"text-sm\">Connection alerts</span>\n              </label>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Alerts List */}\n      <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n        {alerts.length > 0 ? (\n          alerts.map(alert => (\n            <div\n              key={alert.id}\n              className={`p-3 rounded-md border transition-all duration-200 cursor-pointer ${getAlertBgColor(alert)}`}\n              onClick={() => {\n                if (onAlertClick) {\n                  onAlertClick(alert);\n                }\n                if (!alert.acknowledged) {\n                  acknowledgeAlert(alert.id);\n                }\n              }}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex items-start space-x-3 flex-1\">\n                  {getAlertIcon(alert)}\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center space-x-2\">\n                      <h4 className=\"text-sm font-semibold text-text-primary truncate\">\n                        {alert.title}\n                      </h4>\n                      <span className={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-semibold ${getPriorityColor(alert.priority)}`}>\n                        {alert.priority}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-text-secondary mt-1\">\n                      {alert.message}\n                    </p>\n                    <p className=\"text-xs text-text-muted mt-1\">\n                      {new Date(alert.timestamp).toLocaleTimeString()}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    removeAlert(alert.id);\n                  }}\n                  className=\"ml-2 p-1 text-text-muted hover:text-text-secondary transition-colors\"\n                >\n                  <X className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center py-8\">\n            <Bell className=\"h-12 w-12 text-text-muted mx-auto mb-4\" />\n            <p className=\"text-text-secondary\">No alerts yet</p>\n            <p className=\"text-sm text-text-muted mt-1\">\n              Real-time alerts will appear here\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeAlerts;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useWebSocket } from '../../services/websocketService';\nimport { useTradingContext } from '../../hooks/useTradingContext';\nimport { \n  TrendingUp, \n  TrendingDown, \n  BarChart3,\n  Wallet,\n  Target\n} from 'lucide-react';\n\ninterface PortfolioMetric {\n  value: number;\n  change: number;\n  changePercent: number;\n  timestamp: number;\n}\n\ninterface RealTimePortfolioData {\n  totalValue: PortfolioMetric;\n  availableBalance: PortfolioMetric;\n  unrealizedPnL: PortfolioMetric;\n  realizedPnL: PortfolioMetric;\n  dayPnL: PortfolioMetric;\n  openPositions: number;\n  marginUsed: number;\n  marginFree: number;\n  totalEquity: number;\n}\n\ninterface MarketData {\n  symbol: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  timestamp: number;\n}\n\ninterface TradeData {\n  amount: number;\n  price: number;\n  profit: number;\n  side: 'buy' | 'sell';\n  symbol: string;\n  timestamp: number;\n}\n\ninterface RealTimePortfolioProps {\n  refreshInterval?: number;\n}\n\nconst RealTimePortfolio: React.FC<RealTimePortfolioProps> = ({ \n  refreshInterval = 5000 \n}) => {\n  const { accountBalance, activeStrategies } = useTradingContext();\n  const { isConnected, on, off } = useWebSocket();\n  \n  const [portfolioData, setPortfolioData] = useState<RealTimePortfolioData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdate, setLastUpdate] = useState<number>(Date.now());\n\n  // Initialize portfolio data from account balance\n  const initializePortfolioData = useCallback(() => {\n    if (accountBalance) {\n      const totalValue = parseFloat(accountBalance.total?.toString() || '0');\n      const unrealizedPnL = 0; // Not available in basic balance structure\n      const todayPnL = 0; // Not available in basic balance structure\n      const availableBalance = parseFloat(accountBalance.available?.toString() || '0');\n\n      const baseMetric = {\n        change: 0,\n        changePercent: 0,\n        timestamp: Date.now()\n      };\n\n      setPortfolioData({\n        totalValue: { value: totalValue, ...baseMetric },\n        availableBalance: { value: availableBalance, ...baseMetric },\n        unrealizedPnL: { \n          value: unrealizedPnL, \n          change: unrealizedPnL,\n          changePercent: totalValue > 0 ? (unrealizedPnL / totalValue) * 100 : 0,\n          timestamp: Date.now()\n        },\n        realizedPnL: { value: 0, ...baseMetric },\n        dayPnL: { \n          value: todayPnL,\n          change: todayPnL,\n          changePercent: 0, // Not available in basic balance structure\n          timestamp: Date.now()\n        },\n        openPositions: 0,\n        marginUsed: 0,\n        marginFree: availableBalance,\n        totalEquity: totalValue\n      });\n      \n      setIsLoading(false);\n    }\n  }, [accountBalance]);\n\n  // Handle real-time trade execution updates\n  const handleTradeExecuted = useCallback((...args: unknown[]) => {\n    const tradeData = args[0] as TradeData;\n    setPortfolioData(prev => {\n      if (!prev) return null;\n\n      const tradeValue = (tradeData.amount || 0) * (tradeData.price || 0);\n      const profit = tradeData.profit || 0;\n      const isPositive = profit >= 0;\n\n      return {\n        ...prev,\n        totalValue: {\n          ...prev.totalValue,\n          value: prev.totalValue.value + profit,\n          change: profit,\n          changePercent: prev.totalValue.value > 0 ? (profit / prev.totalValue.value) * 100 : 0,\n          timestamp: Date.now()\n        },\n        realizedPnL: {\n          ...prev.realizedPnL,\n          value: prev.realizedPnL.value + profit,\n          change: profit,\n          changePercent: isPositive ? Math.abs(profit / tradeValue * 100) : -Math.abs(profit / tradeValue * 100),\n          timestamp: Date.now()\n        },\n        dayPnL: {\n          ...prev.dayPnL,\n          value: prev.dayPnL.value + profit,\n          change: profit,\n          changePercent: prev.totalValue.value > 0 ? ((prev.dayPnL.value + profit) / prev.totalValue.value) * 100 : 0,\n          timestamp: Date.now()\n        },\n        openPositions: tradeData.side === 'buy' ? prev.openPositions + 1 : Math.max(0, prev.openPositions - 1)\n      };\n    });\n\n    setLastUpdate(Date.now());\n  }, []);\n\n  // Handle market data updates that might affect portfolio value\n  const handleMarketData = useCallback((...args: unknown[]) => {\n    const marketData = args[0] as MarketData;\n    // Update portfolio value based on market movements\n    // This is a simplified calculation - in a real implementation,\n    // you'd calculate based on actual holdings\n    setPortfolioData(prev => {\n      if (!prev) return null;\n\n      // Simple simulation: portfolio moves with market\n      const marketChange = marketData.changePercent || 0;\n      const portfolioImpact = prev.totalValue.value * (marketChange / 100) * 0.1; // 10% correlation\n\n      return {\n        ...prev,\n        unrealizedPnL: {\n          ...prev.unrealizedPnL,\n          value: prev.unrealizedPnL.value + portfolioImpact,\n          change: portfolioImpact,\n          changePercent: prev.totalValue.value > 0 ? (portfolioImpact / prev.totalValue.value) * 100 : 0,\n          timestamp: Date.now()\n        },\n        totalValue: {\n          ...prev.totalValue,\n          value: prev.totalValue.value + portfolioImpact,\n          change: portfolioImpact,\n          changePercent: marketChange * 0.1, // Dampened market correlation\n          timestamp: Date.now()\n        }\n      };\n    });\n  }, []);\n\n  // Initialize data on component mount\n  useEffect(() => {\n    initializePortfolioData();\n  }, [initializePortfolioData]);\n\n  // Set up WebSocket listeners\n  useEffect(() => {\n    if (isConnected) {\n      on('tradeExecuted', handleTradeExecuted);\n      on('marketData', handleMarketData);\n\n      return () => {\n        off('tradeExecuted', handleTradeExecuted);\n        off('marketData', handleMarketData);\n      };\n    }\n  }, [isConnected, handleTradeExecuted, handleMarketData, on, off]);\n\n  // Periodic refresh for data that might be stale\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setLastUpdate(Date.now());\n    }, refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [refreshInterval]);\n\n  if (isLoading || !portfolioData) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {[...Array(4)].map((_, i) => (\n          <div key={i} className=\"trading-card animate-pulse\">\n            <div className=\"h-20 bg-neutral-200 rounded\"></div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n\n  const formatPercent = (value: number) => {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`;\n  };\n\n  const getChangeColor = (value: number) => {\n    return value >= 0 ? 'text-green-600' : 'text-red-600';\n  };\n\n  const getChangeBgColor = (value: number) => {\n    return value >= 0 ? 'bg-green-100' : 'bg-red-100';\n  };\n\n  const getChangeIcon = (value: number) => {\n    return value >= 0 ? (\n      <TrendingUp className=\"h-5 w-5 text-green-600\" />\n    ) : (\n      <TrendingDown className=\"h-5 w-5 text-red-600\" />\n    );\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Connection Status */}\n      <div className=\"flex items-center justify-between text-sm text-neutral-500\">\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span>{isConnected ? 'Live updates active' : 'Offline mode'}</span>\n        </div>\n        <span>Last update: {new Date(lastUpdate).toLocaleTimeString()}</span>\n      </div>\n\n      {/* Portfolio Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {/* Total Portfolio Value */}\n        <div className=\"trading-card\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-neutral-500 mb-1\">\n                Total Portfolio\n              </div>\n              <div className=\"text-2xl font-bold text-neutral-800\">\n                {formatCurrency(portfolioData.totalValue.value)}\n              </div>\n              <div className={`text-sm font-medium ${getChangeColor(portfolioData.totalValue.changePercent)}`}>\n                {formatPercent(portfolioData.totalValue.changePercent)}\n              </div>\n            </div>\n            <div className={`p-2 rounded-full ${getChangeBgColor(portfolioData.totalValue.changePercent)}`}>\n              <Wallet className=\"h-6 w-6 text-blue-600\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Day P&L */}\n        <div className=\"trading-card\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-neutral-500 mb-1\">\n                Today's P&L\n              </div>\n              <div className=\"text-2xl font-bold text-neutral-800\">\n                {formatCurrency(portfolioData.dayPnL.value)}\n              </div>\n              <div className={`text-sm font-medium ${getChangeColor(portfolioData.dayPnL.changePercent)}`}>\n                {formatPercent(portfolioData.dayPnL.changePercent)}\n              </div>\n            </div>\n            <div className={`p-2 rounded-full ${getChangeBgColor(portfolioData.dayPnL.changePercent)}`}>\n              {getChangeIcon(portfolioData.dayPnL.changePercent)}\n            </div>\n          </div>\n        </div>\n\n        {/* Unrealized P&L */}\n        <div className=\"trading-card\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-neutral-500 mb-1\">\n                Unrealized P&L\n              </div>\n              <div className=\"text-2xl font-bold text-neutral-800\">\n                {formatCurrency(portfolioData.unrealizedPnL.value)}\n              </div>\n              <div className={`text-sm font-medium ${getChangeColor(portfolioData.unrealizedPnL.changePercent)}`}>\n                {formatPercent(portfolioData.unrealizedPnL.changePercent)}\n              </div>\n            </div>\n            <div className={`p-2 rounded-full ${getChangeBgColor(portfolioData.unrealizedPnL.changePercent)}`}>\n              <BarChart3 className=\"h-6 w-6 text-purple-600\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Open Positions */}\n        <div className=\"trading-card\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-neutral-500 mb-1\">\n                Open Positions\n              </div>\n              <div className=\"text-2xl font-bold text-neutral-800\">\n                {portfolioData.openPositions}\n              </div>\n              <div className=\"text-sm text-neutral-500\">\n                {activeStrategies.length} strategies active\n              </div>\n            </div>\n            <div className=\"p-2 rounded-full bg-orange-100\">\n              <Target className=\"h-6 w-6 text-orange-600\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Detailed Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"trading-card\">\n          <h4 className=\"text-lg font-medium text-neutral-800 mb-3\">Available Balance</h4>\n          <div className=\"text-xl font-bold text-neutral-800\">\n            {formatCurrency(portfolioData.availableBalance.value)}\n          </div>\n          <div className=\"text-sm text-neutral-500 mt-1\">\n            Ready for trading\n          </div>\n        </div>\n\n        <div className=\"trading-card\">\n          <h4 className=\"text-lg font-medium text-neutral-800 mb-3\">Realized P&L</h4>\n          <div className={`text-xl font-bold ${getChangeColor(portfolioData.realizedPnL.value)}`}>\n            {formatCurrency(portfolioData.realizedPnL.value)}\n          </div>\n          <div className=\"text-sm text-neutral-500 mt-1\">\n            Closed positions\n          </div>\n        </div>\n\n        <div className=\"trading-card\">\n          <h4 className=\"text-lg font-medium text-neutral-800 mb-3\">Total Equity</h4>\n          <div className=\"text-xl font-bold text-neutral-800\">\n            {formatCurrency(portfolioData.totalEquity)}\n          </div>\n          <div className=\"text-sm text-neutral-500 mt-1\">\n            Including unrealized\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimePortfolio;","import {\n  CategoryScale,\n  Chart as ChartJS,\n  Legend,\n  LineElement,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip\n} from 'chart.js';\nimport {\n  Activity,\n  Clock,\n  Wifi,\n  WifiOff\n} from 'lucide-react';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport LiveDataDashboard from '../components/dashboard/LiveDataDashboard';\nimport RealTimeAlerts from '../components/dashboard/RealTimeAlerts';\nimport RealTimePortfolio from '../components/dashboard/RealTimePortfolio';\nimport RecentTrades from '../components/dashboard/RecentTrades';\nimport StrategyPerformance from '../components/dashboard/StrategyPerformance';\nimport { useTradingContext } from '../hooks/useTradingContext';\nimport { useWebSocket } from '../services/websocketService';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface RealTimeMetric {\n  timestamp: number;\n  value: number;\n  change: number;\n  changePercent: number;\n}\n\n// Interface for future alert functionality\n// interface LiveAlert {\n//   id: string;\n//   type: 'success' | 'warning' | 'error' | 'info';\n//   message: string;\n//   timestamp: number;\n//   acknowledged: boolean;\n// }\n\nconst LiveTradingDashboard: React.FC = () => {\n  const {\n    // marketData,\n    strategies,\n    // activeStrategies,\n    trades\n  } = useTradingContext();\n\n  const {\n    connectionState: _connectionState,\n    isConnected,\n    on,\n    off\n  } = useWebSocket();\n\n  const [priceHistory, setPriceHistory] = useState<RealTimeMetric[]>([]);\n  const [selectedPair, setSelectedPair] = useState<string>('BTC-USDT');\n  const [isLiveMode, setIsLiveMode] = useState<boolean>(false);\n\n  // Available trading pairs for live monitoring\n  const tradingPairs = [\n    'BTC-USDT', 'ETH-USDT', 'SOL-USDT', 'XRP-USDT',\n    'ADA-USDT', 'DOGE-USDT', 'MATIC-USDT', 'DOT-USDT'\n  ];\n\n  // Handle real-time market data\n  const handleMarketData = useCallback((payload: unknown) => {\n    const d = (payload ?? {}) as Record<string, unknown>;\n    const toNum = (v: unknown, def = 0): number =>\n      typeof v === 'number' ? v : typeof v === 'string' ? parseFloat(v) || def : def;\n\n    const pair = typeof d.pair === 'string' ? d.pair : '';\n    if (pair === selectedPair)\n    {\n      const newMetric: RealTimeMetric = {\n        timestamp: typeof d.timestamp === 'number' ? d.timestamp : Date.now(),\n        value: toNum(d.close, toNum(d.price)),\n        change: toNum(d.change),\n        changePercent: toNum(d.changePercent),\n      };\n\n      // Update real-time price data for this pair\n      // Note: This would be used by a price display component\n\n      // Update price history (keep last 50 points)\n      setPriceHistory((prev) => {\n        const updated = [...prev, newMetric];\n        return updated.slice(-50);\n      });\n    }\n  }, [selectedPair]);\n\n  // Handle real-time trade execution\n  const handleTradeExecuted = useCallback((_tradeData: unknown) => {\n    // This will be handled by the RealTimeAlerts component\n    // console.log('Trade executed:', tradeData);\n  }, []);\n\n  // Set up WebSocket event listeners\n  useEffect(() => {\n    if (isLiveMode && isConnected)\n    {\n      on('marketData', handleMarketData);\n      on('tradeExecuted', handleTradeExecuted);\n\n      return () => {\n        off('marketData', handleMarketData);\n        off('tradeExecuted', handleTradeExecuted);\n      };\n    }\n  }, [isLiveMode, isConnected, handleMarketData, handleTradeExecuted, on, off]);\n\n  // Toggle live mode\n  const toggleLiveMode = () => {\n    setIsLiveMode(!isLiveMode);\n    if (!isLiveMode)\n    {\n      // Clear existing data when starting live mode\n      setPriceHistory([]);\n    }\n  };\n\n  // Format chart data for real-time price chart\n  const formatPriceChartData = () => {\n    const labels = priceHistory.map(point =>\n      new Date(point.timestamp).toLocaleTimeString()\n    );\n\n    return {\n      labels,\n      datasets: [\n        {\n          label: `${selectedPair} Price`,\n          data: priceHistory.map(point => point.value),\n          borderColor: 'rgb(59, 130, 246)',\n          backgroundColor: 'rgba(59, 130, 246, 0.1)',\n          borderWidth: 2,\n          fill: true,\n          tension: 0.1\n        }\n      ]\n    };\n  };\n\n  // Chart options\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: `Real-time ${selectedPair} Price`\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n      }\n    },\n    animation: {\n      duration: 0 // No animation for real-time updates\n    }\n  };\n\n  return (\n    <div className=\"container-responsive\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h1 className=\"text-2xl font-bold text-neutral-800\">Real-time Trading Dashboard</h1>\n\n        <div className=\"flex items-center space-x-4\">\n          {/* Connection Status */}\n          <div className=\"flex items-center space-x-2\">\n            {isConnected ? (\n              <Wifi className=\"h-5 w-5 text-green-500\" />\n            ) : (\n              <WifiOff className=\"h-5 w-5 text-red-500\" />\n            )}\n            <span className=\"text-sm text-neutral-600\">\n              {isConnected ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n\n          {/* Pair Selector */}\n          <select\n            aria-label=\"Select trading pair\"\n            value={selectedPair}\n            onChange={(e) => setSelectedPair(e.target.value)}\n            className=\"block w-32 px-3 py-2 border border-neutral-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n          >\n            {tradingPairs.map(pair => (\n              <option key={pair} value={pair}>{pair}</option>\n            ))}\n          </select>\n\n          {/* Live Mode Toggle */}\n          <button\n            onClick={toggleLiveMode}\n            className={`flex items-center space-x-2 px-4 py-2 rounded-md font-medium transition-colors ${isLiveMode\n                ? 'bg-red-600 text-white hover:bg-red-700'\n                : 'bg-green-600 text-white hover:bg-green-700'\n              }`}\n          >\n            <Activity size={16} />\n            <span>{isLiveMode ? 'Stop Live' : 'Start Live'}</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Real-time Portfolio Overview */}\n      <div className=\"mb-6\">\n        <RealTimePortfolio />\n      </div>\n\n      {/* Real-time Price Chart and Alerts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n        {/* Real-time Price Chart */}\n        <div className=\"lg:col-span-2 trading-card\">\n          <h3 className=\"text-lg font-medium mb-4\">Real-time Price Movement</h3>\n          <div className=\"h-64\">\n            {priceHistory.length > 0 ? (\n              <Line data={formatPriceChartData()} options={chartOptions} />\n            ) : (\n              <div className=\"flex items-center justify-center h-full\">\n                <div className=\"text-center\">\n                  <Clock className=\"h-12 w-12 text-neutral-400 mx-auto mb-2\" />\n                  <p className=\"text-text-muted\">\n                    {isLiveMode ? 'Waiting for real-time data...' : 'Start live mode to see real-time updates'}\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Live Alerts */}\n        <div className=\"trading-card\">\n          <RealTimeAlerts maxAlerts={10} />\n        </div>\n      </div>\n\n      {/* Advanced Live Data Dashboard */}\n      <div className=\"mb-6\">\n        <LiveDataDashboard />\n      </div>\n\n      {/* Strategy Performance and Recent Trades */}\n      <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\n        <div className=\"trading-card\">\n          <h3 className=\"text-lg font-medium mb-4\">Live Strategy Performance</h3>\n          <StrategyPerformance strategies={strategies} />\n        </div>\n\n        <div className=\"trading-card\">\n          <h3 className=\"text-lg font-medium mb-4\">Recent Live Trades</h3>\n          <RecentTrades trades={trades} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LiveTradingDashboard;\n"],"names":["Tabs","defaultValue","value","onValueChange","className","children","activeTab","setActiveTab","React.useState","React.useEffect","handleTabChange","tabValue","jsx","cn","React.Children","child","React.isValidElement","TabsList","React.cloneElement","TabsContent","onTabChange","TabsTrigger","typedChild","active","onSelect","BrowserEventEmitter","__publicField","event","callback","data","cb","defaultLiveDataConfig","dataCache","liveDataEvents","LiveDataService","config","key","maxAgeMs","entry","axios","ws","token","endpoint","poloniexWs","parsedData","error","retryCount","response","source","message","msg","td","asStr","v","def","marketData","dataPoint","buffer","lastUpdate","symbol","prices","d","mean","sum","price","squaredDiffs","variance","diff","stdDev","cacheKey","normalized","p","baseline","zScore","isAnomaly","confidence","interval","limit","cached","processedData","candle","point","processed","orderBook","bid","ask","trades","trade","summary","level","levels","liveDataService","LiveDataDashboard","setMarketData","useState","setOrderBook","setTrades","marketSummary","setMarketSummary","selectedSymbol","setSelectedSymbol","timeframe","setTimeframe","isLoading","setIsLoading","setError","anomalies","setAnomalies","serviceStatus","setServiceStatus","setConfig","CHART_COLORS","symbols","timeframes","fetchMarketData","useCallback","anomalyPoints","err","fetchOrderBook","book","fetchTrades","tradeData","fetchMarketSummary","toggleLiveDataService","updateConfig","newConfig","updatedConfig","useEffect","handleDataProcessed","prevData","newData","prevAnomalies","handleServiceStarted","handleServiceStopped","orderBookInterval","tradesInterval","summaryInterval","formatChartData","jsxs","e","tf","Fragment","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","index","anomaly","RealTimeAlerts","maxAlerts","initialSoundEnabled","onAlertClick","isConnected","on","off","useWebSocket","activeStrategies","useTradingContext","alerts","setAlerts","soundEnabled","setSoundEnabled","showSettings","setShowSettings","alertRules","setAlertRules","createAlert","type","category","title","priority","addAlert","alert","prev","newAlerts","playAlertSound","AudioContextClass","audioContext","oscillator","gainNode","frequencies","handleMarketData","args","changePercent","handleTradeExecuted","isProfit","handleConnectionChange","connectionState","previousActiveCount","a","currentActiveCount","acknowledgeAlert","alertId","removeAlert","clearAllAlerts","acknowledgeAllAlerts","getAlertIcon","CheckCircle","AlertTriangle","XCircle","Info","getAlertBgColor","base","getPriorityColor","unacknowledgedCount","Bell","Volume2","VolumeX","Settings","X","RealTimePortfolio","refreshInterval","accountBalance","portfolioData","setPortfolioData","setLastUpdate","initializePortfolioData","totalValue","unrealizedPnL","todayPnL","availableBalance","baseMetric","tradeValue","profit","isPositive","marketChange","portfolioImpact","_","i","formatCurrency","formatPercent","getChangeColor","getChangeBgColor","getChangeIcon","TrendingUp","TrendingDown","Wallet","BarChart3","Target","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","LiveTradingDashboard","strategies","priceHistory","setPriceHistory","selectedPair","setSelectedPair","isLiveMode","setIsLiveMode","tradingPairs","payload","toNum","newMetric","_tradeData","toggleLiveMode","formatPriceChartData","chartOptions","Wifi","WifiOff","pair","Activity","Clock","StrategyPerformance","RecentTrades"],"mappings":"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"}