{"version":3,"file":"TransactionHistory-Dt2QGyWT.js","sources":["../../src/pages/TransactionHistory.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Search, Filter, Download, ArrowUpDown, FileText } from 'lucide-react';\n\ninterface Transaction {\n  id: string;\n  timestamp: Date;\n  type: 'deposit' | 'withdrawal' | 'trade' | 'fee' | 'interest';\n  currency: string;\n  amount: number;\n  status: 'completed' | 'pending' | 'failed';\n  txHash?: string;\n  description: string;\n  balance: number;\n}\n\ninterface TransactionFilters {\n  startDate: string;\n  endDate: string;\n  currency: string;\n  type: string;\n  status: string;\n}\n\nconst TransactionHistory: React.FC = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [filteredTransactions, setFilteredTransactions] = useState<Transaction[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filters, setFilters] = useState<TransactionFilters>({\n    startDate: '',\n    endDate: '',\n    currency: '',\n    type: '',\n    status: ''\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const [sortField, setSortField] = useState<keyof Transaction>('timestamp');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(20);\n\n  // Generate mock transaction data\n  useEffect(() => {\n    const pickOne = <T,>(arr: readonly T[], fallback: T): T => {\n      if (arr.length === 0) return fallback;\n      const idx = Math.floor(Math.random() * arr.length);\n      // Guard for noUncheckedIndexedAccess returning possibly undefined\n      return arr[idx] ?? fallback;\n    };\n\n    const generateMockTransactions = (): Transaction[] => {\n      const mockData: Transaction[] = [];\n      const types: Transaction['type'][] = ['deposit', 'withdrawal', 'trade', 'fee', 'interest'];\n      const currencies = ['USDT', 'BTC', 'ETH', 'ADA', 'DOT'];\n      const statuses: Transaction['status'][] = ['completed', 'pending', 'failed'];\n\n      for (let i = 0; i < 150; i++) {\n        const type = pickOne<Transaction['type']>(types, 'trade');\n        const currency = pickOne<string>(currencies, 'USDT');\n        const amount = type === 'fee' ? -Math.random() * 10 : (Math.random() - 0.5) * 1000;\n        const timestamp = new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000);\n\n        mockData.push({\n          id: `txn_${i.toString().padStart(6, '0')}`,\n          timestamp,\n          type,\n          currency,\n          amount,\n          status: pickOne<Transaction['status']>(statuses, 'completed'),\n          txHash: type === 'deposit' || type === 'withdrawal' ? \n            `0x${Math.random().toString(16).slice(2, 42)}` : undefined,\n          description: getTransactionDescription(type, currency, amount),\n          balance: 10000 + Math.random() * 50000\n        });\n      }\n\n      return mockData.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n    };\n\n    setTransactions(generateMockTransactions());\n  }, []);\n\n  // Helper function to generate transaction descriptions\n  const getTransactionDescription = (type: Transaction['type'], currency: string, amount: number): string => {\n    switch (type) {\n      case 'deposit':\n        return `Deposit ${currency} to account`;\n      case 'withdrawal':\n        return `Withdraw ${currency} from account`;\n      case 'trade':\n        return `${amount > 0 ? 'Buy' : 'Sell'} ${currency}`;\n      case 'fee':\n        return `Trading fee for ${currency}`;\n      case 'interest':\n        return `Interest earned on ${currency}`;\n      default:\n        return `${type} transaction`;\n    }\n  };\n\n  // Apply filters and search\n  useEffect(() => {\n    let filtered = [...transactions];\n\n    // Apply search\n    if (searchQuery) {\n      filtered = filtered.filter(transaction => \n        transaction.id.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        transaction.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        transaction.currency.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        transaction.txHash?.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    // Apply filters\n    if (filters.startDate) {\n      filtered = filtered.filter(transaction => \n        transaction.timestamp >= new Date(filters.startDate)\n      );\n    }\n\n    if (filters.endDate) {\n      filtered = filtered.filter(transaction => \n        transaction.timestamp <= new Date(filters.endDate + 'T23:59:59')\n      );\n    }\n\n    if (filters.currency) {\n      filtered = filtered.filter(transaction => \n        transaction.currency === filters.currency\n      );\n    }\n\n    if (filters.type) {\n      filtered = filtered.filter(transaction => \n        transaction.type === filters.type\n      );\n    }\n\n    if (filters.status) {\n      filtered = filtered.filter(transaction => \n        transaction.status === filters.status\n      );\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      let aValue = a[sortField];\n      let bValue = b[sortField];\n\n      if (aValue instanceof Date) aValue = aValue.getTime();\n      if (bValue instanceof Date) bValue = bValue.getTime();\n\n      if (sortDirection === 'asc') {\n        return (aValue ?? 0) > (bValue ?? 0) ? 1 : -1;\n      } else {\n        return (aValue ?? 0) < (bValue ?? 0) ? 1 : -1;\n      }\n    });\n\n    setFilteredTransactions(filtered);\n    setCurrentPage(1);\n  }, [transactions, searchQuery, filters, sortField, sortDirection]);\n\n  // Pagination\n  const paginatedTransactions = useMemo(() => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    return filteredTransactions.slice(startIndex, startIndex + itemsPerPage);\n  }, [filteredTransactions, currentPage, itemsPerPage]);\n\n  const totalPages = Math.ceil(filteredTransactions.length / itemsPerPage);\n\n  const handleSort = (field: keyof Transaction) => {\n    if (sortField === field) {\n      setSortDirection(prev => prev === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('desc');\n    }\n  };\n\n  const exportToCSV = () => {\n    const csvData = filteredTransactions.map(transaction => ({\n      ID: transaction.id,\n      Date: transaction.timestamp.toISOString(),\n      Type: transaction.type,\n      Currency: transaction.currency,\n      Amount: transaction.amount,\n      Status: transaction.status,\n      Description: transaction.description,\n      Balance: transaction.balance,\n      TxHash: transaction.txHash || ''\n    }));\n\n    if (csvData.length === 0) {\n      return;\n    }\n\n    const header = Object.keys(csvData[0] ?? {}).join(',');\n    const rows = csvData.map(row => Object.values(row).join(','));\n    const csvContent = [header, ...rows].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `transaction-history-${new Date().toISOString().split('T')[0]}.csv`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const getStatusColor = (status: Transaction['status']) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getTypeColor = (type: Transaction['type']) => {\n    switch (type) {\n      case 'deposit':\n        return 'text-green-600';\n      case 'withdrawal':\n        return 'text-red-600';\n      case 'trade':\n        return 'text-brand-cyan';\n      case 'fee':\n        return 'text-orange-600';\n      case 'interest':\n        return 'text-purple-600';\n      default:\n        return 'text-text-secondary';\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-text-primary flex items-center\">\n          <FileText className=\"w-8 h-8 mr-3 text-brand-cyan\" />\n          Transaction History\n        </h1>\n        <p className=\"mt-2 text-text-secondary\">\n          View and manage your complete transaction history\n        </p>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"bg-bg-tertiary p-6 rounded-lg shadow mb-6\">\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search transactions...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n          <div className=\"flex gap-2\">\n            <button\n              onClick={() => setShowFilters(!showFilters)}\n              className=\"flex items-center px-4 py-2 border border-gray-300 rounded-md hover:bg-bg-secondary\"\n            >\n              <Filter className=\"w-4 h-4 mr-2\" />\n              Filters\n            </button>\n            <button\n              onClick={exportToCSV}\n              disabled={filteredTransactions.length === 0}\n              className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export CSV\n            </button>\n          </div>\n        </div>\n\n        {/* Filter Controls */}\n        {showFilters && (\n          <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 pt-4 border-t\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Start Date</label>\n              <input\n                type=\"date\"\n                value={filters.startDate}\n                onChange={(e) => setFilters({...filters, startDate: e.target.value})}\n                className=\"w-full p-2 border border-gray-300 rounded-md text-sm\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">End Date</label>\n              <input\n                type=\"date\"\n                value={filters.endDate}\n                onChange={(e) => setFilters({...filters, endDate: e.target.value})}\n                className=\"w-full p-2 border border-gray-300 rounded-md text-sm\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Currency</label>\n              <select\n                value={filters.currency}\n                onChange={(e) => setFilters({...filters, currency: e.target.value})}\n                className=\"w-full p-2 border border-gray-300 rounded-md text-sm\"\n              >\n                <option value=\"\">All Currencies</option>\n                <option value=\"USDT\">USDT</option>\n                <option value=\"BTC\">BTC</option>\n                <option value=\"ETH\">ETH</option>\n                <option value=\"ADA\">ADA</option>\n                <option value=\"DOT\">DOT</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type</label>\n              <select\n                value={filters.type}\n                onChange={(e) => setFilters({...filters, type: e.target.value})}\n                className=\"w-full p-2 border border-gray-300 rounded-md text-sm\"\n              >\n                <option value=\"\">All Types</option>\n                <option value=\"deposit\">Deposit</option>\n                <option value=\"withdrawal\">Withdrawal</option>\n                <option value=\"trade\">Trade</option>\n                <option value=\"fee\">Fee</option>\n                <option value=\"interest\">Interest</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n              <select\n                value={filters.status}\n                onChange={(e) => setFilters({...filters, status: e.target.value})}\n                className=\"w-full p-2 border border-gray-300 rounded-md text-sm\"\n              >\n                <option value=\"\">All Statuses</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"pending\">Pending</option>\n                <option value=\"failed\">Failed</option>\n              </select>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Transaction Table */}\n      <div className=\"bg-bg-tertiary rounded-lg shadow overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-bg-secondary\">\n              <tr>\n                {[\n                  { key: 'timestamp', label: 'Date/Time' },\n                  { key: 'id', label: 'Transaction ID' },\n                  { key: 'type', label: 'Type' },\n                  { key: 'currency', label: 'Currency' },\n                  { key: 'amount', label: 'Amount' },\n                  { key: 'status', label: 'Status' },\n                  { key: 'description', label: 'Description' }\n                ].map((header) => (\n                  <th\n                    key={header.key}\n                    onClick={() => handleSort(header.key as keyof Transaction)}\n                    className=\"px-6 py-3 text-left text-xs font-medium text-text-muted uppercase tracking-wider cursor-pointer hover:bg-gray-100\"\n                  >\n                    <div className=\"flex items-center\">\n                      {header.label}\n                      <ArrowUpDown className=\"w-3 h-3 ml-1\" />\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"bg-bg-tertiary divide-y divide-gray-200\">\n              {paginatedTransactions.map((transaction) => (\n                <tr key={transaction.id} className=\"hover:bg-bg-secondary\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-text-primary\">\n                    {transaction.timestamp.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-mono text-text-secondary\">\n                    {transaction.id}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                    <span className={`font-medium capitalize ${getTypeColor(transaction.type)}`}>\n                      {transaction.type}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-text-primary\">\n                    {transaction.currency}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                    <span className={`font-medium ${transaction.amount >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                      {transaction.amount >= 0 ? '+' : ''}{transaction.amount.toFixed(6)}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(transaction.status)}`}>\n                      {transaction.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 text-sm text-text-secondary\">\n                    {transaction.description}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination */}\n        {totalPages > 1 && (\n          <div className=\"bg-bg-tertiary px-6 py-3 border-t border-border-subtle flex items-center justify-between\">\n            <div className=\"flex-1 flex justify-between sm:hidden\">\n              <button\n                onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                disabled={currentPage === 1}\n                className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-bg-elevated hover:bg-bg-secondary disabled:opacity-50\"\n              >\n                Previous\n              </button>\n              <button\n                onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                disabled={currentPage === totalPages}\n                className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-bg-elevated hover:bg-bg-secondary disabled:opacity-50\"\n              >\n                Next\n              </button>\n            </div>\n            <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-700\">\n                  Showing{' '}\n                  <span className=\"font-medium\">{(currentPage - 1) * itemsPerPage + 1}</span>\n                  {' '}to{' '}\n                  <span className=\"font-medium\">\n                    {Math.min(currentPage * itemsPerPage, filteredTransactions.length)}\n                  </span>\n                  {' '}of{' '}\n                  <span className=\"font-medium\">{filteredTransactions.length}</span>\n                  {' '}results\n                </p>\n              </div>\n              <div>\n                <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                  <button\n                    onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                    disabled={currentPage === 1}\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-bg-elevated text-sm font-medium text-text-muted hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Previous\n                  </button>\n                  {[...Array(Math.min(5, totalPages))].map((_, i) => {\n                    const page = i + 1;\n                    return (\n                      <button\n                        key={page}\n                        onClick={() => setCurrentPage(page)}\n                        className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n                          currentPage === page\n                            ? 'z-10 bg-brand-cyan/10 border-brand-cyan text-brand-cyan'\n                            : 'bg-white border-gray-300 text-text-muted hover:bg-gray-50'\n                        }`}\n                      >\n                        {page}\n                      </button>\n                    );\n                  })}\n                  <button\n                    onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                    disabled={currentPage === totalPages}\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-text-muted hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Next\n                  </button>\n                </nav>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"mt-6 bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-lg font-medium text-text-primary mb-4\">Summary</h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-text-primary\">{filteredTransactions.length}</div>\n            <div className=\"text-sm text-gray-500\">Total Transactions</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {filteredTransactions.filter(t => t.amount > 0).length}\n            </div>\n            <div className=\"text-sm text-gray-500\">Credits</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">\n              {filteredTransactions.filter(t => t.amount < 0).length}\n            </div>\n            <div className=\"text-sm text-gray-500\">Debits</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {new Set(filteredTransactions.map(t => t.currency)).size}\n            </div>\n            <div className=\"text-sm text-gray-500\">Currencies</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionHistory;\n"],"names":["TransactionHistory","transactions","setTransactions","useState","filteredTransactions","setFilteredTransactions","searchQuery","setSearchQuery","filters","setFilters","showFilters","setShowFilters","sortField","setSortField","sortDirection","setSortDirection","currentPage","setCurrentPage","itemsPerPage","useEffect","pickOne","arr","fallback","idx","mockData","types","currencies","statuses","i","type","currency","amount","timestamp","getTransactionDescription","a","b","filtered","transaction","aValue","bValue","paginatedTransactions","useMemo","startIndex","totalPages","handleSort","field","prev","exportToCSV","csvData","header","rows","row","csvContent","blob","url","link","getStatusColor","status","getTypeColor","jsxs","jsx","FileText","Search","e","Filter","Download","ArrowUpDown","_","page"],"mappings":"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"}