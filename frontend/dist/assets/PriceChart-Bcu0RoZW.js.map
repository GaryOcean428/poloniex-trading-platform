{"version":3,"file":"PriceChart-Bcu0RoZW.js","sources":["../../src/components/charts/PriceChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale,\n  Filler,\n  ChartOptions,\n  BarController,\n  LineController\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { MarketData } from '@/types';\n\n// Register all chart components to avoid type errors\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  BarController,\n  LineController,\n  Filler,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\ninterface PriceChartProps {\n  data: MarketData[];\n  pair: string;\n  type?: 'line' | 'candlestick';\n  timeframe?: '1h' | '4h' | '1d';\n}\n\nconst PriceChart: React.FC<PriceChartProps> = ({ data, pair }) => {\n  const filteredData = data.filter(item => item.pair === pair);\n  \n  const labels = filteredData.map(item => {\n    const date = new Date(item.timestamp);\n    return date.toLocaleTimeString();\n  });\n  \n  // Define chart data with proper typing\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: `${pair} Price`,\n        data: filteredData.map(item => item.close),\n        fill: true,\n        borderColor: 'rgb(59, 130, 246)',\n        backgroundColor: 'rgba(59, 130, 246, 0.5)',\n        tension: 0.2,\n        yAxisID: 'price',\n      },\n    ],\n  };\n  \n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const dataIndex = context.dataIndex;\n            const dataPoint = filteredData[dataIndex];\n            if (!dataPoint) {\n              return [`${pair}: No data`];\n            }\n            return [\n              `Price: $${dataPoint.close.toFixed(2)}`,\n              `High: $${dataPoint.high.toFixed(2)}`,\n              `Low: $${dataPoint.low.toFixed(2)}`,\n              `Volume: ${dataPoint.volume.toFixed(2)}`\n            ];\n          }\n        }\n      }\n    },\n    scales: {\n      price: {\n        type: 'linear' as const,\n        beginAtZero: false,\n        position: 'left' as const,\n        grid: {\n          display: true\n        }\n      }\n    },\n  };\n  \n  return <Line options={options} data={chartData} height={80} />;\n};\n\nexport default PriceChart;"],"names":["ChartJS","CategoryScale","LinearScale","PointElement","BarElement","BarController","LineController","Filler","LineElement","Title","Tooltip","Legend","TimeScale","PriceChart","data","pair","filteredData","item","chartData","options","context","dataIndex","dataPoint","jsx","Line"],"mappings":"+KAqBAA,EAAQ,SACNC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CACF,EASA,MAAMC,EAAwC,CAAC,CAAE,KAAAC,EAAM,KAAAC,KAAW,CAChE,MAAMC,EAAeF,EAAK,OAAOG,GAAQA,EAAK,OAASF,CAAI,EAQrDG,EAAY,CAChB,OAPaF,EAAa,IAAIC,GACjB,IAAI,KAAKA,EAAK,SAAS,EACxB,mBAAA,CACb,EAKC,SAAU,CACR,CACE,MAAO,GAAGF,CAAI,SACd,KAAMC,EAAa,IAAIC,GAAQA,EAAK,KAAK,EACzC,KAAM,GACN,YAAa,oBACb,gBAAiB,0BACjB,QAAS,GACT,QAAS,OAAA,CACX,CACF,EAGIE,EAAgC,CACpC,WAAY,GACZ,QAAS,CACP,OAAQ,CACN,SAAU,KAAA,EAEZ,MAAO,CACL,QAAS,EAAA,EAEX,QAAS,CACP,UAAW,CACT,MAAO,SAASC,EAAS,CACvB,MAAMC,EAAYD,EAAQ,UACpBE,EAAYN,EAAaK,CAAS,EACxC,OAAKC,EAGE,CACL,WAAWA,EAAU,MAAM,QAAQ,CAAC,CAAC,GACrC,UAAUA,EAAU,KAAK,QAAQ,CAAC,CAAC,GACnC,SAASA,EAAU,IAAI,QAAQ,CAAC,CAAC,GACjC,WAAWA,EAAU,OAAO,QAAQ,CAAC,CAAC,EAAA,EAN/B,CAAC,GAAGP,CAAI,WAAW,CAQ9B,CAAA,CACF,CACF,EAEF,OAAQ,CACN,MAAO,CACL,KAAM,SACN,YAAa,GACb,SAAU,OACV,KAAM,CACJ,QAAS,EAAA,CACX,CACF,CACF,EAGF,OAAOQ,EAAAA,IAACC,EAAA,CAAK,QAAAL,EAAkB,KAAMD,EAAW,OAAQ,GAAI,CAC9D"}