{"version":3,"mappings":"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","names":["STORAGE_KEYS","getStorageItem","key","defaultValue","item","setStorageItem","value","isStorageAvailable","test","defaultSettings","EXTENDED_STORAGE_KEYS","SettingsContext","createContext","SettingsProvider","children","canUseStorage","getInitialSettings","settings","setSettings","useState","hasStoredCredentials","setHasStoredCredentials","useEffect","updateSettings","newSettings","prev","updated","storageKey","resetSettings","exportSettings","exportableSettings","importSettings","settingsJson","importedSettings","jsx","useSettings","context","useContext","useResponsiveNav","isMobileMenuOpen","setIsMobileMenuOpen","screenSize","setScreenSize","getScreenSize","useCallback","width","updateScreenSize","newScreenSize","toggleMobileMenu","closeMobileMenu","handleKeyPress","e","handleClickOutside","target","mobileNav","mobileToggle","isAuthenticated","getAccessToken","expiry","expiryTime","clearAuthData","storeAuthData","authData","storeAuthDataLegacy","token","expiresIn","getRefreshToken","getUserData","userData","shouldRefreshToken","fiveMinutes","API_BASE_URL","isUser","isAxiosError","error","hasAxiosLikeResponse","_AuthService","__publicField","credentials","response","axios","mapped","result","refreshToken","currentUser","status","parsed","method","endpoint","data","newToken","config","retryError","AuthService","authService","AuthContext","AuthProvider","isLoggedIn","setIsLoggedIn","user","setUser","loading","setLoading","authenticated","logout","login","usernameOrToken","passwordOrExpiresIn","useAuth","UserProfile","className","jsxs","cn","inputs","twMerge","clsx","Button","React.forwardRef","variant","size","isLoading","props","ref","baseStyles","variants","sizes","Input","type","Label","Select","SelectOption","Slider","onValueChange","handleChange","event","Switch","onCheckedChange","LogoutButton","onSuccess","setIsLoading","handleLogout","MobileNavigation","isOpen","onClose","location","useLocation","navItems","LayoutDashboard","Zap","User","BarChart4","LineChart","MessageSquare","Chrome","Settings","X","Link","Navbar","notifications","isMobile","Fragment","Menu","Bell","LogIn","StrategyType","mockMarketData","_","i","basePrice","volatility","timestamp","open","high","low","close","mockTrades","createJSONStorage","getStorage","options","storage","name","_a","parse","str2","str","newValue","toThenable","fn","input","onFulfilled","_onRejected","_onFulfilled","onRejected","persistImpl","baseOptions","set","get","api","state","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","setItem","savedSetState","replace","configResult","stateFromStorage","hydrate","_b","cb","_a2","postRehydrationCallback","deserializedStorageValue","migration","migrationResult","migrated","migratedState","newOptions","persist","immerImpl","initializer","store","updater","nextState","produce","immer","ENCRYPTION_KEY","encryptData","CryptoJS","decryptData","encryptedData","createEncryptedStorage","defaultState","useAppStore","create","enabled","show","pair","toast","newToast","id","index","t","IS_WEBCONTAINER","IS_LOCAL_DEV","getEnvVariable","fallback","env","__vite_import_meta_env__","getPoloniexApiKey","getPoloniexApiSecret","getApiBaseUrl","service","customApiUrl","nextPublicApiUrl","isMockModeForced","forceMock","isMockModeDisabled","disableMock","shouldUseMockMode","hasCredentials","getBackendUrl","hostname","protocol","envUrl","railwayPublicDomain","railwayPrivateDomain","getAuthToken","createAuthenticatedAxios","PoloniexConnectionError","message","PoloniexAuthenticationError","RATE_LIMITS","safeErrorHandler","_PoloniexApiClient","storeState","now","limit","queue","oneSecondAgo","oldestRequest","waitTime","resolve","count","startDate","endDate","cacheKey","mockData","candle","start","end","hourMs","time","_pair","_side","_type","_quantity","_price","orderId","_triggerPrice","_callback","PoloniexApiClient","poloniexApi","ConnectionState","ReconnectionStrategy","ClientWebSocketEvents","PoloniexTopics","getWebSocketUrl","explicitWsUrl","backendUrl","getWebSocketConfig","validateWebSocketUrl","url","getConnectionStrategy","isProduction","define_process_env_default","isRailway","getWebSocketDebugInfo","strategy","ConnectionManager","wsConfig","socketOptions","io","reject","timeout","EventHandlerService","poloniexWs","socket","callback","savedData","subscribeMessage","unsubscribeMessage","subscription","topic","symbols","tickerData","marketData","tradeData","trade","_reason","HealthService","lastPongTime","lastPingTime","pongElapsed","pingMessage","stats","uptime","_timestamp","lastPing","lastPong","ms","ReconnectionService","onReconnect","onConnectionFailed","delay","jitterFactor","params","_WebSocketService","ws","setState","React","isMock","setIsMock","handleStateChange","newState","WebSocketService","webSocketService","useWebSocket","usePoloniexData","initialPair","apiKey","apiSecret","isLiveTrading","setMarketData","trades","setTrades","accountBalance","setAccountBalance","setError","isMockMode","setIsMockMode","fetchFunctionsRef","useRef","mapPoloniexDataToMarketData","mapPoloniexTradeToTrade","tradeInput","toNum","v","n","createdAt","ts","qty","price","fetchMarketData","formattedData","err","fetchTrades","formattedTrades","fetchAccountBalance","refreshApiConnection","newHasCredentials","newMockMode","_err","handleMarketDataUpdate","prevData","existingIndex","updatedData","a","b","handleTradeUpdate","prevTrades","isValidAccountBalance","obj","ensureStrategyType","strategyObj","validTypes","strategyType","lowerType","foundType","TradingContext","TradingProvider","realMarketData","realTrades","normalizedAccountBalance","strategies","setStrategies","activeStrategies","setActiveStrategies","errors","setErrors","addError","clearErrors","errorMessage","addStrategy","removeStrategy","strategyId","toggleStrategyActive","placeOrder","side","quantity","useTradingContext","Sidebar","isDesktop","isCollapsed","setIsCollapsed","Activity","TrendingUp","Receipt","History","AlertCircle","toggleSidebar","ArrowLeft","SkipLinks","usePageVisibility","onVisible","onHidden","gracePeriod","timeoutRef","handleVisibilityChange","WebSocketContext","WebSocketProvider","contextState","setContextState","handleConnectionStateChange","handleError","healthInterval","health","ConnectionHealth","webSocket","isExpanded","setIsExpanded","getHealthStatus","Wifi","Clock","WifiOff","formatUptime","formatLatency","latency","HealthIcon","EnvDebug","isVisible","setIsVisible","isMinimized","setIsMinimized","dismissed","minimized","handleDismiss","handleToggleMinimize","newMinimized","handleShowAgain","envVars","hasApiKey","hasApiSecret","isLiveMode","ConnectionTest","apiStatus","setApiStatus","wsStatus","setWsStatus","apiData","setApiData","apiErrorNotifiedRef","wsErrorNotifiedRef","lastErrorTimeRef","addToast","apiUrl","wsUrl","contentType","preview","text","newSocket","anySocket","getStatusClass","getStatusText","_Logger","level","levels","logEntry","Logger","logger","PWAInstallPrompt","onInstall","onDismiss","isStandalone","setIsStandalone","deferredPrompt","setDeferredPrompt","showPrompt","setShowPrompt","nav","isStandaloneMatchMedia","isNavigatorStandalone","isAndroidReferrer","standalone","handleBeforeInstallPrompt","handleAppInstalled","apps","handleInstall","outcome","useErrorRecovery","hasError","navigate","useNavigate","countdown","setCountdown","timer","ErrorFallback","_errorInfo","errorCount","onReset","navigateToDashboard","showDetails","setShowDetails","isCriticalError","nodeEnv","entry","levelEmoji","errorLog","storageError","label","duration","action","modelName","prediction","confidence","ErrorBoundary","Component","reason","errorInfo","prevState","FallbackComponent","Integration","integrations","setIntegrations","refreshing","setRefreshing","checkIntegrationStatus","mockIntegrations","getStatusIcon","CheckCircle","AlertTriangle","XCircle","getStatusColor","getStatusBg","RefreshCw","integration","ExternalLink","ToastContainer","toasts","removeToast","autoRemovalTimers","scheduleAutoRemoval","toastId","existingTimer","currentToastIds","getIcon","Info","getToastStyles","RouteGuard","isChromeApiAvailable","getChromeRuntime","_ExtensionErrorHandler","originalError","pattern","ExtensionErrorHandler","BrowserCompatibility","extensionId","runtime","conflicts","ext","originalPostMessage","Dashboard","lazy","__vitePreload","LiveTradingDashboard","Strategies","Backtesting","Account","TransactionHistory","TradeHistory","MarketAnalysis","Performance","Chat","ExtensionDownload","Status","Login","NotFound","LoadingSpinner","App","Router","Suspense","Routes","Route","ReactDOM"],"ignoreList":[21,22],"sources":["../../src/utils/storage.ts","../../src/context/SettingsContext.tsx","../../src/hooks/useSettings.ts","../../src/hooks/useResponsiveNav.ts","../../src/utils/auth.ts","../../src/services/authService.ts","../../src/context/AuthContext.tsx","../../src/hooks/useAuth.ts","../../src/components/auth/UserProfile.tsx","../../src/utils/cn.ts","../../src/components/ui/Button.tsx","../../src/components/ui/Input.tsx","../../src/components/ui/Label.tsx","../../src/components/ui/Select.tsx","../../src/components/ui/Slider.tsx","../../src/components/ui/Switch.tsx","../../src/components/auth/LogoutButton.tsx","../../src/components/MobileNavigation.tsx","../../src/components/Navbar.tsx","../../../shared/types/strategy.js","../../src/data/mockData.ts","../../../node_modules/zustand/esm/middleware.mjs","../../../node_modules/zustand/esm/middleware/immer.mjs","../../src/store/index.ts","../../src/utils/environment.ts","../../src/services/poloniexAPI.ts","../../src/types/websocketTypes.ts","../../src/config/websocket.ts","../../src/services/websocket/connectionManager.ts","../../src/services/websocket/eventHandlerService.ts","../../src/services/websocket/healthService.ts","../../src/services/websocket/reconnectionService.ts","../../src/services/websocketService.ts","../../src/hooks/usePoloniexData.ts","../../src/utils/typeGuards.ts","../../src/context/TradingContext.tsx","../../src/hooks/useTradingContext.ts","../../src/components/Sidebar.tsx","../../src/components/SkipLinks.tsx","../../src/hooks/usePageVisibility.ts","../../src/context/WebSocketContext.tsx","../../src/hooks/useWebSocket.ts","../../src/components/ConnectionHealth.tsx","../../src/components/EnvDebug.tsx","../../src/components/ConnectionTest.tsx","../../src/services/logger.ts","../../src/components/PWAInstallPrompt.tsx","../../src/hooks/useErrorRecovery.ts","../../src/components/ErrorFallback.tsx","../../../shared/logger.js","../../src/components/ErrorBoundary.tsx","../../src/components/Integration.tsx","../../src/components/ToastContainer.tsx","../../src/components/RouteGuard.tsx","../../src/utils/chromeExtensionCheck.ts","../../src/utils/extensionErrorHandler.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * Storage utility for managing persistent data\n */\n\n// Define keys for local storage\nexport const STORAGE_KEYS = {\n  API_KEY: 'poloniex_api_key',\n  API_SECRET: 'poloniex_api_secret',\n  IS_LIVE_TRADING: 'poloniex_is_live_trading',\n  NOTIFICATIONS: 'poloniex_notifications',\n  DARK_MODE: 'poloniex_dark_mode',\n  DEFAULT_PAIR: 'poloniex_default_pair',\n  EMAIL_NOTIFICATIONS: 'poloniex_email_notifications',\n  TRADE_NOTIFICATIONS: 'poloniex_trade_notifications',\n  PRICE_ALERTS: 'poloniex_price_alerts',\n  CHAT_NOTIFICATIONS: 'poloniex_chat_notifications',\n  SHOW_EXTENSION: 'poloniex_show_extension'\n};\n\n/**\n * Get a value from local storage\n */\nexport const getStorageItem = <T>(key: string, defaultValue: T): T => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : defaultValue;\n  } catch {\n    // console.error(`Error getting item from storage: ${key}`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Set a value in local storage\n */\nexport const setStorageItem = <T>(key: string, value: T): void => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch {\n    // console.error(`Error setting item in storage: ${key}`, error);\n  }\n};\n\n/**\n * Remove a value from local storage\n */\nexport const removeStorageItem = (key: string): void => {\n  try {\n    localStorage.removeItem(key);\n  } catch {\n    // console.error(`Error removing item from storage: ${key}`, error);\n  }\n};\n\n/**\n * Clear all app related items from local storage\n */\nexport const clearAppStorage = (): void => {\n  try {\n    Object.values(STORAGE_KEYS).forEach(key => {\n      localStorage.removeItem(key);\n    });\n  } catch {\n    // console.error('Error clearing app storage', error);\n  }\n};\n\n/**\n * Check if local storage is available\n */\nexport const isStorageAvailable = (): boolean => {\n  try {\n    const test = '__storage_test__';\n    localStorage.setItem(test, test);\n    localStorage.removeItem(test);\n    return true;\n  } catch {\n    return false;\n  }\n};","import React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport { getStorageItem, setStorageItem, STORAGE_KEYS, isStorageAvailable } from '@/utils/storage';\n\ninterface SettingsContextType {\n  apiKey: string;\n  apiSecret: string;\n  isLiveTrading: boolean;\n  darkMode: boolean;\n  defaultPair: string;\n  emailNotifications: boolean;\n  tradeNotifications: boolean;\n  priceAlerts: boolean;\n  chatNotifications: boolean;\n  showExtension: boolean;\n  chartType: 'candle' | 'line' | 'area';\n  timeframe: '1m' | '5m' | '15m' | '1h' | '4h' | '1d';\n  leverage: number;\n  riskPerTrade: number;\n  stopLossPercent: number;\n  takeProfitPercent: number;\n  trailingStopPercent: number;\n  autoTradingEnabled: boolean;\n  updateSettings: (settings: Partial<SettingsState>) => void;\n  resetSettings: () => void;\n  hasStoredCredentials: boolean;\n  exportSettings: () => string;\n  importSettings: (settingsJson: string) => boolean;\n  mockMode?: boolean; // Added for FuturesContext\n}\n\ninterface SettingsState {\n  apiKey: string;\n  apiSecret: string;\n  isLiveTrading: boolean;\n  darkMode: boolean;\n  defaultPair: string;\n  emailNotifications: boolean;\n  tradeNotifications: boolean;\n  priceAlerts: boolean;\n  chatNotifications: boolean;\n  showExtension: boolean;\n  chartType: 'candle' | 'line' | 'area';\n  timeframe: '1m' | '5m' | '15m' | '1h' | '4h' | '1d';\n  leverage: number;\n  riskPerTrade: number;\n  stopLossPercent: number;\n  takeProfitPercent: number;\n  trailingStopPercent: number;\n  autoTradingEnabled: boolean;\n}\n\nconst defaultSettings: SettingsState = {\n  apiKey: '',\n  apiSecret: '',\n  isLiveTrading: false,\n  darkMode: false,\n  defaultPair: 'BTC-USDT',\n  emailNotifications: true,\n  tradeNotifications: true,\n  priceAlerts: false,\n  chatNotifications: true,\n  showExtension: true,\n  chartType: 'candle',\n  timeframe: '5m',\n  leverage: 1,\n  riskPerTrade: 2,\n  stopLossPercent: 2,\n  takeProfitPercent: 4,\n  trailingStopPercent: 1,\n  autoTradingEnabled: false\n};\n\n// Define storage keys\nconst EXTENDED_STORAGE_KEYS = {\n  ...STORAGE_KEYS,\n  CHART_TYPE: 'poloniex_chart_type',\n  TIMEFRAME: 'poloniex_timeframe',\n  LEVERAGE: 'poloniex_leverage',\n  RISK_PER_TRADE: 'poloniex_risk_per_trade',\n  STOP_LOSS_PERCENT: 'poloniex_stop_loss_percent',\n  TAKE_PROFIT_PERCENT: 'poloniex_take_profit_percent',\n  TRAILING_STOP_PERCENT: 'poloniex_trailing_stop_percent',\n  AUTO_TRADING_ENABLED: 'poloniex_auto_trading_enabled'\n};\n\nconst SettingsContext = createContext<SettingsContextType | undefined>(undefined);\n\nexport { SettingsContext };\n\ninterface SettingsProviderProps {\n  children: ReactNode;\n}\n\nexport const SettingsProvider: React.FC<SettingsProviderProps> = ({ children }) => {\n  // Check if we can access localStorage\n  const canUseStorage = isStorageAvailable();\n  \n  // Get initial settings from localStorage or environment variables\n  const getInitialSettings = (): SettingsState => {\n    if (!canUseStorage) {\n      return {\n        ...defaultSettings,\n        apiKey: import.meta.env.VITE_POLONIEX_API_KEY || '',\n        apiSecret: import.meta.env.VITE_POLONIEX_API_SECRET || ''\n      };\n    }\n\n    return {\n      apiKey: getStorageItem(EXTENDED_STORAGE_KEYS.API_KEY, import.meta.env.VITE_POLONIEX_API_KEY || ''),\n      apiSecret: getStorageItem(EXTENDED_STORAGE_KEYS.API_SECRET, import.meta.env.VITE_POLONIEX_API_SECRET || ''),\n      isLiveTrading: getStorageItem(EXTENDED_STORAGE_KEYS.IS_LIVE_TRADING, false),\n      darkMode: getStorageItem(EXTENDED_STORAGE_KEYS.DARK_MODE, false),\n      defaultPair: getStorageItem(EXTENDED_STORAGE_KEYS.DEFAULT_PAIR, 'BTC-USDT'),\n      emailNotifications: getStorageItem(EXTENDED_STORAGE_KEYS.EMAIL_NOTIFICATIONS, true),\n      tradeNotifications: getStorageItem(EXTENDED_STORAGE_KEYS.TRADE_NOTIFICATIONS, true),\n      priceAlerts: getStorageItem(EXTENDED_STORAGE_KEYS.PRICE_ALERTS, false),\n      chatNotifications: getStorageItem(EXTENDED_STORAGE_KEYS.CHAT_NOTIFICATIONS, true),\n      showExtension: getStorageItem(EXTENDED_STORAGE_KEYS.SHOW_EXTENSION, true),\n      chartType: getStorageItem(EXTENDED_STORAGE_KEYS.CHART_TYPE, 'candle'),\n      timeframe: getStorageItem(EXTENDED_STORAGE_KEYS.TIMEFRAME, '5m'),\n      leverage: getStorageItem(EXTENDED_STORAGE_KEYS.LEVERAGE, 1),\n      riskPerTrade: getStorageItem(EXTENDED_STORAGE_KEYS.RISK_PER_TRADE, 2),\n      stopLossPercent: getStorageItem(EXTENDED_STORAGE_KEYS.STOP_LOSS_PERCENT, 2),\n      takeProfitPercent: getStorageItem(EXTENDED_STORAGE_KEYS.TAKE_PROFIT_PERCENT, 4),\n      trailingStopPercent: getStorageItem(EXTENDED_STORAGE_KEYS.TRAILING_STOP_PERCENT, 1),\n      autoTradingEnabled: getStorageItem(EXTENDED_STORAGE_KEYS.AUTO_TRADING_ENABLED, false)\n    };\n  };\n\n  const [settings, setSettings] = useState<SettingsState>(getInitialSettings);\n  const [hasStoredCredentials, setHasStoredCredentials] = useState<boolean>(false);\n\n  // Check if we have credentials stored\n  useEffect(() => {\n    setHasStoredCredentials(Boolean(settings.apiKey && settings.apiSecret));\n  }, [settings.apiKey, settings.apiSecret]);\n\n  // Apply dark mode setting to document\n  useEffect(() => {\n    if (settings.darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [settings.darkMode]);\n\n  // Update settings in state and localStorage\n  const updateSettings = (newSettings: Partial<SettingsState>) => {\n    setSettings(prev => {\n      const updated = { ...prev, ...newSettings };\n      \n      // Special handling for live trading mode\n      if (newSettings.isLiveTrading !== undefined) {\n        // Only allow live trading if we have API credentials\n        if (newSettings.isLiveTrading && (!updated.apiKey || !updated.apiSecret)) {\n          // console.log('Cannot enable live trading without API credentials');\n          updated.isLiveTrading = false;\n        }\n      }\n      \n      // Only persist to localStorage if it's available\n      if (canUseStorage) {\n        // Persist each updated setting to localStorage\n        Object.entries(newSettings).forEach(([key, value]) => {\n          const storageKey = EXTENDED_STORAGE_KEYS[key.toUpperCase() as keyof typeof EXTENDED_STORAGE_KEYS] || `poloniex_${key}`;\n          setStorageItem(storageKey, value);\n        });\n      }\n      \n      return updated;\n    });\n  };\n\n  // Reset all settings to default\n  const resetSettings = () => {\n    setSettings(defaultSettings);\n    \n    if (canUseStorage) {\n      Object.values(EXTENDED_STORAGE_KEYS).forEach(key => {\n        localStorage.removeItem(key);\n      });\n    }\n  };\n\n  // Export settings to JSON string\n  const exportSettings = (): string => {\n    try {\n      // Create a copy of settings without sensitive data\n      const exportableSettings = { ...settings };\n      const sensitiveKeys: (keyof SettingsState)[] = ['apiKey', 'apiSecret'];\n      \n      sensitiveKeys.forEach(key => {\n        if (key in exportableSettings) {\n          delete exportableSettings[key];\n        }\n      });\n      \n      return JSON.stringify(exportableSettings);\n    } catch (error) {\n      // console.error('Error exporting settings:', error);\n      return '';\n    }\n  };\n\n  // Import settings from JSON string\n  const importSettings = (settingsJson: string): boolean => {\n    try {\n      const importedSettings = JSON.parse(settingsJson);\n      \n      // Validate imported settings\n      if (typeof importedSettings !== 'object' || importedSettings === null) {\n        throw new Error('Invalid settings format');\n      }\n      \n      // Don't import sensitive data\n      const sensitiveKeys: (keyof SettingsState)[] = ['apiKey', 'apiSecret'];\n      sensitiveKeys.forEach(key => {\n        if (key in importedSettings) {\n          delete importedSettings[key];\n        }\n      });\n      \n      // Update settings\n      updateSettings(importedSettings);\n      return true;\n    } catch (error) {\n      // console.error('Error importing settings:', error);\n      return false;\n    }\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        ...settings,\n        updateSettings,\n        resetSettings,\n        hasStoredCredentials,\n        exportSettings,\n        importSettings,\n        mockMode: !settings.isLiveTrading // Added for FuturesContext\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\n// End of component\n","import { useContext } from 'react';\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport const useSettings = () => {\n  const context = useContext(SettingsContext);\n  if (context === undefined) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return context;\n};","import { useState, useEffect, useCallback } from 'react';\n\ninterface ResponsiveNavHook {\n  isMobileMenuOpen: boolean;\n  toggleMobileMenu: () => void;\n  closeMobileMenu: () => void;\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n  screenSize: 'mobile' | 'tablet' | 'desktop';\n}\n\n/**\n * Hook for managing responsive navigation and screen size detection\n */\nexport const useResponsiveNav = (): ResponsiveNavHook => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [screenSize, setScreenSize] = useState<'mobile' | 'tablet' | 'desktop'>('desktop');\n\n  const getScreenSize = useCallback(() => {\n    const width = window.innerWidth;\n    if (width < 768) return 'mobile';\n    if (width < 1024) return 'tablet';\n    return 'desktop';\n  }, []);\n\n  const updateScreenSize = useCallback(() => {\n    const newScreenSize = getScreenSize();\n    setScreenSize(newScreenSize);\n    \n    // Close mobile menu when switching to larger screens\n    if (newScreenSize !== 'mobile' && isMobileMenuOpen) {\n      setIsMobileMenuOpen(false);\n    }\n  }, [getScreenSize, isMobileMenuOpen]);\n\n  useEffect(() => {\n    updateScreenSize();\n    window.addEventListener('resize', updateScreenSize);\n    \n    return () => {\n      window.removeEventListener('resize', updateScreenSize);\n    };\n  }, [updateScreenSize]);\n\n  const toggleMobileMenu = useCallback(() => {\n    setIsMobileMenuOpen(prev => !prev);\n  }, []);\n\n  const closeMobileMenu = useCallback(() => {\n    setIsMobileMenuOpen(false);\n  }, []);\n\n  // Close mobile menu when clicking outside or pressing escape\n  useEffect(() => {\n    if (!isMobileMenuOpen) return;\n\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        closeMobileMenu();\n      }\n    };\n\n    const handleClickOutside = (e: MouseEvent) => {\n      const target = e.target as Element;\n      const mobileNav = document.getElementById('mobile-navigation');\n      const mobileToggle = document.getElementById('mobile-menu-toggle');\n      \n      if (mobileNav && !mobileNav.contains(target) && !mobileToggle?.contains(target)) {\n        closeMobileMenu();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    document.addEventListener('click', handleClickOutside);\n    \n    // Prevent body scroll when mobile menu is open\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      document.removeEventListener('click', handleClickOutside);\n      document.body.style.overflow = '';\n    };\n  }, [isMobileMenuOpen, closeMobileMenu]);\n\n  const isMobile = screenSize === 'mobile';\n  const isTablet = screenSize === 'tablet';\n  const isDesktop = screenSize === 'desktop';\n\n  return {\n    isMobileMenuOpen,\n    toggleMobileMenu,\n    closeMobileMenu,\n    isMobile,\n    isTablet,\n    isDesktop,\n    screenSize\n  };\n};\n\n/**\n * Hook for responsive breakpoint detection\n */\nexport const useBreakpoint = () => {\n  const [breakpoint, setBreakpoint] = useState('lg');\n\n  useEffect(() => {\n    const updateBreakpoint = () => {\n      const width = window.innerWidth;\n      if (width < 475) setBreakpoint('xs');\n      else if (width < 640) setBreakpoint('sm');\n      else if (width < 768) setBreakpoint('md');\n      else if (width < 1024) setBreakpoint('lg');\n      else if (width < 1280) setBreakpoint('xl');\n      else setBreakpoint('2xl');\n    };\n\n    updateBreakpoint();\n    window.addEventListener('resize', updateBreakpoint);\n    \n    return () => window.removeEventListener('resize', updateBreakpoint);\n  }, []);\n\n  const isAbove = useCallback((bp: string) => {\n    const breakpoints = { xs: 475, sm: 640, md: 768, lg: 1024, xl: 1280, '2xl': 1536 };\n    const sizes = Object.keys(breakpoints);\n    const currentIndex = sizes.indexOf(breakpoint);\n    const targetIndex = sizes.indexOf(bp);\n    return currentIndex >= targetIndex;\n  }, [breakpoint]);\n\n  const isBelow = useCallback((bp: string) => {\n    return !isAbove(bp);\n  }, [isAbove]);\n\n  return {\n    breakpoint,\n    isAbove,\n    isBelow,\n    isMobile: isBelow('md'),\n    isTablet: isAbove('md') && isBelow('lg'),\n    isDesktop: isAbove('lg')\n  };\n};","import CryptoJS from 'crypto-js';\n\ninterface SignatureParams {\n  method: string;\n  path: string;\n  body?: Record<string, unknown> | string;\n  queryString?: string;\n  timestamp: number;\n  secret: string;\n}\n\ninterface AuthData {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  user: {\n    id: string;\n    username: string;\n    email: string;\n    role: string;\n  };\n}\n\n/**\n * Generate HMAC-SHA256 signature for API authentication\n */\nexport function generateSignature({\n  method,\n  path,\n  body,\n  queryString,\n  timestamp,\n  secret\n}: SignatureParams): string {\n  // Create the string to sign\n  let signString = `${method}\\n${path}`;\n  \n  if (queryString) {\n    signString += `?${queryString}`;\n  }\n  \n  signString += `\\nsignTimestamp=${timestamp}`;\n  \n  if (body) {\n    signString += `\\n${JSON.stringify(body)}`;\n  }\n  \n  // Create HMAC SHA256 signature\n  const signature = CryptoJS.HmacSHA256(signString, secret).toString(CryptoJS.enc.Hex);\n  \n  return signature;\n}\n\n/**\n * Generate authentication headers for API requests\n */\nexport function generateAuthHeaders(\n  apiKey: string,\n  apiSecret: string,\n  method: string,\n  path: string,\n  body?: Record<string, unknown> | string,\n  queryString?: string\n): Record<string, string> {\n  const timestamp = Date.now();\n  \n  const signature = generateSignature({\n    method,\n    path,\n    body,\n    queryString,\n    timestamp,\n    secret: apiSecret\n  });\n  \n  return {\n    'API-Key': apiKey,\n    'API-Sign': signature,\n    'API-Timestamp': timestamp.toString(),\n    'Content-Type': 'application/json'\n  };\n}\n\n/**\n * Verify if a user is authenticated with JWT\n */\nexport function isAuthenticated(): boolean {\n  const token = getAccessToken();\n  if (!token) {\n    return false;\n  }\n  \n  // Check if token is expired\n  const expiry = localStorage.getItem('auth_expiry');\n  if (expiry) {\n    const expiryTime = parseInt(expiry, 10);\n    if (Date.now() > expiryTime) {\n      // Clear expired token\n      clearAuthData();\n      return false;\n    }\n  }\n  \n  return true;\n}\n\n/**\n * Store authentication data from JWT login response\n */\nexport function storeAuthData(authData: AuthData): void {\n  const expiryTime = Date.now() + authData.expiresIn * 1000;\n  \n  localStorage.setItem('access_token', authData.accessToken);\n  localStorage.setItem('refresh_token', authData.refreshToken);\n  localStorage.setItem('auth_expiry', expiryTime.toString());\n  localStorage.setItem('user_data', JSON.stringify(authData.user));\n}\n\n/**\n * Store authentication data (legacy method for backward compatibility)\n */\nexport function storeAuthDataLegacy(token: string, expiresIn: number): void {\n  const expiryTime = Date.now() + expiresIn * 1000;\n  localStorage.setItem('auth_token', token);\n  localStorage.setItem('access_token', token);\n  localStorage.setItem('auth_expiry', expiryTime.toString());\n}\n\n/**\n * Clear authentication data\n */\nexport function clearAuthData(): void {\n  localStorage.removeItem('auth_token'); // Legacy\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n  localStorage.removeItem('auth_expiry');\n  localStorage.removeItem('user_data');\n}\n\n/**\n * Get access token\n */\nexport function getAccessToken(): string | null {\n  return localStorage.getItem('access_token') || localStorage.getItem('auth_token');\n}\n\n/**\n * Get refresh token\n */\nexport function getRefreshToken(): string | null {\n  return localStorage.getItem('refresh_token');\n}\n\n/**\n * Get stored user data\n */\nexport function getUserData(): unknown | null {\n  const userData = localStorage.getItem('user_data');\n  if (!userData) return null;\n  \n  try {\n    return JSON.parse(userData);\n  } catch (error) {\n    // console.error('Error parsing user data:', error);\n    return null;\n  }\n}\n\n/**\n * Get authentication token (legacy method for backward compatibility)\n */\nexport function getAuthToken(): string | null {\n  if (!isAuthenticated()) {\n    return null;\n  }\n  \n  return getAccessToken();\n}\n\n/**\n * Get authorization header value\n */\nexport function getAuthHeader(): string | null {\n  const token = getAccessToken();\n  return token ? `Bearer ${token}` : null;\n}\n\n/**\n * Check if token needs refresh (expires in less than 5 minutes)\n */\nexport function shouldRefreshToken(): boolean {\n  const expiry = localStorage.getItem('auth_expiry');\n  if (!expiry) return false;\n  \n  const expiryTime = parseInt(expiry, 10);\n  const fiveMinutes = 5 * 60 * 1000; // 5 minutes in milliseconds\n  \n  return Date.now() > (expiryTime - fiveMinutes);\n}\n\n/**\n * Decode JWT payload (without verification - for display purposes only)\n */\nexport function decodeJWTPayload(token: string): unknown | null {\n  try {\n    const parts = token.split('.');\n    if (parts.length !== 3) return null;\n    \n    const payload = parts[1];\n    if (!payload) return null;\n    const decoded = atob(payload.replace(/-/g, '+').replace(/_/g, '/'));\n    return JSON.parse(decoded);\n  } catch (error) {\n    // console.error('Error decoding JWT:', error);\n    return null;\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { getAccessToken, getRefreshToken, storeAuthData, clearAuthData, shouldRefreshToken } from '@/utils/auth';\n\n// Get the backend URL from environment\nconst API_BASE_URL = import.meta.env.VITE_BACKEND_URL ||\n                     import.meta.env.VITE_API_URL ||\n                     'http://localhost:3000';\n\ninterface LoginCredentials {\n  username: string;\n  password: string;\n}\n\ninterface LoginResponse {\n  success: boolean;\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  user: {\n    id: string;\n    username: string;\n    email: string;\n    role: string;\n  };\n}\n\ninterface RefreshResponse {\n  success: boolean;\n  accessToken: string;\n  expiresIn: number;\n}\n\ninterface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  code?: string;\n}\n\ntype User = LoginResponse['user'];\n\nfunction isUser(value: unknown): value is User {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'id' in value &&\n    'username' in value &&\n    'email' in value &&\n    'role' in value\n  );\n}\n\n// Local, safe Axios error type guard for tests and runtime\nfunction isAxiosError(error: unknown): error is AxiosError {\n  return typeof error === 'object' && error !== null && (error as any).isAxiosError === true;\n}\n\n// Handle mocked errors that look like Axios errors but lack isAxiosError flag\nfunction hasAxiosLikeResponse(error: unknown): error is { response: { data?: any; status?: number } } {\n  return typeof error === 'object' && error !== null && 'response' in (error as any);\n}\n\n/**\n * Auth Service for JWT authentication\n */\nexport class AuthService {\n  private static instance: AuthService;\n  private refreshPromise: Promise<string | null> | null = null;\n\n  static getInstance(): AuthService {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService();\n    }\n    return AuthService.instance;\n  }\n\n  /**\n   * Login with username and password\n   */\n  async login(credentials: LoginCredentials): Promise<ApiResponse<LoginResponse>> {\n    try {\n      const response: AxiosResponse<any> = await axios.post(\n        `${API_BASE_URL}/api/auth/login`,\n        credentials,\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      // Backend may return { success, accessToken, refreshToken, expiresIn, user }\n      if (response.data?.success) {\n        storeAuthData(response.data as LoginResponse);\n        return { success: true, data: response.data as LoginResponse };\n      }\n\n      // Fallback to backend shape { token, user }\n      if (response.data?.token && response.data?.user) {\n        const mapped: LoginResponse = {\n          success: true,\n          accessToken: response.data.token,\n          // Backend does not currently issue refresh tokens; store empty and rely on access token\n          refreshToken: '',\n          // Align with backend default of 30 minutes if configured; otherwise a safe default (30 min)\n          expiresIn: 30 * 60,\n          user: {\n            id: String(response.data.user.id ?? ''),\n            username: String(response.data.user.username ?? response.data.user.name ?? ''),\n            email: String(response.data.user.email ?? ''),\n            role: String(response.data.user.role ?? 'trader')\n          }\n        };\n        storeAuthData(mapped);\n        return { success: true, data: mapped };\n      }\n\n      return { success: false, error: 'Login failed' };\n    } catch (error: unknown) {\n      if ((isAxiosError(error) || hasAxiosLikeResponse(error)) && (error as any).response?.data) {\n        return {\n          success: false,\n          error: ((error as any).response.data as any).error || 'Login failed',\n          code: ((error as any).response.data as any).code\n        };\n      }\n\n      return { success: false, error: 'Network error occurred' };\n    }\n  }\n\n  /**\n   * Refresh access token\n   */\n  async refreshToken(): Promise<string | null> {\n    // Prevent multiple simultaneous refresh requests\n    if (this.refreshPromise) {\n      return this.refreshPromise;\n    }\n\n    this.refreshPromise = this._refreshToken();\n    const result = await this.refreshPromise;\n    this.refreshPromise = null;\n    return result;\n  }\n\n  private async _refreshToken(): Promise<string | null> {\n    try {\n      const refreshToken = getRefreshToken();\n\n      if (!refreshToken) {\n        // console.warn('No refresh token available');\n        return null;\n      }\n\n      const response: AxiosResponse<RefreshResponse> = await axios.post(\n        `${API_BASE_URL}/api/auth/refresh`,\n        { refreshToken },\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (response.data.success) {\n        // Update access token\n        const currentUser = this.getCurrentUser();\n        if (currentUser) {\n          storeAuthData({\n            accessToken: response.data.accessToken,\n            refreshToken: refreshToken,\n            expiresIn: response.data.expiresIn,\n            user: currentUser\n          });\n        }\n\n        return response.data.accessToken;\n      }\n\n      return null;\n    } catch (error: unknown) {\n      // If refresh fails, clear auth data and redirect to login\n      if (isAxiosError(error) && (error.response?.status === 403 || error.response?.status === 401)) {\n        this.logout();\n      }\n\n      return null;\n    }\n  }\n\n  /**\n   * Logout user\n   */\n  async logout(): Promise<void> {\n    try {\n      const refreshToken = getRefreshToken();\n\n      if (refreshToken) {\n        // Notify server to invalidate refresh token\n        await axios.post(\n          `${API_BASE_URL}/api/auth/logout`,\n          { refreshToken },\n          {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n      }\n    } catch (error) {\n      // console.error('Logout error:', error);\n    } finally {\n      // Always clear local auth data\n      clearAuthData();\n    }\n  }\n\n  /**\n   * Verify current token\n   */\n  async verifyToken(): Promise<boolean> {\n    try {\n      const token = getAccessToken();\n\n      if (!token) {\n        return false;\n      }\n\n      const response = await axios.get(\n        `${API_BASE_URL}/api/auth/verify`,\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n\n      return !!response.data?.success;\n    } catch (error) {\n      // If verify endpoint is not implemented on the backend, treat as valid to avoid false logouts\n      if (isAxiosError(error)) {\n        const status = error.response?.status;\n        if (status === 404 || status === 405 || status === 501) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Get current user data\n   */\n  getCurrentUser(): User | null {\n    const userData = localStorage.getItem('user_data');\n    if (!userData) return null;\n\n    try {\n      const parsed = JSON.parse(userData) as unknown;\n      return isUser(parsed) ? parsed : null;\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * Make authenticated request with automatic token refresh\n   */\n  async authenticatedRequest<T = any>(\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE',\n    endpoint: string,\n    data?: unknown\n  ): Promise<ApiResponse<T>> {\n    try {\n      let token = getAccessToken();\n\n      // Check if we need to refresh the token\n      if (shouldRefreshToken()) {\n        // console.log('Token needs refresh, refreshing...');\n        const newToken = await this.refreshToken();\n        if (newToken) {\n          token = newToken;\n        } else {\n          return { success: false, error: 'Authentication failed' };\n        }\n      }\n\n      if (!token) {\n        return { success: false, error: 'No authentication token' };\n      }\n\n      const config = {\n        method,\n        url: `${API_BASE_URL}${endpoint}`,\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        ...(data !== undefined ? { data } : {})\n      };\n\n      const response = await axios(config);\n      return { success: true, data: response.data };\n    } catch (error: unknown) {\n      // console.error('Authenticated request error:', error);\n\n      // If token is invalid, try to refresh once\n      if (isAxiosError(error) && (error.response?.status === 401 || error.response?.status === 403)) {\n        const newToken = await this.refreshToken();\n        if (newToken) {\n          // Retry the request with new token\n          try {\n            const config = {\n              method,\n              url: `${API_BASE_URL}${endpoint}`,\n              headers: {\n                'Authorization': `Bearer ${newToken}`,\n                'Content-Type': 'application/json'\n              },\n              ...(data !== undefined ? { data } : {})\n            };\n\n            const response = await axios(config);\n            return { success: true, data: response.data };\n          } catch (retryError: unknown) {\n            // console.error('Retry request error:', retryError);\n            return {\n              success: false,\n              error: (isAxiosError(retryError) ? ((retryError.response?.data as any)?.error) : undefined) || 'Request failed'\n            };\n          }\n        } else {\n          return { success: false, error: 'Authentication failed' };\n        }\n      }\n\n      return {\n        success: false,\n        error: (isAxiosError(error) ? ((error.response?.data as any)?.error) : undefined) || 'Request failed'\n      };\n    }\n  }\n}\n\n// Export singleton instance\nexport const authService = AuthService.getInstance();\n","import { authService } from '@/services/authService';\nimport { getUserData, isAuthenticated, storeAuthDataLegacy } from '@/utils/auth';\nimport React, { ReactNode, createContext, useEffect, useState } from 'react';\n\n \n\ninterface AuthContextType {\n  isLoggedIn: boolean;\n  login: (usernameOrToken: string, passwordOrExpiresIn?: string | number) => Promise<boolean>;\n  logout: () => Promise<void>;\n  user: UserProfile | null;\n  isAuthenticated: boolean; // Added for FuturesContext\n  loading: boolean;\n  refreshToken: () => Promise<boolean>;\n}\n\ninterface UserProfile {\n  id: string;\n  username: string;\n  email: string;\n  role: string;\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  isLoggedIn: false,\n  login: async () => false,\n  logout: async () => { },\n  user: null,\n  isAuthenticated: false, // Added for FuturesContext\n  loading: false,\n  refreshToken: async () => false\n});\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // Check authentication status on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      setLoading(true);\n\n      try\n      {\n        const authenticated = isAuthenticated();\n        setIsLoggedIn(authenticated);\n\n        if (authenticated)\n        {\n          // Get user data from localStorage first\n          const userData = getUserData();\n          if (userData)\n          {\n            setUser(userData as UserProfile);\n          }\n\n          // Verify token with server\n          const isValid = await authService.verifyToken();\n          if (!isValid)\n          {\n            // console.warn('Token verification failed, logging out');\n            await logout();\n          }\n        }\n      } catch (error)\n      {\n        // console.error('Auth check error:', error);\n        await logout();\n      } finally\n      {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (usernameOrToken: string, passwordOrExpiresIn?: string | number): Promise<boolean> => {\n    try\n    {\n      // Check if this is JWT login (new method) or legacy login\n      if (typeof passwordOrExpiresIn === 'string')\n      {\n        // New JWT login method\n        const response = await authService.login({\n          username: usernameOrToken,\n          password: passwordOrExpiresIn\n        });\n\n        if (response.success && response.data)\n        {\n          setIsLoggedIn(true);\n          setUser(response.data.user);\n          return true;\n        } else\n        {\n          // console.error('Login failed:', response.error);\n          return false;\n        }\n      } else\n      {\n        // Legacy login method for backward compatibility\n        const token = usernameOrToken;\n        const expiresIn = passwordOrExpiresIn as number || 3600;\n\n        storeAuthDataLegacy(token, expiresIn);\n        setIsLoggedIn(true);\n\n        // Set mock user data for legacy login\n        setUser({\n          id: '1',\n          username: 'trader',\n          email: 'trader@example.com',\n          role: 'user'\n        });\n\n        return true;\n      }\n    } catch (error)\n    {\n      // console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const logout = async (): Promise<void> => {\n    try\n    {\n      await authService.logout();\n    } catch (error)\n    {\n      // console.error('Logout error:', error);\n    } finally\n    {\n      setIsLoggedIn(false);\n      setUser(null);\n    }\n  };\n\n  const refreshToken = async (): Promise<boolean> => {\n    try\n    {\n      const newToken = await authService.refreshToken();\n      if (newToken)\n      {\n        // Token refreshed successfully\n        return true;\n      } else\n      {\n        // Refresh failed, log out\n        await logout();\n        return false;\n      }\n    } catch (error)\n    {\n      // console.error('Token refresh error:', error);\n      await logout();\n      return false;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      isLoggedIn,\n      login,\n      logout,\n      user,\n      isAuthenticated: isLoggedIn, // Added for FuturesContext\n      loading,\n      refreshToken\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nexport const useAuth = () => useContext(AuthContext);","import React from 'react';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface UserProfileProps {\n  className?: string;\n}\n\nconst UserProfile: React.FC<UserProfileProps> = ({ className = '' }) => {\n  const { user, isLoggedIn } = useAuth();\n\n  if (!isLoggedIn || !user) {\n    return null;\n  }\n\n  return (\n    <div className={`flex items-center ${className}`}>\n      <div className=\"w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-bold mr-2\">\n        {user.username.charAt(0).toUpperCase()}\n      </div>\n      <div className=\"flex flex-col\">\n        <span className=\"text-sm font-medium\">{user.username}</span>\n        <span className=\"text-xs text-neutral-500\">{user.email}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Utility function to merge Tailwind CSS classes\n * Combines clsx for conditional classes and tailwind-merge to handle conflicts\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"default\" | \"primary\" | \"secondary\" | \"outline\" | \"ghost\" | \"link\" | \"danger\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  isLoading?: boolean;\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = \"default\", size = \"default\", isLoading, children, ...props }, ref) => {\n    const baseStyles = \"inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none\";\n    \n    const variants = {\n      default: \"bg-brand-cyan text-text-inverse hover:opacity-90\",\n      primary: \"bg-brand-cyan text-text-inverse hover:opacity-90\",\n      secondary: \"bg-bg-secondary text-text-primary border border-border-moderate hover:bg-bg-tertiary\",\n      outline: \"border border-border-moderate hover:bg-bg-secondary\",\n      ghost: \"hover:bg-bg-secondary\",\n      link: \"underline-offset-4 hover:underline text-brand-cyan\",\n      danger: \"bg-error text-text-inverse hover:opacity-90\",\n    };\n    \n    const sizes = {\n      default: \"h-10 py-2 px-4\",\n      sm: \"h-9 px-3 rounded-md\",\n      lg: \"h-11 px-8 rounded-md\",\n      icon: \"h-10 w-10\",\n    };\n    \n    return (\n      <button\n        className={cn(\n          baseStyles,\n          variants[variant],\n          sizes[size],\n          isLoading && \"opacity-70 cursor-not-allowed\",\n          className\n        )}\n        ref={ref}\n        disabled={isLoading || props.disabled}\n        {...props}\n      >\n        {isLoading ? (\n          <span className=\"mr-2 animate-spin\">⟳</span>\n        ) : null}\n        {children}\n      </button>\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n","import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\nexport type InputProps = React.InputHTMLAttributes<HTMLInputElement>;\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\nexport type LabelProps = React.LabelHTMLAttributes<HTMLLabelElement>;\n\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\n  ({ className, ...props }, ref) => (\n    <label\n      ref={ref}\n      className={cn(\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nLabel.displayName = \"Label\";\n\nexport { Label };\n","import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\nexport type SelectProps = React.SelectHTMLAttributes<HTMLSelectElement>;\n\nconst Select = React.forwardRef<HTMLSelectElement, SelectProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <select\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </select>\n    );\n  }\n);\nSelect.displayName = \"Select\";\n\nconst SelectOption = React.forwardRef<\n  HTMLOptionElement,\n  React.OptionHTMLAttributes<HTMLOptionElement>\n>(({ className, ...props }, ref) => (\n  <option\n    ref={ref}\n    className={cn(\"text-sm\", className)}\n    {...props}\n  />\n));\nSelectOption.displayName = \"SelectOption\";\n\nexport { Select, SelectOption };\n","import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\ninterface SliderProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  onValueChange?: (value: number) => void;\n}\n\nconst Slider = React.forwardRef<HTMLInputElement, SliderProps>(\n  ({ className, onValueChange, ...props }, ref) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const value = Number(event.target.value);\n      if (onValueChange) {\n        onValueChange(value);\n      }\n    };\n\n    return (\n      <input\n        type=\"range\"\n        className={cn(\n          \"w-full h-2 bg-neutral-200 rounded-lg appearance-none cursor-pointer\",\n          className\n        )}\n        ref={ref}\n        onChange={handleChange}\n        {...props}\n      />\n    );\n  }\n);\n\nSlider.displayName = \"Slider\";\n\nexport { Slider };\n","import * as React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\ninterface SwitchProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  ({ className, onCheckedChange, ...props }, ref) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (onCheckedChange) {\n        onCheckedChange(event.target.checked);\n      }\n    };\n\n    return (\n      <div className=\"relative inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          className=\"sr-only peer\"\n          ref={ref}\n          onChange={handleChange}\n          {...props}\n        />\n        <div className={cn(\n          \"w-11 h-6 bg-neutral-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-neutral-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-neutral-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-neutral-600 peer-checked:bg-blue-600\",\n          className\n        )}></div>\n      </div>\n    );\n  }\n);\n\nSwitch.displayName = \"Switch\";\n\nexport { Switch };\n","import React, { useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { Button } from '@/components/ui';\n\ninterface LogoutButtonProps {\n  onSuccess?: () => void;\n  variant?: 'primary' | 'secondary' | 'outline' | 'danger';\n  className?: string;\n}\n\nconst LogoutButton: React.FC<LogoutButtonProps> = ({ \n  onSuccess, \n  variant = 'outline',\n  className = ''\n}) => {\n  const { logout } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogout = async () => {\n    setIsLoading(true);\n    \n    try {\n      await logout();\n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (error) {\n      // console.error('Logout error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Button \n      variant={variant} \n      onClick={handleLogout}\n      disabled={isLoading}\n      className={className}\n    >\n      {isLoading ? 'Logging out...' : 'Logout'}\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { X } from 'lucide-react';\nimport { \n  LayoutDashboard, \n  LineChart, \n  Settings, \n  MessageSquare, \n  Zap,\n  BarChart4,\n  Chrome,\n  User\n} from 'lucide-react';\n\ninterface MobileNavigationProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst MobileNavigation: React.FC<MobileNavigationProps> = ({ isOpen, onClose }) => {\n  const location = useLocation();\n  \n  const navItems = [\n    { path: '/', label: 'Dashboard', icon: <LayoutDashboard size={20} /> },\n    { path: '/strategies', label: 'Trading Strategies', icon: <Zap size={20} /> },\n    { path: '/account', label: 'Account', icon: <User size={20} /> },\n    { path: '/charts', label: 'Market Analysis', icon: <BarChart4 size={20} /> },\n    { path: '/performance', label: 'Performance', icon: <LineChart size={20} /> },\n    { path: '/chat', label: 'Community Chat', icon: <MessageSquare size={20} /> },\n    { path: '/extension', label: 'Chrome Extension', icon: <Chrome size={20} /> },\n    { path: '/settings', label: 'Settings', icon: <Settings size={20} /> }\n  ];\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      id=\"mobile-navigation\"\n      className=\"fixed inset-0 z-50 lg:hidden\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label=\"Mobile navigation menu\"\n    >\n      {/* Backdrop */}\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-50\"\n        onClick={onClose}\n        aria-hidden=\"true\"\n      />\n      \n      {/* Navigation Panel */}\n      <nav\n        id=\"mobile-nav-panel\"\n        className=\"relative flex flex-col w-full max-w-xs bg-neutral-800 text-white h-full shadow-xl\"\n        aria-label=\"Mobile navigation\"\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-neutral-700\">\n          <div className=\"flex items-center\">\n            <Zap className=\"h-8 w-8 text-blue-400 mr-2\" aria-hidden=\"true\" />\n            <h2 className=\"text-xl font-bold\">TradingBot</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 rounded-md text-neutral-400 hover:text-white hover:bg-neutral-700 transition-colors\"\n            aria-label=\"Close navigation menu\"\n          >\n            <X size={20} aria-hidden=\"true\" />\n          </button>\n        </div>\n        \n        {/* Navigation Links */}\n        <div className=\"flex-1 overflow-y-auto\">\n          <ul className=\"p-4 space-y-2\" role=\"list\">\n            {navItems.map((item) => (\n              <li key={item.path}>\n                <Link\n                  to={item.path}\n                  onClick={onClose}\n                  className={`\n                    flex items-center p-3 rounded-md transition-all duration-200 touch-target\n                    ${location.pathname === item.path \n                      ? 'bg-blue-700 text-white' \n                      : 'text-neutral-300 hover:bg-neutral-700 hover:text-white'\n                    }\n                  `}\n                  aria-label={item.label}\n                  aria-current={location.pathname === item.path ? 'page' : undefined}\n                >\n                  <span className=\"flex-shrink-0 mr-3\" aria-hidden=\"true\">\n                    {item.icon}\n                  </span>\n                  <span className=\"font-medium\">{item.label}</span>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        \n        {/* Footer */}\n        <div className=\"p-4 border-t border-neutral-700\">\n          <div className=\"text-sm text-neutral-400\">\n            <p>Poloniex Trading Platform</p>\n            <p className=\"text-xs mt-1\">Version 1.0.0</p>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default MobileNavigation;","import { useState } from 'react';\nimport { Bell, User, Menu, LogIn } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { useSettings } from '../hooks/useSettings';\nimport { useResponsiveNav } from '../hooks/useResponsiveNav';\nimport { useAuth } from '../hooks/useAuth';\nimport UserProfile from './auth/UserProfile';\nimport LogoutButton from './auth/LogoutButton';\nimport MobileNavigation from './MobileNavigation';\n\nconst Navbar: React.FC = () => {\n  const [notifications] = useState<number>(3);\n  const { hasStoredCredentials } = useSettings();\n  const { isMobileMenuOpen, toggleMobileMenu, closeMobileMenu, isMobile } = useResponsiveNav();\n  const { isLoggedIn, loading } = useAuth();\n  \n  return (\n    <>\n      <nav \n        className=\"bg-white border-b border-neutral-200 px-4 py-2.5 flex justify-between items-center\"\n        role=\"banner\"\n        aria-label=\"Main navigation\"\n      >\n        <div className=\"flex items-center\">\n          {isMobile && (\n            <button \n              id=\"mobile-menu-toggle\"\n              onClick={toggleMobileMenu}\n              className=\"mr-3 p-2 rounded-md text-neutral-500 hover:text-neutral-700 hover:bg-neutral-100 transition-colors touch-target\"\n              aria-label=\"Toggle mobile menu\"\n              aria-expanded={isMobileMenuOpen ? \"true\" : \"false\"}\n            >\n              <Menu className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          )}\n          <h1 className=\"text-lg sm:text-xl font-bold text-blue-600\">\n            <span className=\"hidden sm:inline\">Poloniex Futures</span>\n            <span className=\"sm:hidden\">Poloniex</span>\n          </h1>\n        </div>\n        \n        <div className=\"flex items-center space-x-2 sm:space-x-4\">\n          <div className=\"relative\">\n            <button \n              className=\"p-2 text-neutral-500 hover:text-neutral-700 hover:bg-neutral-100 rounded-md transition-colors touch-target\"\n              aria-label={`Notifications${notifications > 0 ? ` (${notifications} new)` : ' (none)'}`}\n            >\n              <Bell className=\"h-5 w-5 sm:h-6 sm:w-6\" aria-hidden=\"true\" />\n              {notifications > 0 && (\n                <span \n                  className=\"absolute -top-1 -right-1 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold leading-none text-white bg-red-600 rounded-full min-w-[1.25rem]\"\n                  aria-hidden=\"true\"\n                >\n                  {notifications > 99 ? '99+' : notifications}\n                </span>\n              )}\n            </button>\n          </div>\n          \n          {/* Authentication Section */}\n          <div className=\"flex items-center space-x-2\">\n            {loading ? (\n              <div className=\"flex items-center p-2\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\" aria-hidden=\"true\"></div>\n                <span className=\"sr-only\">Loading authentication status</span>\n              </div>\n            ) : isLoggedIn ? (\n              // Authenticated User Section\n              <>\n                <UserProfile className=\"hidden sm:flex\" />\n                <Link \n                  to=\"/account\" \n                  className=\"flex items-center p-2 text-neutral-500 hover:text-neutral-700 hover:bg-neutral-100 rounded-md transition-colors touch-target\"\n                  aria-label=\"Go to My Account\"\n                >\n                  <User className=\"h-5 w-5 sm:h-6 sm:w-6 mr-1 sm:mr-2\" aria-hidden=\"true\" />\n                  <span className=\"hidden md:inline-block text-sm font-medium\">\n                    {hasStoredCredentials ? 'My Account' : 'Connect Account'}\n                  </span>\n                  <span className=\"md:hidden text-sm font-medium\">\n                    {hasStoredCredentials ? 'Account' : 'Connect'}\n                  </span>\n                </Link>\n                <LogoutButton \n                  variant=\"outline\" \n                  className=\"hidden sm:flex items-center px-3 py-1.5 text-sm\"\n                />\n                <div className=\"sm:hidden\">\n                  <LogoutButton \n                    variant=\"outline\" \n                    className=\"flex items-center p-2 text-neutral-500 hover:text-neutral-700 hover:bg-neutral-100 rounded-md transition-colors touch-target\"\n                  />\n                </div>\n              </>\n            ) : (\n              // Not Authenticated Section\n              <>\n                <Link \n                  to=\"/login\" \n                  className=\"flex items-center px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors text-sm font-medium\"\n                  aria-label=\"Login to your account\"\n                >\n                  <LogIn className=\"h-4 w-4 mr-1 sm:mr-2\" aria-hidden=\"true\" />\n                  <span className=\"hidden sm:inline\">Login</span>\n                </Link>\n                <Link \n                  to=\"/account\" \n                  className=\"flex items-center p-2 text-neutral-500 hover:text-neutral-700 hover:bg-neutral-100 rounded-md transition-colors touch-target\"\n                  aria-label=\"Connect Account\"\n                >\n                  <User className=\"h-5 w-5 sm:h-6 sm:w-6 mr-1 sm:mr-2\" aria-hidden=\"true\" />\n                  <span className=\"hidden md:inline-block text-sm font-medium\">\n                    Connect Account\n                  </span>\n                  <span className=\"md:hidden text-sm font-medium\">\n                    Connect\n                  </span>\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      </nav>\n      \n      {/* Mobile Navigation */}\n      <MobileNavigation isOpen={isMobileMenuOpen} onClose={closeMobileMenu} />\n    </>\n  );\n};\n\nexport default Navbar;\n","// Unified Strategy interface for Polytrade\n// Single source of truth for strategy definitions across frontend and backend\nexport var StrategyType;\n(function (StrategyType) {\n    StrategyType[\"MOVING_AVERAGE_CROSSOVER\"] = \"MovingAverageCrossover\";\n    StrategyType[\"MA_CROSSOVER\"] = \"MovingAverageCrossover\";\n    StrategyType[\"RSI\"] = \"RSI\";\n    StrategyType[\"MACD\"] = \"MACD\";\n    StrategyType[\"BOLLINGER_BANDS\"] = \"BollingerBands\";\n    StrategyType[\"BREAKOUT\"] = \"Breakout\";\n    StrategyType[\"CUSTOM\"] = \"Custom\";\n})(StrategyType || (StrategyType = {}));\n","import { MarketData, Strategy, StrategyType, Trade } from '../types';\nimport { MovingAverageCrossoverParameters, RSIParameters, BreakoutParameters } from '../types';\n\nexport interface Transaction {\n  id: string;\n  type: 'DEPOSIT' | 'WITHDRAWAL' | 'TRADE';\n  description: string;\n  amount: number;\n  status: 'COMPLETED' | 'PENDING' | 'FAILED';\n  timestamp: number;\n}\n\nexport const mockTransactions: Transaction[] = [\n  {\n    id: 'tx_1',\n    type: 'DEPOSIT',\n    description: 'USDT Deposit',\n    amount: 5000,\n    status: 'COMPLETED',\n    timestamp: Date.now() - 24 * 60 * 60 * 1000\n  },\n  {\n    id: 'tx_2',\n    type: 'TRADE',\n    description: 'BTC-USDT Buy',\n    amount: 2500,\n    status: 'COMPLETED',\n    timestamp: Date.now() - 12 * 60 * 60 * 1000\n  },\n  {\n    id: 'tx_3',\n    type: 'WITHDRAWAL',\n    description: 'USDT Withdrawal',\n    amount: 1000,\n    status: 'PENDING',\n    timestamp: Date.now() - 6 * 60 * 60 * 1000\n  },\n  {\n    id: 'tx_4',\n    type: 'TRADE',\n    description: 'ETH-USDT Sell',\n    amount: 1500,\n    status: 'COMPLETED',\n    timestamp: Date.now() - 3 * 60 * 60 * 1000\n  },\n  {\n    id: 'tx_5',\n    type: 'DEPOSIT',\n    description: 'BTC Deposit',\n    amount: 3000,\n    status: 'COMPLETED',\n    timestamp: Date.now() - 1 * 60 * 60 * 1000\n  }\n];\n\n// Generate mock market data for the past 100 periods\nexport const mockMarketData: MarketData[] = Array.from({ length: 100 }, (_, i) => {\n  const basePrice = 50000 + Math.random() * 5000;\n  const volatility = basePrice * 0.01;\n  const timestamp = Date.now() - (99 - i) * 60 * 1000; // Last 100 minutes\n  const open = basePrice + (Math.random() - 0.5) * volatility;\n  const high = open + Math.random() * volatility;\n  const low = open - Math.random() * volatility;\n  const close = low + Math.random() * (high - low);\n  \n  return {\n    pair: 'BTC-USDT',\n    timestamp,\n    open,\n    high,\n    low,\n    close,\n    volume: 100 + Math.random() * 900,\n  };\n});\n\nexport const mockStrategies: Strategy[] = [\n  {\n    id: '1',\n    name: 'BTC Daily MA Crossover',\n    type: StrategyType.MA_CROSSOVER,\n    active: true,\n    parameters: {\n      fastPeriod: 10,\n      slowPeriod: 50,\n      pair: 'BTC-USDT',\n      timeframe: '1d'\n    } as MovingAverageCrossoverParameters,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    performance: {\n      totalPnL: 12.5,\n      winRate: 0.65,\n      tradesCount: 24\n    }\n  },\n  {\n    id: '2',\n    name: 'ETH RSI Strategy',\n    type: StrategyType.RSI,\n    active: true,\n    parameters: {\n      period: 14,\n      overbought: 70,\n      oversold: 30,\n      pair: 'ETH-USDT',\n      timeframe: '4h'\n    } as RSIParameters,\n    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n    performance: {\n      totalPnL: 8.2,\n      winRate: 0.58,\n      tradesCount: 17\n    }\n  },\n  {\n    id: '3',\n    name: 'BTC Breakout',\n    type: StrategyType.BREAKOUT,\n    active: false,\n    parameters: {\n      lookbackPeriod: 24,\n      breakoutThreshold: 2.5,\n      pair: 'BTC-USDT',\n      timeframe: '1h'\n    } as BreakoutParameters,\n    createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),\n    performance: {\n      totalPnL: 15.7,\n      winRate: 0.45,\n      tradesCount: 11\n    }\n  }\n];\n\n// Generate mock trades with guaranteed unique IDs\nexport const mockTrades: Trade[] = [\n  {\n    id: 'mock-trade-1',\n    pair: 'BTC-USDT',\n    timestamp: Date.now() - 3 * 60 * 60 * 1000,\n    type: 'BUY',\n    price: 51234.56,\n    amount: 0.05,\n    total: 2561.73,\n    strategyId: '1',\n    status: 'COMPLETED'\n  },\n  {\n    id: 'mock-trade-2',\n    pair: 'BTC-USDT',\n    timestamp: Date.now() - 2 * 60 * 60 * 1000,\n    type: 'SELL',\n    price: 51934.12,\n    amount: 0.05,\n    total: 2596.71,\n    strategyId: '1',\n    status: 'COMPLETED'\n  },\n  {\n    id: 'mock-trade-3',\n    pair: 'ETH-USDT',\n    timestamp: Date.now() - 1 * 60 * 60 * 1000,\n    type: 'BUY',\n    price: 3245.78,\n    amount: 0.25,\n    total: 811.45,\n    strategyId: '2',\n    status: 'COMPLETED'\n  },\n  {\n    id: 'mock-trade-4',\n    pair: 'BTC-USDT',\n    timestamp: Date.now() - 30 * 60 * 1000,\n    type: 'BUY',\n    price: 52100.45,\n    amount: 0.03,\n    total: 1563.01,\n    strategyId: '3',\n    status: 'PENDING'\n  }\n];\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = ((state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? {\n      type: anonymousActionType || findCallerName(new Error().stack) || \"anonymous\"\n    } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  });\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = ((selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  });\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    return setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      return setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { produce } from 'immer';\n\nconst immerImpl = (initializer) => (set, get, store) => {\n  store.setState = (updater, replace, ...args) => {\n    const nextState = typeof updater === \"function\" ? produce(updater) : updater;\n    return set(nextState, replace, ...args);\n  };\n  return initializer(store.setState, get, store);\n};\nconst immer = immerImpl;\n\nexport { immer };\n","import CryptoJS from \"crypto-js\";\nimport { create } from \"zustand\";\nimport { createJSONStorage, persist } from \"zustand/middleware\";\nimport { immer } from \"zustand/middleware/immer\";\n\n \n\n// Define store state interface\nexport interface AppState {\n  // API Configuration\n  apiCredentials: {\n    apiKey: string;\n    apiSecret: string;\n    isLiveTrading: boolean;\n  };\n\n  // UI State\n  ui: {\n    darkMode: boolean;\n    showExtension: boolean;\n    notifications: {\n      email: boolean;\n      trade: boolean;\n      price: boolean;\n      chat: boolean;\n    };\n  };\n\n  // Trading Configuration\n  trading: {\n    defaultPair: string;\n    mockMode: boolean;\n  };\n\n  // Toast Notifications\n  toasts: Array<{\n    id: string;\n    message: string;\n    type: \"success\" | \"error\" | \"warning\" | \"info\";\n    timestamp: number;\n    dismissible: boolean;\n  }>;\n}\n\n// Define store actions interface\nexport interface AppActions {\n  // API Credentials\n  setApiCredentials: (credentials: Partial<AppState[\"apiCredentials\"]>) => void;\n  clearApiCredentials: () => void;\n\n  // UI Actions\n  setDarkMode: (enabled: boolean) => void;\n  setShowExtension: (show: boolean) => void;\n  setNotifications: (\n    notifications: Partial<AppState[\"ui\"][\"notifications\"]>\n  ) => void;\n\n  // Trading Actions\n  setDefaultPair: (pair: string) => void;\n  setMockMode: (enabled: boolean) => void;\n\n  // Toast Actions\n  addToast: (toast: Omit<AppState[\"toasts\"][0], \"id\" | \"timestamp\">) => void;\n  removeToast: (id: string) => void;\n  clearToasts: () => void;\n}\n\n// Encryption key for sensitive data\nconst ENCRYPTION_KEY = \"poloniex-trading-platform-key\";\n\n// Encrypt sensitive data\nconst encryptData = (data: string): string => {\n  try {\n    return CryptoJS.AES.encrypt(data, ENCRYPTION_KEY).toString();\n  } catch (error) {\n    // console.error(\"Encryption failed:\", error);\n    return data;\n  }\n};\n\n// Decrypt sensitive data\nconst decryptData = (encryptedData: string): string => {\n  try {\n    const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  } catch (error) {\n    // console.error(\"Decryption failed:\", error);\n    return encryptedData;\n  }\n};\n\n// Custom storage with encryption for sensitive data\nconst createEncryptedStorage = () => ({\n  getItem: (name: string): string | null => {\n    const item = localStorage.getItem(name);\n    if (!item) return null;\n\n    try {\n      const parsed = JSON.parse(item);\n      if (parsed.state?.apiCredentials) {\n        // Decrypt API credentials\n        if (parsed.state.apiCredentials.apiKey) {\n          parsed.state.apiCredentials.apiKey = decryptData(\n            parsed.state.apiCredentials.apiKey\n          );\n        }\n        if (parsed.state.apiCredentials.apiSecret) {\n          parsed.state.apiCredentials.apiSecret = decryptData(\n            parsed.state.apiCredentials.apiSecret\n          );\n        }\n      }\n      return JSON.stringify(parsed);\n    } catch (error) {\n      // console.error(\"Error parsing stored data:\", error);\n      return item;\n    }\n  },\n\n  setItem: (name: string, value: string): void => {\n    try {\n      const parsed = JSON.parse(value);\n      if (parsed.state?.apiCredentials) {\n        // Encrypt API credentials before storing\n        if (parsed.state.apiCredentials.apiKey) {\n          parsed.state.apiCredentials.apiKey = encryptData(\n            parsed.state.apiCredentials.apiKey\n          );\n        }\n        if (parsed.state.apiCredentials.apiSecret) {\n          parsed.state.apiCredentials.apiSecret = encryptData(\n            parsed.state.apiCredentials.apiSecret\n          );\n        }\n      }\n      localStorage.setItem(name, JSON.stringify(parsed));\n    } catch (error) {\n      // console.error(\"Error storing data:\", error);\n      localStorage.setItem(name, value);\n    }\n  },\n\n  removeItem: (name: string): void => {\n    localStorage.removeItem(name);\n  },\n});\n\n// Default state\nconst defaultState: AppState = {\n  apiCredentials: {\n    apiKey: \"\",\n    apiSecret: \"\",\n    isLiveTrading: false,\n  },\n  ui: {\n    darkMode: false,\n    showExtension: true,\n    notifications: {\n      email: true,\n      trade: true,\n      price: true,\n      chat: true,\n    },\n  },\n  trading: {\n    defaultPair: \"BTC_USDT\",\n    mockMode: true,\n  },\n  toasts: [],\n};\n\n// Create the store\nexport const useAppStore = create<AppState & AppActions>()(\n  persist(\n    immer((set) => ({\n      ...defaultState,\n\n      // API Credentials Actions\n      setApiCredentials: (credentials) =>\n        set((state) => {\n          Object.assign(state.apiCredentials, credentials);\n        }),\n\n      clearApiCredentials: () =>\n        set((state) => {\n          state.apiCredentials = {\n            apiKey: \"\",\n            apiSecret: \"\",\n            isLiveTrading: false,\n          };\n        }),\n\n      // UI Actions\n      setDarkMode: (enabled) =>\n        set((state) => {\n          state.ui.darkMode = enabled;\n          if (enabled) {\n            document.documentElement.classList.add('dark');\n          } else {\n            document.documentElement.classList.remove('dark');\n          }\n        }),\n\n      setShowExtension: (show) =>\n        set((state) => {\n          state.ui.showExtension = show;\n        }),\n\n      setNotifications: (notifications) =>\n        set((state) => {\n          Object.assign(state.ui.notifications, notifications);\n        }),\n\n      // Trading Actions\n      setDefaultPair: (pair) =>\n        set((state) => {\n          state.trading.defaultPair = pair;\n        }),\n\n      setMockMode: (enabled) =>\n        set((state) => {\n          state.trading.mockMode = enabled;\n        }),\n\n      // Toast Actions\n      addToast: (toast) =>\n        set((state) => {\n          const newToast = {\n            ...toast,\n            id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n            timestamp: Date.now(),\n          };\n          state.toasts.push(newToast);\n        }),\n\n      removeToast: (id) =>\n        set((state) => {\n          const index = state.toasts.findIndex((t) => t.id === id);\n          if (index !== -1) {\n            state.toasts.splice(index, 1);\n          }\n        }),\n\n      clearToasts: () =>\n        set((state) => {\n          state.toasts = [];\n        }),\n    })),\n    {\n      name: \"poloniex-app-storage\",\n      storage: createJSONStorage(() => createEncryptedStorage()),\n      partialize: (state) => ({\n        apiCredentials: state.apiCredentials,\n        ui: state.ui,\n        trading: state.trading,\n        // Don't persist toasts\n      }),\n    }\n  )\n);\n\n// Selector hooks for better performance\nexport const useApiCredentials = () =>\n  useAppStore((state) => state.apiCredentials);\nexport const useUISettings = () => useAppStore((state) => state.ui);\nexport const useTradingSettings = () => useAppStore((state) => state.trading);\nexport const useToasts = () => useAppStore((state) => state.toasts);\n\n// Action hooks\nexport const useApiActions = () =>\n  useAppStore((state) => ({\n    setApiCredentials: state.setApiCredentials,\n    clearApiCredentials: state.clearApiCredentials,\n  }));\n\nexport const useUIActions = () =>\n  useAppStore((state) => ({\n    setDarkMode: state.setDarkMode,\n    setShowExtension: state.setShowExtension,\n    setNotifications: state.setNotifications,\n  }));\n\nexport const useTradingActions = () =>\n  useAppStore((state) => ({\n    setDefaultPair: state.setDefaultPair,\n    setMockMode: state.setMockMode,\n  }));\n\nexport const useToastActions = () =>\n  useAppStore((state) => ({\n    addToast: state.addToast,\n    removeToast: state.removeToast,\n    clearToasts: state.clearToasts,\n  }));\n","// Environment detection and configuration\n\nexport const IS_WEBCONTAINER =\n  typeof window !== 'undefined' &&\n  window.location &&\n  window.location.hostname.includes('webcontainer-api.io');\n\nexport const IS_LOCAL_DEV =\n  typeof window !== 'undefined' &&\n  window.location &&\n  (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1');\n\n// Get environment variables with fallbacks\nexport const getEnvVariable = (key: string, fallback: string = ''): string => {\n  const env = (import.meta as unknown as { env?: Record<string, unknown> }).env;\n  const value = env ? env[key] : undefined;\n  return value !== undefined ? String(value) : fallback;\n};\n\n// Get Poloniex API credentials from environment\nexport const getPoloniexApiKey = (): string => {\n  return getEnvVariable('VITE_POLONIEX_API_KEY', '');\n};\n\nexport const getPoloniexApiSecret = (): string => {\n  return getEnvVariable('VITE_POLONIEX_API_SECRET', '');\n};\n\nexport const getPoloniexPassphrase = (): string => {\n  // Passphrase is not required for Poloniex API v3\n  // This function is kept for compatibility but returns empty string\n  return '';\n};\n\n// Get API base URLs with environment variable support\nexport const getApiBaseUrl = (service: 'futures' | 'spot' = 'futures'): string => {\n  // Check for custom API URL first - V3 futures specific\n  const customApiUrl = getEnvVariable('VITE_POLONIEX_API_BASE_URL', '');\n  if (customApiUrl) {\n    return customApiUrl;\n  }\n\n  // Support legacy NEXT_PUBLIC_API_URL for compatibility\n  const nextPublicApiUrl = getEnvVariable('NEXT_PUBLIC_API_URL', '');\n  if (nextPublicApiUrl) {\n    return nextPublicApiUrl;\n  }\n\n  // Use backend proxy endpoints to avoid CORS issues\n  return service === 'futures'\n    ? '/api/futures'\n    : '/api/spot';\n};\n\n// Get WebSocket URLs for V3 futures\nexport const getPoloniexWebSocketUrl = (type: 'public' | 'private' = 'public'): string => {\n  const customWsUrl = getEnvVariable('VITE_POLONIEX_WS_URL', '');\n  if (customWsUrl) {\n    return customWsUrl;\n  }\n\n  // Default Poloniex V3 futures WebSocket endpoints\n  return type === 'public'\n    ? 'wss://futures-apiws.poloniex.com'\n    : 'wss://futures-apiws.poloniex.com';\n};\n\n// Mock mode configuration\nexport const isMockModeForced = (): boolean => {\n  // Check for explicit mock mode environment variable\n  const forceMock = getEnvVariable('VITE_FORCE_MOCK_MODE', '').toLowerCase();\n  return forceMock === 'true' || forceMock === '1';\n};\n\nexport const isMockModeDisabled = (): boolean => {\n  // Check for explicit disable mock mode environment variable\n  const disableMock = getEnvVariable('VITE_DISABLE_MOCK_MODE', '').toLowerCase();\n  return disableMock === 'true' || disableMock === '1';\n};\n\n// Determine if mock mode should be enabled\nexport const shouldUseMockMode = (hasCredentials: boolean = false): boolean => {\n  // If explicitly forced, use mock mode\n  if (isMockModeForced()) {\n    return true;\n  }\n\n  // If explicitly disabled, don't use mock mode (requires credentials)\n  if (isMockModeDisabled()) {\n    return !hasCredentials;\n  }\n\n  // Default behavior: only use mock mode in development environments when no credentials\n  // Production should never default to mock mode\n  if (IS_WEBCONTAINER || IS_LOCAL_DEV) {\n    return !hasCredentials;\n  }\n\n  // In production, require credentials - don't fall back to mock mode\n  return !hasCredentials;\n};\n\n// Get base URL for the application\nexport const getBaseUrl = () => {\n  if (IS_WEBCONTAINER) {\n    return window.location.origin;\n  }\n  if (IS_LOCAL_DEV) {\n    return 'http://localhost:5675'; // .clinerules compliant frontend port\n  }\n  // Production URL - Railway domain or current origin\n  return typeof window !== 'undefined' ? window.location.origin : 'https://poloniex-trading-platform.up.railway.app';\n};\n\n// Get backend API URL with proper protocol and Railway support\nexport const getBackendUrl = (): string => {\n  // Priority 1: Environment detection (window context first for tests/dev)\n  if (typeof window !== 'undefined' && window.location) {\n    const hostname = window.location.hostname;\n    const protocol = window.location.protocol || 'http:';\n\n    // Local development\n    if (hostname === 'localhost' || hostname === '127.0.0.1') {\n      // Tests expect explicit localhost:3000 for local backend\n      return 'http://localhost:3000';\n    }\n\n    // Railway deployment detection\n    if (hostname.includes('railway.app') || hostname.includes('up.railway.app')) {\n      return 'https://polytrade-be.up.railway.app';\n    }\n\n    // WebContainer detection\n    if (hostname.includes('webcontainer-api.io')) {\n      return `${protocol}//${hostname}:8765`;\n    }\n\n    // Fall back to same origin for other cases\n    return window.location.origin;\n  }\n  // Priority 2: Explicit backend URL (server-side or when window is unavailable)\n  const envUrl = getEnvVariable('VITE_BACKEND_URL');\n  if (envUrl) return envUrl;\n\n  // Priority 3: Railway environment variables (server-side scenarios)\n  const railwayPublicDomain = getEnvVariable('VITE_RAILWAY_PUBLIC_DOMAIN');\n  if (railwayPublicDomain) {\n    return `https://${railwayPublicDomain}`;\n  }\n\n  const railwayPrivateDomain = getEnvVariable('VITE_RAILWAY_PRIVATE_DOMAIN');\n  if (railwayPrivateDomain) {\n    return `https://${railwayPrivateDomain}`;\n  }\n\n  // Server-side fallback - use .clinerules compliant port\n  return 'http://localhost:8765';\n};\n\n// Get WebSocket URL with proper protocol handling for Railway deployment\nexport const getWebSocketUrl = (): string => {\n  // Priority 1: Explicit WebSocket URL\n  const explicitWsUrl = getEnvVariable('VITE_WS_URL');\n  if (explicitWsUrl) return explicitWsUrl;\n\n  // Priority 2: Convert backend URL to WebSocket URL\n  const backendUrl = getBackendUrl();\n\n  // Convert HTTP/HTTPS to WS/WSS appropriately\n  if (backendUrl.startsWith('https://')) {\n    return backendUrl.replace('https://', 'wss://');\n  } else if (backendUrl.startsWith('http://')) {\n    return backendUrl.replace('http://', 'ws://');\n  }\n\n  return backendUrl;\n};\n\n// Get development frontend URL with .clinerules compliant ports\nexport const getFrontendUrl = (): string => {\n  if (typeof window !== 'undefined' && window.location) {\n    return window.location.origin;\n  }\n\n  // Default to .clinerules compliant frontend port range (5675-5699)\n  return 'http://localhost:5675';\n};\n","import { useAppStore } from \"@/store\";\nimport { MarketData } from \"@/types\";\nimport { getApiBaseUrl, shouldUseMockMode } from \"@/utils/environment\";\nimport axios from \"axios\";\n\n// Authentication token for backend API\nconst getAuthToken = (): string | null => {\n  return localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n};\n\n// Create axios instance with authentication\nconst createAuthenticatedAxios = () => {\n  const token = getAuthToken();\n  return axios.create({\n    baseURL: getApiBaseUrl(),\n    timeout: 30000,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(token && { Authorization: `Bearer ${token}` }),\n    },\n  });\n};\n\n// Custom error classes\nexport class PoloniexAPIError extends Error {\n  constructor(\n    message: string,\n    public code?: string,\n    public statusCode?: number\n  ) {\n    super(message);\n    this.name = \"PoloniexAPIError\";\n  }\n}\n\nexport class PoloniexConnectionError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PoloniexConnectionError\";\n  }\n}\n\nexport class PoloniexAuthenticationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PoloniexAuthenticationError\";\n  }\n}\n\n// Rate limiting configuration\nconst RATE_LIMITS = {\n  PUBLIC_REQUESTS_PER_SECOND: 10,\n  PRIVATE_REQUESTS_PER_SECOND: 5,\n  ORDERS_PER_SECOND: 2,\n};\n\nconst safeErrorHandler = (error: unknown): Error => {\n  if (error instanceof Error) return error;\n  return new Error(String(error));\n};\n\n// Singleton API client\nclass PoloniexApiClient {\n  private static instance: PoloniexApiClient;\n  private mockMode: boolean = true;\n  private lastBalanceUpdate: number = 0;\n  private cachedBalance = null;\n  private historicalData: Map<string, MarketData[]> = new Map();\n  private rateLimitQueue: Map<string, number[]> = new Map();\n\n  private constructor() {\n    this.loadCredentials();\n  }\n\n  public static getInstance(): PoloniexApiClient {\n    if (!PoloniexApiClient.instance) {\n      PoloniexApiClient.instance = new PoloniexApiClient();\n    }\n    return PoloniexApiClient.instance;\n  }\n\n  public loadCredentials(): void {\n    try {\n      const storeState = useAppStore.getState();\n      this.mockMode =\n        shouldUseMockMode(true) || !storeState.apiCredentials.isLiveTrading;\n    } catch {\n      this.mockMode = shouldUseMockMode(false);\n    }\n  }\n\n  private async checkRateLimit(type: string): Promise<void> {\n    const now = Date.now();\n    const key = `${type}_requests`;\n    const limit =\n      type === \"public\"\n        ? RATE_LIMITS.PUBLIC_REQUESTS_PER_SECOND\n        : type === \"private\"\n        ? RATE_LIMITS.PRIVATE_REQUESTS_PER_SECOND\n        : RATE_LIMITS.ORDERS_PER_SECOND;\n\n    if (!this.rateLimitQueue.has(key)) {\n      this.rateLimitQueue.set(key, []);\n    }\n\n    const queue = this.rateLimitQueue.get(key)!;\n    const oneSecondAgo = now - 1000;\n\n    while (queue.length > 0 && queue[0]! < oneSecondAgo) {\n      queue.shift();\n    }\n\n    if (queue.length >= limit) {\n      const oldestRequest = queue[0] ?? now;\n      const waitTime = Math.max(0, 1000 - (now - oldestRequest));\n      if (waitTime > 0) {\n        await new Promise((resolve) => setTimeout(resolve, waitTime));\n      }\n    }\n\n    queue.push(now);\n  }\n\n  public async getAccountBalance(): Promise<{\n    totalAmount: string;\n    availableAmount: string;\n    accountEquity: string;\n    unrealizedPnL: string;\n    todayPnL: string;\n    todayPnLPercentage: string;\n  } | null> {\n    if (this.cachedBalance && Date.now() - this.lastBalanceUpdate < 10000) {\n      return this.cachedBalance;\n    }\n\n    try {\n      if (this.mockMode) {\n        return {\n          totalAmount: \"15478.23\",\n          availableAmount: \"12345.67\",\n          accountEquity: \"15820.45\",\n          unrealizedPnL: \"342.22\",\n          todayPnL: \"156.78\",\n          todayPnLPercentage: \"1.02\",\n        };\n      }\n\n      const api = createAuthenticatedAxios();\n      const response = await api.get(\"/account/balances\");\n\n      this.cachedBalance = response.data;\n      this.lastBalanceUpdate = Date.now();\n\n      return this.cachedBalance;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === 401) {\n          throw new PoloniexAuthenticationError(\n            \"Authentication failed - please check your API credentials\"\n          );\n        }\n      }\n      throw new PoloniexConnectionError(\n        `Failed to fetch account balance: ${safeErrorHandler(error).message}`\n      );\n    }\n  }\n\n  public async getMarketData(pair: string) {\n    try {\n      if (this.mockMode) {\n        return this.generateMockMarketData(100);\n      }\n\n      await this.checkRateLimit(\"public\");\n      const api = createAuthenticatedAxios();\n      const response = await api.get(`/klines/${pair}`, {\n        params: {\n          interval: \"5m\",\n          limit: 100,\n        },\n      });\n\n      return response.data;\n    } catch (error) {\n      throw new PoloniexConnectionError(\n        `Failed to fetch market data for ${pair}: ${\n          safeErrorHandler(error).message\n        }`\n      );\n    }\n  }\n\n  private generateMockMarketData(count: number) {\n    return Array.from({ length: count }, (_, i) => {\n      const basePrice = 50000 + Math.random() * 5000;\n      const volatility = basePrice * 0.01;\n      const timestamp = Date.now() - (count - 1 - i) * 60 * 1000;\n      const open = basePrice + (Math.random() - 0.5) * volatility;\n      const high = open + Math.random() * volatility;\n      const low = open - Math.random() * volatility;\n      const close = low + Math.random() * (high - low);\n\n      return [\n        new Date(timestamp).toISOString(),\n        open.toString(),\n        high.toString(),\n        low.toString(),\n        close.toString(),\n        (100 + Math.random() * 900).toString(),\n      ];\n    });\n  }\n\n  public async getHistoricalData(\n    pair: string,\n    startDate: string,\n    endDate: string\n  ): Promise<MarketData[]> {\n    const cacheKey = `${pair}-${startDate}-${endDate}`;\n\n    if (this.historicalData.has(cacheKey)) {\n      return this.historicalData.get(cacheKey)!;\n    }\n\n    try {\n      if (this.mockMode) {\n        const mockData = this.generateMockHistoricalData(startDate, endDate);\n        this.historicalData.set(cacheKey, mockData);\n        return mockData;\n      }\n\n      const api = createAuthenticatedAxios();\n      const response = await api.get(`/klines/${pair}`, {\n        params: {\n          interval: \"1h\",\n          startTime: new Date(startDate).getTime(),\n          endTime: new Date(endDate).getTime(),\n          limit: 1000,\n        },\n      });\n\n      const data = response.data.map((candle: unknown[]) => ({\n        pair,\n        timestamp: new Date(candle[0] as string).getTime(),\n        open: parseFloat(candle[1] as string),\n        high: parseFloat(candle[2] as string),\n        low: parseFloat(candle[3] as string),\n        close: parseFloat(candle[4] as string),\n        volume: parseFloat(candle[5] as string),\n      }));\n\n      this.historicalData.set(cacheKey, data);\n      return data;\n    } catch {\n      const mockData = this.generateMockHistoricalData(startDate, endDate);\n      this.historicalData.set(cacheKey, mockData);\n      return mockData;\n    }\n  }\n\n  private generateMockHistoricalData(\n    startDate: string,\n    endDate: string\n  ): MarketData[] {\n    const start = new Date(startDate).getTime();\n    const end = new Date(endDate).getTime();\n    const hourMs = 60 * 60 * 1000;\n    const data: MarketData[] = [];\n\n    let basePrice = 50000;\n\n    for (let time = start; time <= end; time += hourMs) {\n      const volatility = basePrice * 0.01;\n      const open = basePrice + (Math.random() - 0.5) * volatility;\n      const high = open + Math.random() * volatility;\n      const low = open - Math.random() * volatility;\n      const close = low + Math.random() * (high - low);\n\n      data.push({\n        pair: \"BTC-USDT\",\n        timestamp: time,\n        open,\n        high,\n        low,\n        close,\n        volume: 100 + Math.random() * 900,\n      });\n\n      basePrice = close;\n    }\n\n    return data;\n  }\n\n  public async placeOrder(\n    _pair: string,\n    _side: 'buy' | 'sell',\n    _type: 'market' | 'limit',\n    _quantity: number,\n    _price?: number\n  ): Promise<{ orderId: string; status: string; id?: string }> {\n    // TODO: Implement actual order placement\n    // For now, return a mock response to satisfy the interface\n    // console.warn('placeOrder called - this is a stub implementation');\n    \n    if (this.mockMode) {\n      const orderId = `mock_${Date.now()}`;\n      return {\n        orderId,\n        id: orderId, // Add id field for compatibility\n        status: 'filled'\n      };\n    }\n    \n    throw new Error('Order placement not implemented for live trading');\n  }\n\n  public async placeConditionalOrder(\n    _pair: string,\n    _side: 'buy' | 'sell',\n    _type: 'stop' | 'takeProfit',\n    _quantity: number,\n    _triggerPrice: number\n  ): Promise<{ orderId: string; status: string }> {\n    // TODO: Implement actual conditional order placement\n    // For now, return a mock response to satisfy the interface\n    // console.warn('placeConditionalOrder called - this is a stub implementation');\n    \n    if (this.mockMode) {\n      return {\n        orderId: `mock_conditional_${Date.now()}`,\n        status: 'pending'\n      };\n    }\n    \n    throw new Error('Conditional order placement not implemented for live trading');\n  }\n\n  // Event listener methods for automated trading\n  public onPositionUpdate(_callback: (data: unknown) => void): void {\n    // TODO: Implement position update listener\n    // console.warn('onPositionUpdate called - this is a stub implementation');\n  }\n\n  public onLiquidationWarning(_callback: (data: unknown) => void): void {\n    // TODO: Implement liquidation warning listener\n    // console.warn('onLiquidationWarning called - this is a stub implementation');\n  }\n\n  public onMarginUpdate(_callback: (data: unknown) => void): void {\n    // TODO: Implement margin update listener\n    // console.warn('onMarginUpdate called - this is a stub implementation');\n  }\n}\n\nexport const poloniexApi = PoloniexApiClient.getInstance();\n","// WebSocket Service Type Definitions\n\nexport enum ConnectionState {\n  DISCONNECTED = \"disconnected\",\n  CONNECTING = \"connecting\",\n  CONNECTED = \"connected\",\n  RECONNECTING = \"reconnecting\",\n  FAILED = \"failed\",\n}\n\nexport enum ReconnectionStrategy {\n  EXPONENTIAL_BACKOFF = \"exponential_backoff\",\n  LINEAR_BACKOFF = \"linear_backoff\",\n  IMMEDIATE = \"immediate\",\n  NONE = \"none\",\n}\n\nexport interface PoloniexBulletToken {\n  code: string;\n  data: {\n    instanceServers: Array<{\n      endpoint: string;\n      protocol: string;\n      encrypt: boolean;\n      pingInterval: number;\n      pingTimeout: number;\n    }>;\n    token: string;\n  };\n}\n\nexport interface ConnectionConfig {\n  url: string;\n  options?: {\n    reconnectionStrategy?: ReconnectionStrategy;\n    initialReconnectDelay?: number;\n    maxReconnectDelay?: number;\n    maxReconnectAttempts?: number;\n    reconnectionJitter?: number;\n    timeout?: number;\n    pingInterval?: number;\n    pingTimeout?: number;\n    autoConnect?: boolean;\n    forceNew?: boolean;\n    transports?: string[];\n  };\n  auth?: {\n    token?: string;\n    [key: string]: unknown;\n  };\n}\n\nexport interface ConnectionStats {\n  connectTime: number | null;\n  disconnectTime: number | null;\n  lastPingTime: number | null;\n  lastPongTime: number | null;\n  pingLatency: number | null;\n  reconnectAttempts: number;\n  successfulReconnects: number;\n  failedReconnects: number;\n  totalDisconnects: number;\n  connectionUptime: number;\n  connectionDowntime: number;\n}\n\nexport interface WebSocketMessage {\n  type: string;\n  topic?: string;\n  data?: unknown;\n  timestamp?: number;\n}\n\nexport interface MarketData {\n  pair: string;\n  timestamp: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport interface Trade {\n  id: string;\n  pair: string;\n  price: number;\n  amount: number;\n  side: 'buy' | 'sell';\n  timestamp: number;\n}\n\nexport interface OrderBookLevel {\n  price: string;\n  size: string;\n}\n\nexport interface OrderBook {\n  symbol: string;\n  bids: OrderBookLevel[];\n  asks: OrderBookLevel[];\n  timestamp: number;\n}\n\nexport interface KlineData {\n  timestamp: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport interface WebSocketHealth {\n  state: ConnectionState;\n  isHealthy: boolean;\n  uptime: number;\n  lastPing: number;\n  latency: number | null;\n  reconnectAttempts: number;\n}\n\nexport interface PoloniexV3Config {\n  BULLET_ENDPOINT: string;\n  PUBLIC_WS_URL: string;\n  PRIVATE_WS_URL: string;\n  RECONNECT_INTERVAL: number;\n  MAX_RECONNECT_ATTEMPTS: number;\n  PING_INTERVAL: number;\n  TOKEN_EXPIRY: number;\n}\n\n// WebSocket Events aligned with backend enums\nexport enum WebSocketEvents {\n  // Connection lifecycle events (matching @types/ws)\n  OPEN = 'open',\n  CLOSE = 'close',\n  ERROR = 'error',\n  MESSAGE = 'message',\n  PING = 'ping',\n  PONG = 'pong',\n  \n  // Custom application events\n  CONNECTED = 'connected',\n  DISCONNECTED = 'disconnected',\n  RECONNECTING = 'reconnecting',\n  RECONNECTED = 'reconnected',\n  WELCOME = 'welcome',\n  ACK = 'ack'\n}\n\n// Client-side WebSocket Events\nexport enum ClientWebSocketEvents {\n  // Connection state\n  CONNECTION_STATE_CHANGED = 'connectionStateChanged',\n  CONNECTION_ESTABLISHED = 'connectionEstablished',\n  CONNECTION_LOST = 'connectionLost',\n  \n  // Market data\n  MARKET_DATA = 'marketData',\n  TICKER_UPDATE = 'tickerUpdate',\n  ORDER_BOOK_UPDATE = 'orderBookUpdate',\n  TRADE_EXECUTED = 'tradeExecuted',\n  KLINE_UPDATE = 'klineUpdate',\n  \n  // Account updates\n  ACCOUNT_UPDATE = 'accountUpdate',\n  POSITION_UPDATE = 'positionUpdate',\n  ORDER_UPDATE = 'orderUpdate',\n  BALANCE_UPDATE = 'balanceUpdate',\n  \n  // Subscription management\n  MARKET_SUBSCRIBED = 'marketSubscribed',\n  MARKET_UNSUBSCRIBED = 'marketUnsubscribed',\n  SUBSCRIBE_MARKET = 'subscribeMarket',\n  UNSUBSCRIBE_MARKET = 'unsubscribeMarket',\n  \n  // Error handling\n  WEBSOCKET_ERROR = 'websocketError',\n  SUBSCRIPTION_ERROR = 'subscriptionError',\n  RECONNECTION_ERROR = 'reconnectionError'\n}\n\n// Poloniex V3 Topics (exact API paths)\nexport enum PoloniexTopics {\n  // Public market data\n  TICKER = '/contractMarket/ticker',\n  TICKER_V2 = '/contractMarket/tickerV2',\n  LEVEL2 = '/contractMarket/level2',\n  LEVEL3 = '/contractMarket/level3',\n  EXECUTION = '/contractMarket/execution',\n  KLINE = '/contractMarket/candles',\n  \n  // Private account data\n  WALLET = '/contractAccount/wallet',\n  POSITION = '/contractAccount/position',\n  ORDERS = '/contractAccount/orders',\n  TRADES = '/contractAccount/trades',\n  \n  // System topics\n  FUNDING = '/contract/funding',\n  SYSTEM = '/contract/system'\n}\n\nexport interface SocketIOEvents {\n  CONNECT: string;\n  DISCONNECT: string;\n  RECONNECT: string;\n  RECONNECT_ATTEMPT: string;\n  RECONNECT_ERROR: string;\n  RECONNECT_FAILED: string;\n  CONNECT_ERROR: string;\n  CONNECT_TIMEOUT: string;\n  MARKET_DATA: string;\n  TRADE_EXECUTED: string;\n  ERROR: string;\n  SUBSCRIBE_MARKET: string;\n  UNSUBSCRIBE_MARKET: string;\n  PING: string;\n  PONG: string;\n}\n\nexport interface SubscriptionMessage {\n  id: number;\n  type: string;\n  topic?: string;\n  symbols?: string[];\n  privateChannel?: boolean;\n  response?: boolean;\n}\n\nexport interface ConnectionHealth {\n  state: ConnectionState;\n  isHealthy: boolean;\n  uptime: number;\n  lastPing: number;\n  latency: number | null;\n  reconnectAttempts: number;\n}\n\nexport interface WebSocketServiceInterface {\n  connect(token?: string): Promise<void>;\n  disconnect(): void;\n  isConnected(): boolean;\n  isMockMode(): boolean;\n  getConnectionState(): ConnectionState;\n  getConnectionStats(): ConnectionStats;\n  subscribeToMarket(pair: string): void;\n  unsubscribeFromMarket(pair: string): void;\n  send(event: string, data: unknown): void;\n  on(event: string, callback: (...args: unknown[]) => void): void;\n  off(event: string, callback: (...args: unknown[]) => void): void;\n  subscribeToPoloniexV3(topic: string, symbols?: string[]): void;\n  unsubscribeFromPoloniexV3(topic: string): void;\n}\n\nexport interface TestResult {\n  success: boolean;\n  error?: string;\n  recommendation?: string;\n  skipped?: boolean;\n  reason?: string;\n  [key: string]: unknown;\n}\n\nexport interface PoloniexApiResponse<T> {\n  code: string;\n  data: T;\n  msg?: string;\n}\n\nexport interface PoloniexTicker {\n  symbol: string;\n  price: string;\n  open: string;\n  high: string;\n  low: string;\n  volume: string;\n  timestamp: number;\n}\n\nexport interface PoloniexContract {\n  symbol: string;\n  markPrice: string;\n  indexPrice: string;\n  fundingRate: string;\n  nextFundingTime: number;\n  volume24h: string;\n  turnover24h: string;\n  openInterest: string;\n  maxLeverage: number;\n}\n\nexport interface PoloniexKline {\n  timestamp: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  turnover: string;\n}\n","/**\n * WebSocket Configuration\n *\n * Provides environment-aware WebSocket URL resolution with proper fallbacks\n * for Railway deployment and local development.\n */\n\nimport { getEnvVariable } from '@/utils/environment';\nimport { getBackendUrl } from '@/utils/environment';\n\nexport interface WebSocketConfig {\n  url: string;\n  options: {\n    transports: string[];\n    timeout: number;\n    reconnection: boolean;\n    reconnectionAttempts: number;\n    reconnectionDelay: number;\n    reconnectionDelayMax: number;\n    randomizationFactor: number;\n    forceNew: boolean;\n    upgrade: boolean;\n    rememberUpgrade: boolean;\n  };\n}\n\n/**\n * Get WebSocket URL with proper environment variable resolution\n */\nexport const getWebSocketUrl = (): string => {\n  // Priority 1: Explicit WebSocket URL\n  const explicitWsUrl = getEnvVariable('VITE_WS_URL');\n  if (explicitWsUrl) return explicitWsUrl;\n\n  // Priority 2: Derive from backend URL (handles Railway domains correctly)\n  const backendUrl = getBackendUrl();\n  if (backendUrl) {\n    if (backendUrl.startsWith('https://')) return backendUrl.replace('https://', 'wss://');\n    if (backendUrl.startsWith('http://')) return backendUrl.replace('http://', 'ws://');\n    return backendUrl;\n  }\n\n  // Priority 3: Railway/public domain hints\n  const railwayPublicDomain = getEnvVariable('VITE_RAILWAY_PUBLIC_DOMAIN');\n  if (railwayPublicDomain) return `wss://${railwayPublicDomain}`;\n  const railwayPrivateDomain = getEnvVariable('VITE_RAILWAY_PRIVATE_DOMAIN');\n  if (railwayPrivateDomain) return `wss://${railwayPrivateDomain}`;\n\n  // Priority 4: Environment detection\n  if (typeof window !== 'undefined' && window.location) {\n    const hostname = window.location.hostname;\n    const protocol = window.location.protocol;\n\n    if (hostname === 'localhost' || hostname === '127.0.0.1') {\n      return `${protocol === 'https:' ? 'wss:' : 'ws:'}//${hostname}:8765`;\n    }\n\n    if (hostname.includes('railway.app') || hostname.includes('up.railway.app')) {\n      // As a last resort, same-origin; backend proxy must exist for /socket.io\n      return `${protocol === 'https:' ? 'wss:' : 'ws:'}//${hostname}`;\n    }\n\n    if (hostname.includes('webcontainer-api.io')) {\n      return `${protocol === 'https:' ? 'wss:' : 'ws:'}//${hostname}:8765`;\n    }\n  }\n\n  // Final fallback\n  return 'ws://localhost:8765';\n};\n\n/**\n * Get WebSocket connection configuration\n */\nexport const getWebSocketConfig = (): WebSocketConfig => {\n  const url = getWebSocketUrl();\n\n  return {\n    url,\n    options: {\n      transports: ['websocket', 'polling'],\n      timeout: 10000,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      randomizationFactor: 0.5,\n      // Ensure proper protocol handling for Railway deployment\n      forceNew: true,\n      upgrade: true,\n      rememberUpgrade: false,\n    },\n  };\n};\n\n/**\n * Validate WebSocket URL format\n */\nexport const validateWebSocketUrl = (url: string): boolean => {\n  try {\n    const parsed = new URL(url);\n    return parsed.protocol === 'ws:' || parsed.protocol === 'wss:';\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Get environment-specific connection strategy\n */\nexport const getConnectionStrategy = (): {\n  usePolling: boolean;\n  preferWebSocket: boolean;\n  maxRetries: number;\n} => {\n  const metaEnv = (typeof import.meta !== 'undefined')\n    ? (import.meta as unknown as { env?: { PROD?: boolean } })\n    : undefined;\n  const isProdMeta = !!metaEnv?.env?.PROD;\n  const isProdNode = (typeof process !== 'undefined') && !!process.env && process.env.NODE_ENV === 'production';\n  const isProduction = isProdMeta || isProdNode;\n  const isRailway = getEnvVariable('VITE_RAILWAY_PUBLIC_DOMAIN') !== '';\n\n  if (isProduction && isRailway) {\n    return {\n      usePolling: true, // Railway works better with polling fallback\n      preferWebSocket: true,\n      maxRetries: 3,\n    };\n  }\n\n  return {\n    usePolling: false,\n    preferWebSocket: true,\n    maxRetries: 5,\n  };\n};\n\n/**\n * Debug information for WebSocket configuration\n */\nexport const getWebSocketDebugInfo = () => {\n  const config = getWebSocketConfig();\n  const strategy = getConnectionStrategy();\n\n  return {\n    url: config.url,\n    isValidUrl: validateWebSocketUrl(config.url),\n    environment: {\n      isDev: import.meta.env.DEV,\n      isProd: import.meta.env.PROD,\n      isRailway: getEnvVariable('VITE_RAILWAY_PUBLIC_DOMAIN') !== '',\n      backendUrl: getEnvVariable('VITE_BACKEND_URL'),\n      wsUrl: getEnvVariable('VITE_WS_URL'),\n    },\n    strategy,\n    options: config.options,\n  };\n};\n","import { getWebSocketConfig, getWebSocketDebugInfo, validateWebSocketUrl } from \"@/config/websocket\";\nimport { io, Socket } from \"socket.io-client\";\n\nexport class ConnectionManager {\n  private socket: Socket | null = null;\n\n  async connect(token?: string): Promise<Socket> {\n    return this.connectToBackend(token);\n  }\n\n  async connectToBackend(token?: string): Promise<Socket> {\n    const wsConfig = getWebSocketConfig();\n    \n    if (!wsConfig.url) {\n      throw new Error(\"WebSocket URL not configured\");\n    }\n\n    if (!validateWebSocketUrl(wsConfig.url)) {\n      console.error(\"Invalid WebSocket URL format:\", wsConfig.url);\n      // Log debug info for troubleshooting\n      console.debug(\"WebSocket Debug Info:\", getWebSocketDebugInfo());\n      throw new Error(\"Invalid WebSocket URL format\");\n    }\n\n    const socketOptions: any = {\n      ...wsConfig.options,\n    };\n\n    if (token) {\n      socketOptions.auth = { token };\n    }\n\n    // Log connection attempt for debugging\n    if (import.meta.env.DEV) {\n      console.log(\"Attempting WebSocket connection to:\", wsConfig.url);\n      console.debug(\"Connection options:\", socketOptions);\n    }\n\n    this.socket = io(wsConfig.url, socketOptions);\n\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        console.error(\"WebSocket connection timeout to:\", wsConfig.url);\n        reject(new Error(`Connection timeout to ${wsConfig.url}`));\n      }, wsConfig.options.timeout);\n\n      this.socket!.on(\"connect\", () => {\n        clearTimeout(timeout);\n        if (import.meta.env.DEV) {\n          console.log(\"WebSocket connected successfully to:\", wsConfig.url);\n        }\n        resolve(this.socket!);\n      });\n\n      this.socket!.on(\"connect_error\", (error) => {\n        clearTimeout(timeout);\n        console.error(\"WebSocket connection error:\", error.message);\n        console.debug(\"Failed URL:\", wsConfig.url);\n        console.debug(\"Debug Info:\", getWebSocketDebugInfo());\n        reject(new Error(`Connection error: ${error.message}`));\n      });\n    });\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  isConnected(): boolean {\n    return !!(this.socket && this.socket.connected);\n  }\n\n  isUsingPoloniexDirect(): boolean {\n    return false; // Always use backend proxy\n  }\n\n  getConnectionInfo(): {\n    isConnected: boolean;\n    isUsingPoloniexDirect: boolean;\n    socket: Socket | null;\n  } {\n    return {\n      isConnected: this.isConnected(),\n      isUsingPoloniexDirect: false,\n      socket: this.socket,\n    };\n  }\n}\n","import {\n  MarketData,\n  SubscriptionMessage,\n  Trade,\n  WebSocketMessage,\n  ClientWebSocketEvents,\n  PoloniexTopics,\n} from \"@/types/websocketTypes\";\n\nexport class EventHandlerService {\n  private eventListeners: Map<string, Set<(...args: unknown[]) => void>> =\n    new Map();\n  private subscriptions: Set<string> = new Set();\n  private pendingMessages: Array<{ event: string; data: unknown }> = [];\n  private offlineData: Map<string, unknown> = new Map();\n\n  constructor(\n    private poloniexWs: WebSocket | null,\n    private socket: SocketIOClient.Socket | null\n  ) {}\n\n  /**\n   * Register an event listener\n   */\n  on(event: string, callback: (...args: unknown[]) => void): void {\n    if (!this.eventListeners.has(event)) {\n      this.eventListeners.set(event, new Set());\n    }\n\n    this.eventListeners.get(event)?.add(callback);\n  }\n\n  /**\n   * Remove an event listener\n   */\n  off(event: string, callback: (...args: unknown[]) => void): void {\n    if (!this.eventListeners.has(event)) return;\n\n    this.eventListeners.get(event)?.delete(callback);\n  }\n\n  /**\n   * Notify all listeners for a specific event\n   */\n  notifyListeners(event: string, data: unknown): void {\n    // Save data for offline access if it's a data event\n    if (\n      event === ClientWebSocketEvents.MARKET_DATA ||\n      event === ClientWebSocketEvents.TRADE_EXECUTED ||\n      event === ClientWebSocketEvents.TICKER_UPDATE\n    ) {\n      this.saveOfflineData(event, data);\n    }\n\n    this.eventListeners.get(event)?.forEach((callback) => {\n      try {\n        callback(data);\n      } catch (error) {\n        console.error(\n          `Error in ${event} event listener:`,\n          error instanceof Error ? error.message : String(error)\n        );\n      }\n    });\n  }\n\n  /**\n   * Save data for offline access\n   */\n  private saveOfflineData(key: string, data: unknown): void {\n    try {\n      this.offlineData.set(key, data);\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(\n          \"websocket_offline_data\",\n          JSON.stringify(Array.from(this.offlineData.entries()))\n        );\n      }\n    } catch (error) {\n      console.error(\"Error saving offline data:\", error);\n    }\n  }\n\n  /**\n   * Load offline data\n   */\n  loadOfflineData(): void {\n    try {\n      if (typeof window !== \"undefined\") {\n        const savedData = localStorage.getItem(\"websocket_offline_data\");\n        if (savedData) {\n          this.offlineData = new Map(\n            JSON.parse(savedData) as [string, unknown][]\n          );\n        }\n      }\n    } catch (error) {\n      console.error(\"Error loading offline data:\", error);\n    }\n  }\n\n  /**\n   * Get offline data for a specific key\n   */\n  getOfflineData(key: string): unknown {\n    return this.offlineData.get(key);\n  }\n\n  /**\n   * Subscribe to market data for a specific pair\n   */\n  subscribeToMarket(pair: string): void {\n    // Add to subscriptions set\n    this.subscriptions.add(pair);\n\n    if (this.poloniexWs && this.poloniexWs.readyState === WebSocket.OPEN) {\n      // For Poloniex direct connection\n      const subscribeMessage: SubscriptionMessage = {\n        id: Date.now(),\n        type: \"subscribe\",\n        topic: PoloniexTopics.TICKER_V2,\n        symbols: [pair.replace(\"-\", \"_\")],\n        privateChannel: false,\n        response: true,\n      };\n      this.poloniexWs.send(JSON.stringify(subscribeMessage));\n    } else if (this.socket) {\n      // For backend Socket.IO connection\n      this.socket.emit(\"subscribeMarket\", { pair });\n    }\n  }\n\n  /**\n   * Unsubscribe from market data for a specific pair\n   */\n  unsubscribeFromMarket(pair: string): void {\n    // Remove from subscriptions set\n    this.subscriptions.delete(pair);\n\n    if (this.poloniexWs && this.poloniexWs.readyState === WebSocket.OPEN) {\n      // For Poloniex direct connection\n      const unsubscribeMessage: SubscriptionMessage = {\n        id: Date.now(),\n        type: \"unsubscribe\",\n        topic: \"/contractMarket/tickerV2\",\n        symbols: [pair.replace(\"-\", \"_\")],\n        response: true,\n      };\n      this.poloniexWs.send(JSON.stringify(unsubscribeMessage));\n    } else if (this.socket) {\n      // For backend Socket.IO connection\n      this.socket.emit(\"unsubscribeMarket\", { pair });\n    }\n  }\n\n  /**\n   * Send a message to the server\n   */\n  send(event: string, data: unknown): void {\n    if (this.poloniexWs && this.poloniexWs.readyState === WebSocket.OPEN) {\n      // For Poloniex direct connection, send as JSON\n      const payload = (data && typeof data === \"object\") ? (data as Record<string, unknown>) : {};\n      const message = { event, ...payload };\n      this.poloniexWs.send(JSON.stringify(message));\n    } else if (this.socket) {\n      // For backend Socket.IO connection\n      this.socket.emit(event, data);\n    } else {\n      // Queue message to be sent when connection is established\n      this.pendingMessages.push({ event, data });\n    }\n  }\n\n  /**\n   * Resubscribe to previous subscriptions after reconnect\n   */\n  resubscribe(): void {\n    // console.log(`Resubscribing to ${this.subscriptions.size} channels`);\n\n    this.subscriptions.forEach((subscription) => {\n      if (this.poloniexWs && this.poloniexWs.readyState === WebSocket.OPEN) {\n        // For Poloniex direct connection\n        const subscribeMessage: SubscriptionMessage = {\n          id: Date.now(),\n          type: \"subscribe\",\n          topic: \"/contractMarket/tickerV2\",\n          symbols: [subscription.replace(\"-\", \"_\")],\n          privateChannel: false,\n          response: true,\n        };\n        this.poloniexWs.send(JSON.stringify(subscribeMessage));\n      } else if (this.socket) {\n        // For backend Socket.IO connection\n        this.socket.emit(\"subscribeMarket\", { pair: subscription });\n      }\n    });\n  }\n\n  /**\n   * Send any pending messages after reconnect\n   */\n  sendPendingMessages(): void {\n    // console.log(`Sending ${this.pendingMessages.length} pending messages`);\n\n    while (this.pendingMessages.length > 0) {\n      const message = this.pendingMessages.shift();\n      if (message) {\n        this.send(message.event, message.data);\n      }\n    }\n  }\n\n  /**\n   * Subscribe to Poloniex V3 market data\n   */\n  subscribeToPoloniexV3(topic: string, symbols?: string[]): void {\n    if (this.poloniexWs && this.poloniexWs.readyState === WebSocket.OPEN) {\n      const subscribeMessage: SubscriptionMessage = {\n        id: Date.now(),\n        type: \"subscribe\",\n        topic,\n        symbols: symbols || [],\n        privateChannel: false,\n        response: true,\n      };\n      this.poloniexWs.send(JSON.stringify(subscribeMessage));\n    }\n  }\n\n  /**\n   * Unsubscribe from Poloniex V3 market data\n   */\n  unsubscribeFromPoloniexV3(topic: string): void {\n    if (this.poloniexWs && this.poloniexWs.readyState === WebSocket.OPEN) {\n      const unsubscribeMessage: SubscriptionMessage = {\n        id: Date.now(),\n        type: \"unsubscribe\",\n        topic,\n        response: true,\n      };\n      this.poloniexWs.send(JSON.stringify(unsubscribeMessage));\n    }\n  }\n\n  /**\n   * Handle Poloniex V3 WebSocket messages\n   */\n  handlePoloniexV3Message(data: WebSocketMessage): void {\n    try {\n      // Handle different message types from Poloniex V3\n      switch (data.type) {\n        case \"message\":\n          this.handlePoloniexV3DataMessage(data);\n          break;\n        case \"welcome\":\n          // console.log(\"Poloniex V3 welcome message:\", data);\n          break;\n        case \"pong\":\n          // console.log(\"Poloniex V3 pong received\");\n          break;\n        case \"error\":\n          console.error(\"Poloniex V3 error:\", data);\n          break;\n        default:\n          // console.log(\"Unknown Poloniex V3 message type:\", data.type);\n      }\n    } catch (error) {\n      console.error(\"Error handling Poloniex V3 message:\", error);\n    }\n  }\n\n  /**\n   * Handle Poloniex V3 data messages\n   */\n  private handlePoloniexV3DataMessage(data: WebSocketMessage): void {\n    try {\n      const topic = data.topic;\n\n      if (topic === \"/contractMarket/tickerV2\") {\n        // Handle ticker data\n        const tickerData = data.data as any;\n        if (tickerData) {\n          const marketData: MarketData = {\n            pair:\n              (tickerData.symbol as string)?.replace(\"_\", \"-\") || \"BTC-USDT\",\n            timestamp: Date.now(),\n            open: parseFloat(tickerData.open as string) || 0,\n            high: parseFloat(tickerData.high as string) || 0,\n            low: parseFloat(tickerData.low as string) || 0,\n            close: parseFloat(tickerData.price as string) || 0,\n            volume: parseFloat(tickerData.volume as string) || 0,\n          };\n\n          this.notifyListeners(\"marketData\", marketData);\n        }\n      } else if (topic === \"/contractMarket/execution\") {\n        // Handle trade execution data\n        const tradeData = data.data as any;\n        if (tradeData) {\n          const trade: Trade = {\n            id: tradeData.tradeId as string,\n            pair: (tradeData.symbol as string)?.replace(\"_\", \"_\") || \"BTC-USDT\",\n            price: parseFloat(tradeData.price as string) || 0,\n            amount: parseFloat(tradeData.size as string) || 0,\n            side: ((tradeData.side as string)?.toLowerCase() === 'sell' ? 'sell' : 'buy') as 'buy' | 'sell',\n            timestamp: (tradeData.ts as number) || Date.now(),\n          };\n\n          this.notifyListeners(\"tradeExecuted\", trade);\n        }\n      } else if (topic === \"/contractMarket/level2\") {\n        // Handle order book updates\n        this.notifyListeners(\"orderBookUpdate\", data.data);\n      } else if (topic === \"/contractMarket/level3\") {\n        // Handle full order book\n        this.notifyListeners(\"fullOrderBook\", data.data);\n      }\n    } catch (error) {\n      console.error(\"Error handling Poloniex V3 data message:\", error);\n    }\n  }\n\n  /**\n   * Setup Socket.IO event handlers\n   */\n  setupSocketIOHandlers(): void {\n    if (!this.socket) return;\n\n    this.socket.on(\"connect\", () => {\n      // console.log(\"Socket.IO connected\");\n      this.notifyListeners(\"connectionStateChanged\", \"connected\");\n    });\n\n    this.socket.on(\"disconnect\", (_reason: unknown) => {\n      // console.log(\"Socket.IO disconnected:\", reason);\n      this.notifyListeners(\"connectionStateChanged\", \"disconnected\");\n    });\n\n    this.socket.on(\"marketData\", (data: MarketData) => {\n      this.notifyListeners(\"marketData\", data);\n    });\n\n    this.socket.on(\"tradeExecuted\", (data: Trade) => {\n      this.notifyListeners(\"tradeExecuted\", data);\n    });\n\n    this.socket.on(\"error\", (error: Error) => {\n      console.error(\"Socket.IO error:\", error);\n      this.notifyListeners(\"error\", error);\n    });\n  }\n\n  /**\n   * Get active subscriptions\n   */\n  getSubscriptions(): string[] {\n    return Array.from(this.subscriptions);\n  }\n\n  /**\n   * Clear all subscriptions\n   */\n  clearSubscriptions(): void {\n    this.subscriptions.clear();\n  }\n\n  /**\n   * Get event listeners count\n   */\n  getEventListenersCount(event: string): number {\n    return this.eventListeners.get(event)?.size || 0;\n  }\n\n  /**\n   * Get all event listeners\n   */\n  getAllEventListeners(): Map<string, Set<(...args: unknown[]) => void>> {\n    return new Map(this.eventListeners);\n  }\n}\n","import { ConnectionState, ConnectionStats } from \"@/types/websocketTypes\";\n\nexport class HealthService {\n  private pingTimer: NodeJS.Timeout | null = null;\n  private poloniexPingTimer: NodeJS.Timeout | null = null;\n  private connectionStats: ConnectionStats = {\n    connectTime: null,\n    disconnectTime: null,\n    lastPingTime: null,\n    lastPongTime: null,\n    pingLatency: null,\n    reconnectAttempts: 0,\n    successfulReconnects: 0,\n    failedReconnects: 0,\n    totalDisconnects: 0,\n    connectionUptime: 0,\n    connectionDowntime: 0,\n  };\n\n  private PING_INTERVAL = 30000; // 30 seconds\n  private PING_TIMEOUT = 10000; // 10 seconds\n\n  constructor(\n    private poloniexWs: WebSocket | null,\n    private socket: SocketIOClient.Socket | null\n  ) {}\n\n  /**\n   * Start ping timer to detect connection issues\n   */\n  startPingTimer(): void {\n    this.stopPingTimer();\n\n    this.pingTimer = setInterval(() => {\n      this.connectionStats.lastPingTime = Date.now();\n\n      if (this.socket) {\n        // For Socket.IO connection\n        this.socket.emit(\"ping\", { timestamp: Date.now() });\n\n        // Set timeout for pong response\n        setTimeout(() => {\n          const lastPongTime = this.connectionStats.lastPongTime || 0;\n          const lastPingTime = this.connectionStats.lastPingTime || 0;\n          const pongElapsed = Date.now() - Math.max(lastPongTime, lastPingTime);\n\n          // If we haven't received a pong or it's too old\n          if (pongElapsed <= 0 || pongElapsed > this.PING_TIMEOUT) {\n            // console.warn(`WebSocket ping timeout after ${this.PING_TIMEOUT}ms`);\n\n            // Force disconnect and reconnect\n            if (this.socket) {\n              this.socket.disconnect();\n            }\n          }\n        }, this.PING_TIMEOUT);\n      }\n    }, this.PING_INTERVAL);\n  }\n\n  /**\n   * Start ping timer for Poloniex V3 connection\n   */\n  startPoloniexV3PingTimer(): void {\n    this.stopPoloniexV3PingTimer();\n\n    this.poloniexPingTimer = setInterval(() => {\n      if (this.poloniexWs && this.poloniexWs.readyState === WebSocket.OPEN) {\n        const pingMessage = {\n          id: Date.now(),\n          type: \"ping\",\n        };\n        this.poloniexWs.send(JSON.stringify(pingMessage));\n        this.connectionStats.lastPingTime = Date.now();\n      }\n    }, this.PING_INTERVAL);\n  }\n\n  /**\n   * Stop ping timer\n   */\n  stopPingTimer(): void {\n    if (this.pingTimer) {\n      clearInterval(this.pingTimer);\n      this.pingTimer = null;\n    }\n  }\n\n  /**\n   * Stop ping timer for Poloniex V3 connection\n   */\n  stopPoloniexV3PingTimer(): void {\n    if (this.poloniexPingTimer) {\n      clearInterval(this.poloniexPingTimer);\n      this.poloniexPingTimer = null;\n    }\n  }\n\n  /**\n   * Update connection statistics\n   */\n  updateConnectionStats(stats: Partial<ConnectionStats>): void {\n    this.connectionStats = { ...this.connectionStats, ...stats };\n  }\n\n  /**\n   * Get connection statistics\n   */\n  getConnectionStats(): ConnectionStats {\n    // Update uptime/downtime calculations\n    const now = Date.now();\n    if (this.connectionStats.connectTime) {\n      this.connectionStats.connectionUptime =\n        now - this.connectionStats.connectTime;\n    } else if (this.connectionStats.disconnectTime) {\n      this.connectionStats.connectionDowntime =\n        now - this.connectionStats.disconnectTime;\n    }\n\n    return { ...this.connectionStats };\n  }\n\n  /**\n   * Get connection health information\n   */\n  getConnectionHealth(): {\n    state: ConnectionState;\n    isHealthy: boolean;\n    uptime: number;\n    lastPing: number;\n    latency: number | null;\n    reconnectAttempts: number;\n  } {\n    const now = Date.now();\n    const uptime = this.connectionStats.connectTime\n      ? now - this.connectionStats.connectTime\n      : 0;\n\n    return {\n      state: ConnectionState.CONNECTED,\n      isHealthy: true,\n      uptime,\n      lastPing: this.connectionStats.lastPingTime || 0,\n      latency: this.connectionStats.pingLatency,\n      reconnectAttempts: this.connectionStats.reconnectAttempts,\n    };\n  }\n\n  /**\n   * Handle pong response\n   */\n  handlePong(_timestamp: number): void {\n    this.connectionStats.lastPongTime = Date.now();\n\n    if (this.connectionStats.lastPingTime) {\n      this.connectionStats.pingLatency =\n        this.connectionStats.lastPongTime - this.connectionStats.lastPingTime;\n    }\n  }\n\n  /**\n   * Check if connection is healthy\n   */\n  isConnectionHealthy(): boolean {\n    const now = Date.now();\n    const lastPing = this.connectionStats.lastPingTime || 0;\n    const lastPong = this.connectionStats.lastPongTime || 0;\n\n    // If we haven't received a pong in the last 2 ping intervals, consider it unhealthy\n    if (now - Math.max(lastPing, lastPong) > this.PING_INTERVAL * 2) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Get connection status summary\n   */\n  getConnectionStatus(): {\n    connected: boolean;\n    uptime: string;\n    lastPing: string;\n    latency: string;\n    health: string;\n  } {\n    const stats = this.getConnectionStats();\n    // Current time for status calculations\n    // const now = Date.now();\n\n    return {\n      connected: stats.connectTime !== null,\n      uptime: this.formatDuration(stats.connectionUptime),\n      lastPing: stats.lastPingTime\n        ? new Date(stats.lastPingTime).toLocaleTimeString()\n        : \"Never\",\n      latency: stats.pingLatency ? `${stats.pingLatency}ms` : \"Unknown\",\n      health: this.isConnectionHealthy() ? \"Good\" : \"Poor\",\n    };\n  }\n\n  /**\n   * Format duration in human-readable format\n   */\n  private formatDuration(ms: number): string {\n    if (ms < 1000) return `${ms}ms`;\n    if (ms < 60000) return `${(ms / 1000).toFixed(1)}s`;\n    if (ms < 3600000) return `${(ms / 60000).toFixed(1)}m`;\n    return `${(ms / 3600000).toFixed(1)}h`;\n  }\n\n  /**\n   * Reset connection statistics\n   */\n  resetConnectionStats(): void {\n    this.connectionStats = {\n      connectTime: null,\n      disconnectTime: null,\n      lastPingTime: null,\n      lastPongTime: null,\n      pingLatency: null,\n      reconnectAttempts: 0,\n      successfulReconnects: 0,\n      failedReconnects: 0,\n      totalDisconnects: 0,\n      connectionUptime: 0,\n      connectionDowntime: 0,\n    };\n  }\n\n  /**\n   * Monitor connection health\n   */\n  monitorConnectionHealth(): void {\n    setInterval(() => {\n      this.getConnectionHealth();\n\n      if (!this.isConnectionHealthy()) {\n        // console.warn(\"Connection health is poor:\", health);\n      }\n    }, 60000); // Check every minute\n  }\n}\n","import {\n  ConnectionState,\n  ReconnectionStrategy,\n  ConnectionStats,\n} from \"@/types/websocketTypes\";\n\nexport class ReconnectionService {\n  private reconnectAttempts: number = 0;\n  private maxReconnectAttempts: number = 10;\n  private initialReconnectDelay: number = 1000;\n  private maxReconnectDelay: number = 30000;\n  // Current delay for reconnection attempts (for future use)\n  // private _currentReconnectDelay: number = this.initialReconnectDelay;\n  private reconnectionJitter: number = 0.5;\n  private reconnectionStrategy: ReconnectionStrategy =\n    ReconnectionStrategy.EXPONENTIAL_BACKOFF;\n  private reconnectTimer: NodeJS.Timeout | null = null;\n  private connectionStats: ConnectionStats = {\n    connectTime: null,\n    disconnectTime: null,\n    lastPingTime: null,\n    lastPongTime: null,\n    pingLatency: null,\n    reconnectAttempts: 0,\n    successfulReconnects: 0,\n    failedReconnects: 0,\n    totalDisconnects: 0,\n    connectionUptime: 0,\n    connectionDowntime: 0,\n  };\n\n  constructor(\n    private onReconnect: () => Promise<void>,\n    private onConnectionFailed: () => void\n  ) {}\n\n  /**\n   * Calculate next reconnect delay based on strategy\n   */\n  calculateReconnectDelay(): number {\n    let delay: number;\n\n    switch (this.reconnectionStrategy) {\n      case ReconnectionStrategy.EXPONENTIAL_BACKOFF:\n        // Exponential backoff with jitter: delay = min(initialDelay * 2^attempts, maxDelay) * (1 ± jitter)\n        delay = Math.min(\n          this.initialReconnectDelay * Math.pow(2, this.reconnectAttempts),\n          this.maxReconnectDelay\n        );\n        break;\n\n      case ReconnectionStrategy.LINEAR_BACKOFF:\n        // Linear backoff with jitter: delay = min(initialDelay * attempts, maxDelay) * (1 ± jitter)\n        delay = Math.min(\n          this.initialReconnectDelay * (this.reconnectAttempts + 1),\n          this.maxReconnectDelay\n        );\n        break;\n\n      case ReconnectionStrategy.IMMEDIATE:\n        // Immediate reconnection with minimal delay\n        delay = 100;\n        break;\n\n      case ReconnectionStrategy.NONE:\n      default:\n        // No automatic reconnection\n        return -1;\n    }\n\n    // Apply jitter to avoid thundering herd problem\n    // Random value between (1 - jitter) and (1 + jitter)\n    const jitterFactor = 1 + (Math.random() * 2 - 1) * this.reconnectionJitter;\n\n    return Math.floor(delay * jitterFactor);\n  }\n\n  /**\n   * Attempt to reconnect to the WebSocket server\n   */\n  reconnect(): void {\n    // Stop any existing reconnect timer\n    this.stopReconnectTimer();\n\n    // Check if we've reached the maximum number of reconnect attempts\n    if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n      console.log(\n        `Max reconnection attempts (${this.maxReconnectAttempts}) reached, staying in mock mode`\n      );\n      this.connectionStats.failedReconnects++;\n      this.onConnectionFailed();\n      return;\n    }\n\n    // Calculate delay for next reconnect attempt\n    const delay = this.calculateReconnectDelay();\n\n    // If delay is negative, don't reconnect\n    if (delay < 0) {\n      // console.log(\"Reconnection strategy is NONE, not attempting to reconnect\");\n      this.onConnectionFailed();\n      return;\n    }\n\n    // Update state and stats\n    this.reconnectAttempts++;\n    this.connectionStats.reconnectAttempts++;\n\n    console.log(\n      `Attempting reconnect ${this.reconnectAttempts}/${this.maxReconnectAttempts} in ${delay}ms`\n    );\n\n    // Schedule reconnect attempt\n    this.reconnectTimer = setTimeout(async () => {\n      try {\n        await this.onReconnect();\n        this.connectionStats.successfulReconnects++;\n        this.resetReconnectAttempts();\n      } catch (error) {\n        // console.log(\"Reconnect attempt failed:\", error);\n        this.connectionStats.failedReconnects++;\n        // Continue with reconnection attempts\n        this.reconnect();\n      }\n    }, delay);\n  }\n\n  /**\n   * Stop reconnect timer\n   */\n  stopReconnectTimer(): void {\n    if (this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n  }\n\n  /**\n   * Reset reconnect attempts counter\n   */\n  resetReconnectAttempts(): void {\n    this.reconnectAttempts = 0;\n    // this._currentReconnectDelay = this.initialReconnectDelay;\n  }\n\n  /**\n   * Update connection statistics\n   */\n  updateConnectionStats(stats: Partial<ConnectionStats>): void {\n    this.connectionStats = { ...this.connectionStats, ...stats };\n  }\n\n  /**\n   * Get connection statistics\n   */\n  getConnectionStats(): ConnectionStats {\n    // Update uptime/downtime calculations\n    const now = Date.now();\n    if (this.connectionStats.connectTime) {\n      this.connectionStats.connectionUptime =\n        now - this.connectionStats.connectTime;\n    } else if (this.connectionStats.disconnectTime) {\n      this.connectionStats.connectionDowntime =\n        now - this.connectionStats.disconnectTime;\n    }\n\n    return { ...this.connectionStats };\n  }\n\n  /**\n   * Get current reconnect attempts\n   */\n  getReconnectAttempts(): number {\n    return this.reconnectAttempts;\n  }\n\n  /**\n   * Set reconnection strategy\n   */\n  setReconnectionStrategy(strategy: ReconnectionStrategy): void {\n    this.reconnectionStrategy = strategy;\n  }\n\n  /**\n   * Set reconnection parameters\n   */\n  setReconnectionParameters(params: {\n    maxReconnectAttempts?: number;\n    initialReconnectDelay?: number;\n    maxReconnectDelay?: number;\n    reconnectionJitter?: number;\n  }): void {\n    if (params.maxReconnectAttempts !== undefined) {\n      this.maxReconnectAttempts = params.maxReconnectAttempts;\n    }\n    if (params.initialReconnectDelay !== undefined) {\n      this.initialReconnectDelay = params.initialReconnectDelay;\n    }\n    if (params.maxReconnectDelay !== undefined) {\n      this.maxReconnectDelay = params.maxReconnectDelay;\n    }\n    if (params.reconnectionJitter !== undefined) {\n      this.reconnectionJitter = params.reconnectionJitter;\n    }\n  }\n\n  /**\n   * Handle connection failure\n   */\n  handleConnectionFailure(): void {\n    this.connectionStats.totalDisconnects++;\n    this.connectionStats.disconnectTime = Date.now();\n    this.reconnect();\n  }\n\n  /**\n   * Handle successful connection\n   */\n  handleSuccessfulConnection(): void {\n    this.connectionStats.connectTime = Date.now();\n    this.resetReconnectAttempts();\n  }\n\n  /**\n   * Get connection health information\n   */\n  getConnectionHealth(): {\n    state: ConnectionState;\n    isHealthy: boolean;\n    uptime: number;\n    lastPing: number;\n    latency: number | null;\n    reconnectAttempts: number;\n  } {\n    const now = Date.now();\n    const uptime = this.connectionStats.connectTime\n      ? now - this.connectionStats.connectTime\n      : 0;\n\n    return {\n      state: this.reconnectAttempts > 0 ? ConnectionState.RECONNECTING : ConnectionState.CONNECTED,\n      isHealthy: this.reconnectAttempts === 0,\n      uptime,\n      lastPing: this.connectionStats.lastPingTime || 0,\n      latency: this.connectionStats.pingLatency,\n      reconnectAttempts: this.reconnectAttempts,\n    };\n  }\n\n  /**\n   * Force stop all reconnection attempts\n   */\n  forceStop(): void {\n    this.stopReconnectTimer();\n    this.reconnectAttempts = 0;\n    // this._currentReconnectDelay = this.initialReconnectDelay;\n  }\n}\n","import {\n  ConnectionState,\n  ConnectionStats,\n  WebSocketServiceInterface,\n} from \"@/types/websocketTypes\";\nimport {\n  getPoloniexApiKey,\n  getPoloniexApiSecret,\n  shouldUseMockMode,\n} from \"@/utils/environment\";\nimport React from \"react\";\nimport { ConnectionManager } from \"./websocket/connectionManager\";\nimport { EventHandlerService } from \"./websocket/eventHandlerService\";\n// import { ClientWebSocketEvents, PoloniexTopics } from \"@/types/websocketTypes\";\nimport { HealthService } from \"./websocket/healthService\";\nimport { ReconnectionService } from \"./websocket/reconnectionService\";\n\n// Removed unused POLONIEX_V3_CONFIG constant\n\nclass WebSocketService implements WebSocketServiceInterface {\n  private static instance: WebSocketService;\n  private connectionManager: ConnectionManager;\n  private reconnectionService: ReconnectionService;\n  private eventHandlerService: EventHandlerService;\n  private healthService: HealthService;\n  private connectionState: ConnectionState = ConnectionState.DISCONNECTED;\n  private useMockData: boolean = true;\n\n  private constructor() {\n    this.connectionManager = new ConnectionManager();\n    this.reconnectionService = new ReconnectionService(\n      this.reconnect.bind(this),\n      this.handleConnectionFailed.bind(this)\n    );\n    this.eventHandlerService = new EventHandlerService(null, null);\n    this.healthService = new HealthService(null, null);\n\n    this.initializeService();\n  }\n\n  public static getInstance(): WebSocketService {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  private initializeService(): void {\n    // Determine connection strategy\nconst hasCredentials = getPoloniexApiKey() !== undefined && getPoloniexApiSecret() !== undefined;\n    this.useMockData = shouldUseMockMode(hasCredentials);\n\n    // console.log(\"WebSocket Service V3 initialized:\", {\n    //   usePoloniexDirect: !this.useMockData && hasCredentials,\n    //   useMockData: this.useMockData,\n    //   hasCredentials,\n    // });\n\n    // Load offline data\n    this.eventHandlerService.loadOfflineData();\n\n    // Listen for online/offline events\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"online\", this.handleOnline.bind(this));\n      window.addEventListener(\"offline\", this.handleOffline.bind(this));\n      window.addEventListener(\"beforeunload\", this.cleanup.bind(this));\n    }\n  }\n\n  private handleOnline(): void {\n    // console.log(\"Device is online, attempting to reconnect WebSocket\");\n    if (\n      this.connectionState === ConnectionState.DISCONNECTED ||\n      this.connectionState === ConnectionState.FAILED\n    ) {\n      this.connect();\n    }\n  }\n\n  private handleOffline(): void {\n    // console.log(\"Device is offline, WebSocket connection will be affected\");\n    if (this.connectionState === ConnectionState.CONNECTED) {\n      this.connectionState = ConnectionState.DISCONNECTED;\n    }\n  }\n\n  private cleanup(): void {\n    this.healthService.stopPingTimer();\n    this.healthService.stopPoloniexV3PingTimer();\n    this.reconnectionService.forceStop();\n    this.disconnect();\n  }\n\n  private async reconnect(): Promise<void> {\n    try {\n      await this.connect();\n    } catch (error) {\n      // console.error(\"Reconnection failed:\", error);\n      throw error;\n    }\n  }\n\n  private handleConnectionFailed(): void {\n    // console.log(\"Connection failed, switching to mock mode\");\n    this.useMockData = true;\n    this.connectionState = ConnectionState.FAILED;\n  }\n\n  async connect(token?: string): Promise<void> {\n    if (this.connectionState === ConnectionState.CONNECTED) {\n      return;\n    }\n\n    if (this.connectionState === ConnectionState.CONNECTING) {\n      return;\n    }\n\n    this.connectionState = ConnectionState.CONNECTING;\n    this.reconnectionService.updateConnectionStats({ connectTime: Date.now() });\n\n    try {\n      if (this.connectionManager.isUsingPoloniexDirect()) {\n        await this.connectToPoloniexV3();\n      } else {\n        await this.connectToBackend(token);\n      }\n    } catch (error) {\n      // console.error(\"Connection failed, using mock mode:\", error);\n      this.useMockData = true;\n      this.connectionState = ConnectionState.FAILED;\n    }\n  }\n\n  private async connectToPoloniexV3(): Promise<void> {\n    try {\n      const ws = await this.connectionManager.connect();\n\n      this.eventHandlerService = new EventHandlerService(null, ws);\n      this.healthService = new HealthService(null, ws);\n\n      this.eventHandlerService.setupSocketIOHandlers();\n      this.healthService.startPoloniexV3PingTimer();\n\n      this.connectionState = ConnectionState.CONNECTED;\n      this.useMockData = false;\n\n      // console.log(\"Connected to Poloniex V3 WebSocket\");\n    } catch (error) {\n      // console.error(\"Failed to connect to Poloniex V3:\", error);\n      throw error;\n    }\n  }\n\n  private async connectToBackend(token?: string): Promise<void> {\n    try {\n      const socket = await this.connectionManager.connectToBackend(token);\n\n      this.eventHandlerService = new EventHandlerService(null, socket);\n      this.healthService = new HealthService(null, socket);\n\n      this.eventHandlerService.setupSocketIOHandlers();\n      this.healthService.startPingTimer();\n\n      this.connectionState = ConnectionState.CONNECTED;\n      this.useMockData = false;\n\n      // console.log(\"Connected to backend WebSocket\");\n    } catch (error) {\n      // console.error(\"Failed to connect to backend:\", error);\n      throw error;\n    }\n  }\n\n  disconnect(): void {\n    this.connectionManager.disconnect();\n    this.healthService.stopPingTimer();\n    this.healthService.stopPoloniexV3PingTimer();\n    this.reconnectionService.forceStop();\n    this.connectionState = ConnectionState.DISCONNECTED;\n  }\n\n  isConnected(): boolean {\n    return this.connectionManager.isConnected();\n  }\n\n  isMockMode(): boolean {\n    return this.useMockData;\n  }\n\n  getConnectionState(): ConnectionState {\n    return this.connectionState;\n  }\n\n  getConnectionStats(): ConnectionStats {\n    return this.reconnectionService.getConnectionStats();\n  }\n\n  subscribeToMarket(pair: string): void {\n    this.eventHandlerService.subscribeToMarket(pair);\n  }\n\n  unsubscribeFromMarket(pair: string): void {\n    this.eventHandlerService.unsubscribeFromMarket(pair);\n  }\n\n  send(event: string, data: unknown): void {\n    this.eventHandlerService.send(event, data);\n  }\n\n  on(event: string, callback: (...args: unknown[]) => void): void {\n    this.eventHandlerService.on(event, callback);\n  }\n\n  off(event: string, callback: (...args: unknown[]) => void): void {\n    this.eventHandlerService.off(event, callback);\n  }\n\n  subscribeToPoloniexV3(topic: string, symbols?: string[]): void {\n    this.eventHandlerService.subscribeToPoloniexV3(topic, symbols);\n  }\n\n  unsubscribeFromPoloniexV3(topic: string): void {\n    this.eventHandlerService.unsubscribeFromPoloniexV3(topic);\n  }\n\n  getConnectionHealth() {\n    return this.healthService.getConnectionHealth();\n  }\n\n  getConnectionStatus() {\n    return this.healthService.getConnectionStatus();\n  }\n\n  // React hook for monitoring connection state\n  useConnectionState() {\n    const [state, setState] = React.useState(this.connectionState);\n    const [isMock, setIsMock] = React.useState(this.useMockData);\n\n    React.useEffect(() => {\n      const handleStateChange = (...args: unknown[]) => {\n        const newState = args[0] as ConnectionState;\n        setState(newState);\n        setIsMock(this.useMockData);\n      };\n\n      this.on(\"connectionStateChanged\", handleStateChange);\n\n      return () => {\n        this.off(\"connectionStateChanged\", handleStateChange);\n      };\n    }, []);\n\n    return {\n      connectionState: state,\n      isMockMode: isMock,\n      isConnected: this.isConnected(),\n      connect: this.connect.bind(this),\n      disconnect: this.disconnect.bind(this),\n    };\n  }\n}\n\n// Export singleton instance\nexport const webSocketService = WebSocketService.getInstance();\n\n// Hook for using WebSocket in React components\nexport const useWebSocket = () => {\n  const service = WebSocketService.getInstance();\n  return {\n    connectionState: service.useConnectionState(),\n    isConnected: service.isConnected(),\n    isMockMode: service.isMockMode(),\n    connect: service.connect.bind(service),\n    disconnect: service.disconnect.bind(service),\n    subscribe: service.subscribeToMarket.bind(service),\n    unsubscribe: service.unsubscribeFromMarket.bind(service),\n    send: service.send.bind(service),\n    on: service.on.bind(service),\n    off: service.off.bind(service),\n    getStats: service.getConnectionStats.bind(service),\n    getHealth: service.getConnectionHealth.bind(service),\n    subscribeToV3: service.subscribeToPoloniexV3.bind(service),\n    unsubscribeFromV3: service.unsubscribeFromPoloniexV3.bind(service),\n  };\n};\n\n// Re-export types for convenience\nexport { ConnectionState } from \"@/types/websocketTypes\";\n","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { poloniexApi } from '@/services/poloniexAPI';\nimport { MarketData, Trade } from '@/types';\nimport { webSocketService } from '@/services/websocketService';\nimport { mockMarketData, mockTrades } from '@/data/mockData';\nimport { useSettings } from '@/hooks/useSettings';\nimport { shouldUseMockMode, IS_WEBCONTAINER } from '@/utils/environment';\n\ninterface PoloniexDataHook {\n  marketData: MarketData[];\n  trades: Trade[];\n  accountBalance: unknown;\n  isLoading: boolean;\n  error: Error | null;\n  isMockMode: boolean;\n  fetchMarketData: (pair: string) => Promise<void>;\n  fetchTrades: (pair: string) => Promise<void>;\n  fetchAccountBalance: () => Promise<void>;\n  refreshApiConnection: () => void;\n}\n\nexport const usePoloniexData = (initialPair: string = 'BTC-USDT'): PoloniexDataHook => {\n  const { apiKey, apiSecret, isLiveTrading } = useSettings();\n  const [marketData, setMarketData] = useState<MarketData[]>(mockMarketData);\n  const [trades, setTrades] = useState<Trade[]>(mockTrades);\n  const [accountBalance, setAccountBalance] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  // Determine mock mode based on environment and credentials\n  const hasCredentials = Boolean(apiKey && apiSecret);\n  const [isMockMode, setIsMockMode] = useState<boolean>(shouldUseMockMode(hasCredentials));\n\n  // Create refs to hold latest function references to avoid dependency issues\n  const fetchFunctionsRef = useRef<{\n    fetchMarketData: (pair: string) => Promise<void>;\n    fetchTrades: (pair: string) => Promise<void>;\n    fetchAccountBalance: () => Promise<void>;\n  } | null>(null);\n\n  // Helper function to map Poloniex data to MarketData format\n\n  const mapPoloniexDataToMarketData = useCallback((data: unknown[]): MarketData[] => {\n    try {\n      return data\n        .filter((item): item is Array<string | number> => Array.isArray(item) && item.length >= 6)\n        .map((item) => ({\n          pair: initialPair,\n          timestamp: new Date(item[0] as string | number).getTime(),\n          open: typeof item[1] === 'number' ? item[1] : parseFloat(String(item[1])),\n          high: typeof item[2] === 'number' ? item[2] : parseFloat(String(item[2])),\n          low: typeof item[3] === 'number' ? item[3] : parseFloat(String(item[3])),\n          close: typeof item[4] === 'number' ? item[4] : parseFloat(String(item[4])),\n          volume: typeof item[5] === 'number' ? item[5] : parseFloat(String(item[5]))\n        }));\n    } catch {\n      return [];\n    }\n  }, [initialPair]);\n\n  const mapPoloniexTradeToTrade = useCallback((tradeInput: unknown): Trade => {\n    try {\n      const t = (tradeInput || {}) as Record<string, unknown>;\n      const toNum = (v: unknown): number => {\n        if (typeof v === 'number') return v;\n        if (typeof v === 'string') {\n          const n = parseFloat(v);\n          return Number.isFinite(n) ? n : 0;\n        }\n        return 0;\n      };\n      const createdAt = t.createdAt;\n      const ts =\n        typeof createdAt === 'string' || typeof createdAt === 'number'\n          ? new Date(createdAt).getTime()\n          : Date.now();\n      const qty = toNum(t.quantity);\n      const price = toNum(t.price);\n\n      return {\n        id:\n          typeof t.id === 'string'\n            ? t.id\n            : `generated-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n        pair: initialPair,\n        timestamp: ts,\n        type: String(t.takerSide).toLowerCase() === 'buy' ? 'BUY' : 'SELL',\n        price,\n        amount: qty,\n        total: price * qty,\n        strategyId: '', // Not available from API\n        status: 'COMPLETED'\n      };\n    } catch {\n      return {\n        id: `error-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n        pair: initialPair,\n        timestamp: Date.now(),\n        type: 'BUY',\n        price: 0,\n        amount: 0,\n        total: 0,\n        strategyId: '',\n        status: 'FAILED'\n      };\n    }\n  }, [initialPair]);\n\n  // Fetch functions defined before refreshApiConnection\n  const fetchMarketData = useCallback(async (pair: string) => {\n    // If in mock mode, use mock data immediately\n    if (isMockMode) {\n      if (import.meta.env.DEV) {\n        console.info('Mock mode active, using mock market data');\n      }\n      setMarketData(mockMarketData);\n      return;\n    }\n\n    // In WebContainer, use mock data for development\n    if (IS_WEBCONTAINER) {\n      if (import.meta.env.DEV) {\n        console.info('WebContainer environment detected, using mock market data');\n      }\n      setMarketData(mockMarketData);\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const data = await poloniexApi.getMarketData(pair);\n\n      if (data && Array.isArray(data)) {\n        const formattedData = mapPoloniexDataToMarketData(data);\n        if (formattedData.length > 0) {\n          setMarketData(formattedData);\n        } else {\n          throw new Error('No market data returned from API');\n        }\n      } else {\n        throw new Error('Invalid market data format received from API');\n      }\n    } catch (err) {\n      const error = err as Error;\n      // console.error('Error fetching market data:', error.message);\n      setError(error);\n      // Don't fall back to mock data - let the UI handle the error\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isMockMode, mapPoloniexDataToMarketData]);\n\n  const fetchTrades = useCallback(async (_pair: string) => {\n    // If in mock mode, use mock data immediately\n    if (isMockMode) {\n      if (import.meta.env.DEV) {\n        console.info('Mock mode active, using mock trades data');\n      }\n      setTrades(mockTrades);\n      return;\n    }\n\n    // In WebContainer, use mock data for development\n    if (IS_WEBCONTAINER) {\n      if (import.meta.env.DEV) {\n        console.info('WebContainer environment detected, using mock trades data');\n      }\n      setTrades(mockTrades);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Note: getRecentTrades method does not exist in current API, using placeholder\n      // Use getRecentTrades method or fallback to empty array\n      // Mock data for now since getRecentTrades doesn't exist\n      const data: unknown[] = [];\n      // console.log('Poloniex API method getRecentTrades not available, using mock data');\n\n      if (data && Array.isArray(data)) {\n        const formattedTrades = data.map(mapPoloniexTradeToTrade).filter(trade =>\n          trade.id.indexOf('error-') !== 0 && !isNaN(trade.price) && !isNaN(trade.amount)\n        );\n\n        if (formattedTrades.length > 0) {\n          setTrades(formattedTrades);\n        } else {\n          throw new Error('No valid trades returned from API');\n        }\n      } else {\n        throw new Error('Invalid trades data format received from API');\n      }\n    } catch (err) {\n      const error = err as Error;\n      // console.error('Error fetching trades:', error.message);\n      setError(error);\n      // Don't fall back to mock data - let the UI handle the error\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isMockMode, mapPoloniexTradeToTrade]);\n\n  const fetchAccountBalance = useCallback(async () => {\n    // If in mock mode, use mock data immediately\n    if (isMockMode) {\n      if (import.meta.env.DEV) {\n        console.info('Mock mode active, using mock account data');\n      }\n      setAccountBalance({\n        totalAmount: \"15478.23\",\n        availableAmount: \"12345.67\",\n        accountEquity: \"15820.45\",\n        unrealizedPnL: \"342.22\",\n        todayPnL: \"156.78\",\n        todayPnLPercentage: \"1.02\"\n      });\n      return;\n    }\n\n    // In WebContainer, use mock data for development\n    if (IS_WEBCONTAINER) {\n      if (import.meta.env.DEV) {\n        console.info('WebContainer environment detected, using mock account data');\n      }\n      setAccountBalance({\n        totalAmount: \"15478.23\",\n        availableAmount: \"12345.67\",\n        accountEquity: \"15820.45\",\n        unrealizedPnL: \"342.22\",\n        todayPnL: \"156.78\",\n        todayPnLPercentage: \"1.02\"\n      });\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const data = await poloniexApi.getAccountBalance();\n      setAccountBalance(data);\n    } catch (err) {\n      const error = err as Error;\n      // console.error('Error fetching account balance:', error.message);\n      setError(error);\n      // Don't fall back to mock data - let the UI handle the error\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isMockMode]);\n\n  // Update function refs to latest versions\n  fetchFunctionsRef.current = {\n    fetchMarketData,\n    fetchTrades,\n    fetchAccountBalance\n  };\n\n  // Function to refresh API connection when settings change - defined after all dependencies\n  const refreshApiConnection = useCallback(() => {\n    if (import.meta.env.DEV) {\n      console.info('Refreshing API connection with new credentials');\n    }\n    setIsLoading(true);\n    poloniexApi.loadCredentials();\n\n    // Clear any existing errors\n    setError(null);\n\n    // Refresh data with new credentials\n    Promise.all([\n      fetchMarketData(initialPair),\n      fetchTrades(initialPair),\n      fetchAccountBalance()\n    ]).finally(() => {\n      setIsLoading(false);\n    });\n  }, [initialPair, fetchMarketData, fetchTrades, fetchAccountBalance]);\n\n  // Update mock mode when credentials change\n  useEffect(() => {\n    const newHasCredentials = Boolean(apiKey && apiSecret);\n    const newMockMode = shouldUseMockMode(newHasCredentials) || !isLiveTrading;\n    setIsMockMode(newMockMode);\n\n    if (isLiveTrading && newHasCredentials && !newMockMode) {\n      if (import.meta.env.DEV) {\n        console.info('Live trading enabled with credentials, refreshing API connection');\n      }\n      poloniexApi.loadCredentials();\n\n      // Manually trigger data refresh without causing dependency loop\n      setIsLoading(true);\n      setError(null);\n\n      // Use the ref functions to avoid dependency loop\n      if (fetchFunctionsRef.current) {\n        Promise.all([\n          fetchFunctionsRef.current.fetchMarketData(initialPair),\n          fetchFunctionsRef.current.fetchTrades(initialPair),\n          fetchFunctionsRef.current.fetchAccountBalance()\n        ]).finally(() => {\n          setIsLoading(false);\n        });\n      }\n    } else {\n      if (import.meta.env.DEV) {\n        console.info('Using mock mode - live trading disabled or missing credentials');\n      }\n    }\n  }, [isLiveTrading, apiKey, apiSecret, initialPair]);\n\n  // Handle real-time updates via WebSocket\n  useEffect(() => {\n    // In WebContainer, skip WebSocket connection and use mock data immediately\n    if (IS_WEBCONTAINER) {\n      if (import.meta.env.DEV) {\n        console.info('WebContainer environment detected, using mock data instead of WebSocket');\n      }\n      setIsMockMode(true);\n      setMarketData(mockMarketData);\n      setTrades(mockTrades);\n\n      // Skip the rest of the WebSocket setup\n      return () => {}; // Empty cleanup function\n    }\n\n    // Connect to WebSocket for non-WebContainer environments\n    // Support both Promise-returning and void-returning connect implementations\n    Promise.resolve(webSocketService.connect())\n      .then(() => {\n        if (import.meta.env.DEV) {\n          console.info('WebSocket setup complete');\n        }\n\n        // Check if we're in mock mode from the WebSocket service\n        setIsMockMode(webSocketService.isMockMode());\n\n        // Only subscribe if connection was successful\n        if (webSocketService.isConnected()) {\n          webSocketService.subscribeToMarket(initialPair);\n        } else {\n          if (import.meta.env.DEV) {\n            console.info('Using mock data mode');\n          }\n          // Initialize with mock data if WebSocket connection failed\n          setMarketData(mockMarketData);\n          setTrades(mockTrades);\n        }\n      })\n      .catch(_err => {\n        // console.error('Error connecting to WebSocket:', err instanceof Error ? err.message : String(err));\n        setIsMockMode(true);\n        setMarketData(mockMarketData);\n        setTrades(mockTrades);\n      });\n\n    // Listen for market data updates with proper typing\n    const handleMarketDataUpdate = (...args: unknown[]) => {\n      const data = args[0] as MarketData;\n      if (data?.pair === initialPair) {\n        setMarketData(prevData => {\n          // Find if this timestamp already exists\n          const existingIndex = prevData.findIndex(item => item.timestamp === data.timestamp);\n\n          if (existingIndex >= 0) {\n            // Update existing data\n            const updatedData = [...prevData];\n            updatedData[existingIndex] = data;\n            return updatedData;\n          } else {\n            // Add new data and maintain order\n            const newData = [...prevData, data];\n            return newData.sort((a, b) => a.timestamp - b.timestamp);\n          }\n        });\n      }\n    };\n\n    // Listen for trade updates with proper typing\n    const handleTradeUpdate = (...args: unknown[]) => {\n      const trade = args[0] as Trade;\n      if (trade?.pair === initialPair) {\n        setTrades(prevTrades => {\n          // Check if trade already exists\n          if (!prevTrades.some(t => t.id === trade.id)) {\n            return [trade, ...prevTrades].slice(0, 50); // Keep last 50 trades\n          }\n          return prevTrades;\n        });\n      }\n    };\n\n    webSocketService.on('marketData', handleMarketDataUpdate);\n    webSocketService.on('tradeExecuted', handleTradeUpdate);\n\n    // Initial data fetch with small delay to avoid overwhelming the browser\n    setTimeout(() => {\n      if (fetchFunctionsRef.current) {\n        fetchFunctionsRef.current.fetchMarketData(initialPair);\n        setTimeout(() => {\n          if (fetchFunctionsRef.current) {\n            fetchFunctionsRef.current.fetchTrades(initialPair);\n            setTimeout(() => {\n              if (fetchFunctionsRef.current) {\n                fetchFunctionsRef.current.fetchAccountBalance();\n              }\n            }, 500);\n          }\n        }, 500);\n      }\n    }, 500);\n\n    // Cleanup\n    return () => {\n      webSocketService.off('marketData', handleMarketDataUpdate);\n      webSocketService.off('tradeExecuted', handleTradeUpdate);\n      if (webSocketService.isConnected()) {\n        webSocketService.unsubscribeFromMarket(initialPair);\n      }\n    };\n  }, [initialPair]);\n\n  return {\n    marketData,\n    trades,\n    accountBalance,\n    isLoading,\n    error,\n    isMockMode,\n    fetchMarketData,\n    fetchTrades,\n    fetchAccountBalance,\n    refreshApiConnection\n  };\n};\n","import { AccountBalance, MarketData, AdvancedMetrics, StrategyTypeUnion, EnhancedStrategy } from '../types/unified-interfaces';\n\nexport function isValidAccountBalance(obj: unknown): obj is AccountBalance {\n  return obj !== null &&\n    typeof obj === 'object' &&\n    typeof (obj as AccountBalance).available === 'number' &&\n    typeof (obj as AccountBalance).total === 'number' &&\n    typeof (obj as AccountBalance).currency === 'string';\n}\n\nexport function isValidMarketData(obj: unknown): obj is MarketData {\n  return obj !== null &&\n    typeof obj === 'object' &&\n    typeof (obj as MarketData).close === 'number' &&\n    typeof (obj as MarketData).pair === 'string' &&\n    typeof (obj as MarketData).timestamp === 'number';\n}\n\n/**\n * Enhanced market data with safe extraction and price fallback\n */\nexport function enhanceMarketData(data: unknown): MarketData {\n  if (!data || typeof data !== 'object') {\n    throw new Error('Invalid market data provided');\n  }\n\n  const obj = data as Record<string, unknown>;\n\n  const pair =\n    typeof obj.pair === 'string'\n      ? obj.pair\n      : typeof obj.symbol === 'string'\n        ? (obj.symbol as string).replace('_', '-')\n        : 'BTC-USDT';\n\n  const toNum = (v: unknown, def = 0): number =>\n    typeof v === 'number' ? v : typeof v === 'string' ? parseFloat(v) || def : def;\n\n  const timestamp =\n    typeof obj.timestamp === 'number'\n      ? obj.timestamp\n      : typeof obj.ts === 'number'\n        ? obj.ts\n        : Date.now();\n\n  const open = toNum(obj.open);\n  const high = toNum(obj.high);\n  const low = toNum(obj.low);\n  const close = toNum((obj as any).close ?? (obj as any).last ?? 0);\n  const volume = toNum(obj.volume);\n\n  const price = toNum((obj as any).price ?? (obj as any).close ?? (obj as any).last);\n\n  return {\n    pair,\n    timestamp,\n    open,\n    high,\n    low,\n    close,\n    volume,\n    price,\n  };\n}\n\n// Safe account balance access with string properties\nexport function safeAccountBalance(balance: unknown): AccountBalance {\n  if (!balance || typeof balance !== 'object') {\n    return {\n      available: 0,\n      total: 0,\n      currency: 'USDT',\n      totalAmount: '0',\n      availableAmount: '0',\n      accountEquity: '0',\n      unrealizedPnL: '0',\n      todayPnL: '0'\n    };\n  }\n\n  const balanceObj = balance as Partial<AccountBalance>;\n  return {\n    available: balanceObj.available ?? 0,\n    total: balanceObj.total ?? 0,\n    currency: balanceObj.currency ?? 'USDT',\n    totalAmount: balanceObj.totalAmount ?? balanceObj.total?.toString() ?? '0',\n    availableAmount: balanceObj.availableAmount ?? balanceObj.available?.toString() ?? '0',\n    accountEquity: balanceObj.accountEquity ?? balanceObj.total?.toString() ?? '0',\n    unrealizedPnL: balanceObj.unrealizedPnL ?? '0',\n    todayPnL: balanceObj.todayPnL ?? '0',\n    todayPnLPercentage: balanceObj.todayPnLPercentage ?? '0'\n  };\n}\n\nexport function safeMetricsAccess(metrics: unknown): Partial<AdvancedMetrics> {\n  if (!metrics || typeof metrics !== 'object') {\n    return {};\n  }\n\n  const m = metrics as Partial<AdvancedMetrics>;\n\n  const ensureNumber = (v: unknown, def = 0): number =>\n    typeof v === 'number' ? v : typeof v === 'string' ? parseFloat(v) || def : def;\n\n  return {\n    totalTrades: ensureNumber(m.totalTrades),\n    winRate: ensureNumber(m.winRate),\n    profitFactor: ensureNumber(m.profitFactor),\n    sharpeRatio: ensureNumber(m.sharpeRatio),\n    maxDrawdown: ensureNumber(m.maxDrawdown),\n    calmarRatio: ensureNumber(m.calmarRatio),\n\n    // Extended metrics (previously accessed via untyped object)\n    gainToLossRatio: ensureNumber((m as any).gainToLossRatio),\n    payoffRatio: ensureNumber((m as any).payoffRatio),\n    expectancy: ensureNumber((m as any).expectancy),\n    systemQualityNumber: ensureNumber((m as any).systemQualityNumber),\n\n    painIndex: ensureNumber((m as any).painIndex),\n    martinRatio: ensureNumber((m as any).martinRatio),\n    burkeRatio: ensureNumber((m as any).burkeRatio),\n\n    skewness: ensureNumber(m.skewness),\n    kurtosis: ensureNumber(m.kurtosis),\n    upnessIndex: ensureNumber(m.upnessIndex),\n    upsidePotentialRatio: ensureNumber(m.upsidePotentialRatio),\n    gainToPainRatio: ensureNumber(m.gainToPainRatio),\n  };\n}\n\n// Add type conversion utility for strategies\nexport function ensureStrategyType(strategy: unknown): EnhancedStrategy {\n  if (!strategy || typeof strategy !== 'object') {\n    throw new Error('Strategy object is required');\n  }\n\n  const strategyObj = strategy as Partial<EnhancedStrategy>;\n\n  // Validate and convert strategy type\n  const validTypes: StrategyTypeUnion[] = [\n    'scalping', 'swing', 'arbitrage', 'momentum',\n    'mean_reversion', 'trend_following', 'ml_based', 'grid', 'dca'\n  ];\n\n  let strategyType: StrategyTypeUnion = 'momentum'; // default\n  if (typeof strategyObj.type === 'string') {\n    const lowerType = strategyObj.type.toLowerCase();\n    const foundType = validTypes.find(t => t === lowerType || t.includes(lowerType));\n    if (foundType) {\n      strategyType = foundType;\n    }\n  }\n\n  return {\n    id: strategyObj.id ?? `strategy_${Date.now()}`,\n    name: strategyObj.name ?? 'Unnamed Strategy',\n    type: strategyType,\n    symbol: strategyObj.symbol ?? 'BTC-USDT',\n    timeframe: strategyObj.timeframe ?? '1h',\n    parameters: strategyObj.parameters ?? {},\n    confidence: strategyObj.confidence ?? 0,\n    profitPotential: strategyObj.profitPotential ?? 0,\n    riskScore: strategyObj.riskScore ?? 0,\n    description: strategyObj.description ?? 'No description available',\n    learningMetrics: {\n      adaptationRate: strategyObj.learningMetrics?.adaptationRate ?? 0,\n      consistencyScore: strategyObj.learningMetrics?.consistencyScore ?? 0,\n      marketConditionPerformance: strategyObj.learningMetrics?.marketConditionPerformance ?? {},\n      timestamp: strategyObj.learningMetrics?.timestamp ?? Date.now()\n    },\n    adaptationRate: strategyObj.adaptationRate ?? 0,\n    consistencyScore: strategyObj.consistencyScore ?? 0,\n    marketConditionPerformance: strategyObj.marketConditionPerformance ?? {},\n    active: strategyObj.active ?? true\n  };\n}\n\n// Safe numeric parsing utilities\nexport function safeParseFloat(value: unknown, defaultValue: number = 0): number {\n  if (typeof value === 'number' && !isNaN(value)) {\n    return value;\n  }\n  if (typeof value === 'string') {\n    const parsed = parseFloat(value);\n    return isNaN(parsed) ? defaultValue : parsed;\n  }\n  return defaultValue;\n}\n\nexport function safeParseInt(value: unknown, defaultValue: number = 0): number {\n  if (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) {\n    return value;\n  }\n  if (typeof value === 'string') {\n    const parsed = parseInt(value, 10);\n    return isNaN(parsed) ? defaultValue : parsed;\n  }\n  return defaultValue;\n}\n","import React, { createContext, useState, ReactNode, useEffect, useCallback } from 'react';\nimport { Strategy, MovingAverageCrossoverParameters } from '@shared/types';\nimport { MarketData, Trade } from '../types';\nimport { mockMarketData, mockTrades } from '../data/mockData';\nimport { usePoloniexData } from '../hooks/usePoloniexData';\nimport { poloniexApi } from '../services/poloniexAPI';\nimport { isValidAccountBalance } from '../utils/typeGuards';\n\ninterface TradingContextType {\n  marketData: MarketData[];\n  trades: Trade[];\n  strategies: Strategy[];\n  activeStrategies: string[];\n  accountBalance: {\n    available: number;\n    total: number;\n    currency: string;\n  } | null;\n  isLoading: boolean;\n  isMockMode: boolean;\n  addStrategy: (strategy: Strategy) => void;\n  removeStrategy: (id: string) => void;\n  toggleStrategyActive: (id: string) => void;\n  placeOrder: (pair: string, side: 'buy' | 'sell', type: 'limit' | 'market', quantity: number, price?: number) => Promise<unknown>;\n  errors: string[];\n  addError: (error: string) => void;\n  clearErrors: () => void;\n  refreshApiConnection: () => void; // Changed to non-Promise return type to match implementation\n}\n\nconst TradingContext = createContext<TradingContextType | undefined>(undefined);\n\nexport { TradingContext };\n\ninterface TradingProviderProps {\n  children: ReactNode;\n  initialPair?: string;\n}\n\nexport const TradingProvider: React.FC<TradingProviderProps> = ({\n  children,\n  initialPair = 'BTC-USDT'\n}) => {\n  // Get data from Poloniex API or mock data\n  const {\n    marketData: realMarketData,\n    trades: realTrades,\n    accountBalance,\n    isLoading,\n    error,\n    isMockMode,\n    refreshApiConnection\n  } = usePoloniexData(initialPair);\n\n  const normalizedAccountBalance = isValidAccountBalance(accountBalance) ? accountBalance : null;\n\n  const [marketData, setMarketData] = useState<MarketData[]>(mockMarketData);\n  const [trades, setTrades] = useState<Trade[]>(mockTrades);\n\n  // Update state when real data is available\n  useEffect(() => {\n    if (realMarketData.length > 0) {\n      setMarketData(realMarketData);\n    }\n  }, [realMarketData]);\n\n  useEffect(() => {\n    if (realTrades.length > 0) {\n      setTrades(realTrades);\n    }\n  }, [realTrades]);\n\n  // Strategy management\n  const [strategies, setStrategies] = useState<Strategy[]>([\n    {\n      id: '1',\n      name: 'Moving Average Crossover',\n      type: 'automated',\n      algorithm: 'MovingAverageCrossover',\n      active: true,\n      parameters: {\n        fastPeriod: 10,\n        slowPeriod: 50,\n        pair: 'BTC-USDT',\n        timeframe: '1d'\n      } as MovingAverageCrossoverParameters,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      performance: {\n        totalPnL: 12.5,\n        winRate: 0.65,\n        tradesCount: 24\n      }\n    }\n  ]);\n\n  const [activeStrategies, setActiveStrategies] = useState<string[]>(['1']);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const addError = useCallback((error: string) => {\n    // Avoid adding duplicate errors\n    setErrors(prev => {\n      if (prev.includes(error)) {\n        return prev;\n      }\n      return [...prev, error];\n    });\n  }, []);\n\n  const clearErrors = useCallback(() => {\n    setErrors([]);\n  }, []);\n\n  // If there was an error loading data, add it to our errors\n  useEffect(() => {\n    if (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      addError(errorMessage);\n    }\n  }, [error, addError]);\n\n  const addStrategy = (strategy: Strategy) => {\n    setStrategies(prev => [...prev, strategy]);\n  };\n\n  const removeStrategy = (id: string) => {\n    setStrategies(prev => prev.filter(strategy => strategy.id !== id));\n    setActiveStrategies(prev => prev.filter(strategyId => strategyId !== id));\n  };\n\n  const toggleStrategyActive = (id: string) => {\n    setActiveStrategies(prev =>\n      prev.includes(id)\n        ? prev.filter(strategyId => strategyId !== id)\n        : [...prev, id]\n    );\n  };\n\n  // Place an order using the Poloniex API\n  const placeOrder = async (\n    pair: string,\n    side: 'buy' | 'sell',\n    type: 'limit' | 'market',\n    quantity: number,\n    price?: number\n  ) => {\n    try {\n      if (isMockMode) {\n        // console.log('Using mock order placement', { pair, side, type, quantity, price });\n        return {\n          success: true,\n          orderId: 'mock-order-' + Date.now(),\n          pair,\n          side,\n          type,\n          quantity,\n          price: price || 'market'\n        };\n      }\n\n      const result = await poloniexApi.placeOrder(pair, side, type, quantity, price);\n      return result;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error placing order';\n      addError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n\n  return (\n    <TradingContext.Provider value={{\n      marketData,\n      trades,\n      strategies,\n      activeStrategies,\n      accountBalance: normalizedAccountBalance,\n      isLoading,\n      isMockMode,\n      addStrategy,\n      removeStrategy,\n      toggleStrategyActive,\n      placeOrder,\n      errors,\n      addError,\n      clearErrors,\n      refreshApiConnection\n    }}>\n      {children}\n    </TradingContext.Provider>\n  );\n};\n\n// End of component\n","import { useContext } from 'react';\nimport { TradingContext } from '../context/TradingContext';\n\nexport const useTradingContext = () => {\n  const context = useContext(TradingContext);\n  if (context === undefined) {\n    throw new Error('useTradingContext must be used within a TradingProvider');\n  }\n  return context;\n};","import {\n  Activity,\n  ArrowLeft,\n  BarChart4,\n  Chrome,\n  History,\n  LayoutDashboard,\n  LineChart,\n  Menu,\n  MessageSquare,\n  Receipt,\n  Settings,\n  TrendingUp,\n  User,\n  Zap,\n  AlertCircle\n} from 'lucide-react';\nimport React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useResponsiveNav } from '../hooks/useResponsiveNav';\nimport { useTradingContext } from '../hooks/useTradingContext';\n\nconst Sidebar: React.FC = () => {\n  const location = useLocation();\n  const { accountBalance, isLoading } = useTradingContext();\n  const { isDesktop } = useResponsiveNav();\n  const [isCollapsed, setIsCollapsed] = useState(false);\n\n  const navItems = [\n    { path: '/', label: 'Dashboard', icon: <LayoutDashboard size={20} /> },\n    { path: '/dashboard/live', label: 'Live Trading', icon: <Activity size={20} /> },\n    { path: '/strategies', label: 'Trading Strategies', icon: <Zap size={20} /> },\n    { path: '/backtesting', label: 'Advanced Backtesting', icon: <TrendingUp size={20} /> },\n    { path: '/account', label: 'Account', icon: <User size={20} /> },\n    { path: '/transactions', label: 'Transaction History', icon: <Receipt size={20} /> },\n    { path: '/trades', label: 'Trade History', icon: <History size={20} /> },\n    { path: '/charts', label: 'Market Analysis', icon: <BarChart4 size={20} /> },\n    { path: '/performance', label: 'Performance', icon: <LineChart size={20} /> },\n    { path: '/chat', label: 'Community Chat', icon: <MessageSquare size={20} /> },\n    { path: '/extension', label: 'Chrome Extension', icon: <Chrome size={20} /> },\n    { path: '/status', label: 'System Status', icon: <AlertCircle size={20} /> },\n    { path: '/settings', label: 'Settings', icon: <Settings size={20} /> }\n  ];\n\n  const toggleSidebar = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  // Only show sidebar on desktop\n  if (!isDesktop) return null;\n\n  return (\n    <aside\n      id=\"navigation\"\n      className={`\n        ${isCollapsed ? 'w-16' : 'w-64'}\n        bg-neutral-800 text-white transition-all duration-300 ease-in-out\n        relative flex-shrink-0\n      `}\n      role=\"navigation\"\n      aria-label=\"Main navigation\"\n    >\n      <div className=\"p-4\">\n        {/* Header with toggle */}\n        <div className=\"flex items-center justify-between mb-6 mt-2\">\n          <div className={`flex items-center ${isCollapsed ? 'justify-center' : ''}`}>\n            <Zap className=\"h-8 w-8 text-blue-400 mr-2\" aria-hidden=\"true\" />\n            {!isCollapsed && <h2 className=\"text-xl font-bold\">TradingBot</h2>}\n          </div>\n          <button\n            onClick={toggleSidebar}\n            className=\"p-1 rounded-md text-neutral-400 hover:text-white hover:bg-neutral-700 transition-colors\"\n            aria-label={isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n            aria-expanded={isCollapsed ? 'false' : 'true'}\n          >\n            {isCollapsed ? <Menu size={20} aria-hidden=\"true\" /> : <ArrowLeft size={20} aria-hidden=\"true\" />}\n          </button>\n        </div>\n\n        <nav aria-label=\"Main menu\">\n          <ul className=\"space-y-1\" role=\"list\">\n            {navItems.map((item) => (\n              <li key={item.path}>\n                <Link\n                  to={item.path}\n                  className={`\n                    flex items-center p-3 rounded-md transition-all duration-200 group\n                    ${location.pathname === item.path\n                      ? 'bg-blue-700 text-white'\n                      : 'text-neutral-300 hover:bg-neutral-700 hover:text-white'\n                    }\n                    ${isCollapsed ? 'justify-center' : ''}\n                  `}\n                  title={isCollapsed ? item.label : undefined}\n                  aria-label={item.label}\n                  aria-current={location.pathname === item.path ? 'page' : undefined}\n                >\n                  <span className={`flex-shrink-0 ${!isCollapsed ? 'mr-3' : ''}`} aria-hidden=\"true\">\n                    {item.icon}\n                  </span>\n                  {!isCollapsed && (\n                    <span className=\"transition-opacity duration-200\">{item.label}</span>\n                  )}\n\n                  {/* Tooltip for collapsed state */}\n                  {isCollapsed && (\n                    <div className=\"\n                      absolute left-full ml-2 px-2 py-1\n                      bg-neutral-900 text-white text-sm rounded-md\n                      opacity-0 group-hover:opacity-100 transition-opacity duration-200\n                      pointer-events-none whitespace-nowrap z-50\n                    \">\n                      {item.label}\n                    </div>\n                  )}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </div>\n\n      {/* Account balance section */}\n      {!isCollapsed && (\n        <div className=\"absolute bottom-0 left-0 right-0 p-4 border-t border-neutral-700\">\n          <div className=\"bg-neutral-900 p-3 rounded-md\">\n            <div className=\"text-sm text-neutral-400 mb-2\">Account Balance</div>\n            {isLoading ? (\n              <div className=\"text-sm text-neutral-500\">Loading...</div>\n            ) : (\n              <>\n                <div className=\"text-lg font-semibold\">\n                  ${parseFloat(accountBalance?.total?.toString() || '0').toFixed(2)} USDT\n                </div>\n                <div className=\"text-xs text-neutral-400 mt-1\">\n                  {accountBalance?.currency || 'USDT'}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nconst SkipLinks: React.FC = () => {\n  return (\n    <div className=\"sr-only-focusable\">\n      <a href=\"#main-content\" className=\"skip-link\">\n        Skip to main content\n      </a>\n      <a href=\"#navigation\" className=\"skip-link\">\n        Skip to navigation\n      </a>\n    </div>\n  );\n};\n\nexport default SkipLinks;","import { useEffect, useRef } from 'react';\n\n/**\n * Hook to handle page visibility changes and provide callbacks for when page becomes visible/hidden\n * Includes grace period to handle quick tab switches without disrupting connections\n */\nexport const usePageVisibility = (\n  onVisible: () => void,\n  onHidden: () => void,\n  gracePeriod: number = 30000 // 30 seconds grace period\n): void => {\n  // In the browser, setTimeout returns a number, not NodeJS.Timeout\n  const timeoutRef = useRef<number | undefined>(undefined);\n  \n  useEffect(() => {\n    // SSR/Non-DOM environments guard\n    if (typeof document === 'undefined' || typeof window === 'undefined') {\n      return;\n    }\n\n    const handleVisibilityChange = (): void => {\n      if (document.hidden || document.visibilityState === 'hidden') {\n        // Page is hidden - delay the onHidden callback to handle quick tab switches\n        timeoutRef.current = window.setTimeout(() => {\n          onHidden();\n        }, gracePeriod);\n      } else {\n        // Page is visible - clear any pending onHidden callback and call onVisible\n        if (timeoutRef.current !== undefined) {\n          window.clearTimeout(timeoutRef.current);\n          timeoutRef.current = undefined;\n        }\n        onVisible();\n      }\n    };\n    \n    // Listen for visibility changes\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    // Invoke once on mount to sync with current state\n    handleVisibilityChange();\n    \n    // Cleanup\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      if (timeoutRef.current !== undefined) {\n        window.clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [onVisible, onHidden, gracePeriod]);\n};","import React, { createContext, useEffect, ReactNode } from 'react';\nimport { webSocketService } from '../services/websocketService';\nimport { usePageVisibility } from '../hooks/usePageVisibility';\n\ninterface WebSocketContextType {\n  isConnected: boolean;\n  connectionState: string;\n  lastError: string | null;\n  connectionHealth: {\n    isHealthy: boolean;\n    uptime: number;\n    latency: number | null;\n    reconnectAttempts: number;\n  };\n}\n\nconst WebSocketContext = createContext<WebSocketContextType | null>(null);\n\nexport { WebSocketContext };\nexport type { WebSocketContextType };\n\ninterface WebSocketProviderProps {\n  children: ReactNode;\n}\n\nexport const WebSocketProvider: React.FC<WebSocketProviderProps> = ({ children }) => {\n  const [contextState, setContextState] = React.useState<WebSocketContextType>({\n    isConnected: false,\n    connectionState: 'disconnected',\n    lastError: null,\n    connectionHealth: {\n      isHealthy: false,\n      uptime: 0,\n      latency: null,\n      reconnectAttempts: 0\n    }\n  });\n\n  // Handle page visibility changes\n  usePageVisibility(\n    () => {\n      // Page visible - ensure connection\n      if (!webSocketService.isConnected()) {\n        Promise.resolve(webSocketService.connect()).catch(console.error);\n      }\n    },\n    () => {\n      // Page hidden - maintain connection in background\n      // For now, we keep the connection active\n    },\n    30000 // 30 second grace period\n  );\n\n  useEffect(() => {\n    // Connection state change handler\n    const handleConnectionStateChange = (...args: unknown[]) => {\n      const state = args[0] as string;\n      setContextState(prev => ({\n        ...prev,\n        connectionState: state,\n        isConnected: state === 'connected'\n      }));\n    };\n\n    // Error handler\n    const handleError = (...args: unknown[]) => {\n      const error = args[0];\n      setContextState(prev => ({\n        ...prev,\n        lastError: error instanceof Error ? error.message : 'Unknown error'\n      }));\n    };\n\n    // Set up event listeners\n    webSocketService.on('connectionStateChanged', handleConnectionStateChange);\n    webSocketService.on('error', handleError);\n\n    // Initialize connection\n    Promise.resolve(webSocketService.connect()).catch(console.error);\n\n    // Update connection health periodically\n    const healthInterval = setInterval(() => {\n      const health = webSocketService.getConnectionHealth();\n      setContextState(prev => ({\n        ...prev,\n        connectionHealth: {\n          isHealthy: health.isHealthy,\n          uptime: health.uptime,\n          latency: health.latency,\n          reconnectAttempts: health.reconnectAttempts\n        }\n      }));\n    }, 5000);\n\n    // Cleanup\n    return () => {\n      clearInterval(healthInterval);\n      webSocketService.off('connectionStateChanged', handleConnectionStateChange);\n      webSocketService.off('error', handleError);\n      webSocketService.disconnect();\n    };\n  }, []);\n\n  return (\n    <WebSocketContext.Provider value={contextState}>\n      {children}\n    </WebSocketContext.Provider>\n  );\n};\n\n// End of component","import { useContext } from 'react';\nimport { WebSocketContext, WebSocketContextType } from '../context/WebSocketContext';\n\nexport const useWebSocket = (): WebSocketContextType => {\n  const context = useContext(WebSocketContext);\n  if (!context) {\n    throw new Error('useWebSocket must be used within a WebSocketProvider');\n  }\n  return context;\n};","import React, { useState } from 'react';\nimport { Wifi, WifiOff, AlertCircle, Clock } from 'lucide-react';\nimport { useWebSocket } from '../hooks/useWebSocket';\n\ninterface ConnectionHealthProps {\n  className?: string;\n}\n\nconst ConnectionHealth: React.FC<ConnectionHealthProps> = ({ className = '' }) => {\n  const webSocket = useWebSocket();\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const getHealthStatus = () => {\n    if (webSocket.isConnected) {\n      return {\n        icon: Wifi,\n        color: 'text-green-600',\n        bgColor: 'bg-green-50',\n        borderColor: 'border-green-200',\n        status: 'Connected',\n        description: 'Real-time data active'\n      };\n    } else if (webSocket.connectionState === 'connecting' || webSocket.connectionState === 'reconnecting') {\n      return {\n        icon: Clock,\n        color: 'text-yellow-600',\n        bgColor: 'bg-yellow-50',\n        borderColor: 'border-yellow-200',\n        status: 'Connecting',\n        description: 'Establishing connection...'\n      };\n    } else {\n      return {\n        icon: WifiOff,\n        color: 'text-red-600',\n        bgColor: 'bg-red-50',\n        borderColor: 'border-red-200',\n        status: 'Disconnected',\n        description: 'Using mock data'\n      };\n    }\n  };\n\n  const formatUptime = (uptime: number) => {\n    if (uptime < 60000) return `${Math.floor(uptime / 1000)}s`;\n    if (uptime < 3600000) return `${Math.floor(uptime / 60000)}m`;\n    return `${Math.floor(uptime / 3600000)}h ${Math.floor((uptime % 3600000) / 60000)}m`;\n  };\n\n  const formatLatency = (latency: number | null) => {\n    if (latency === null) return 'N/A';\n    return `${Math.round(latency)}ms`;\n  };\n\n  const health = getHealthStatus();\n  const HealthIcon = health.icon;\n\n  return (\n    <div className={`fixed bottom-4 right-4 z-40 ${className}`}>\n      <div className={`${health.bgColor} ${health.borderColor} border rounded-lg shadow-lg transition-all duration-200`}>\n        {/* Compact view */}\n        <div \n          className={`p-3 cursor-pointer flex items-center space-x-2 ${isExpanded ? 'border-b border-current border-opacity-20' : ''}`}\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          <HealthIcon className={`w-4 h-4 ${health.color}`} />\n          <span className={`text-sm font-medium ${health.color}`}>\n            {health.status}\n          </span>\n          <div className={`w-2 h-2 rounded-full ${webSocket.isConnected ? 'bg-green-500' : 'bg-red-500'} animate-pulse`} />\n        </div>\n\n        {/* Expanded view */}\n        {isExpanded && (\n          <div className={`p-3 text-xs ${health.color}`}>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span>Status:</span>\n                <span className=\"font-medium\">{health.description}</span>\n              </div>\n              \n              {webSocket.isConnected && (\n                <>\n                  <div className=\"flex justify-between\">\n                    <span>Uptime:</span>\n                    <span className=\"font-mono\">{formatUptime(webSocket.connectionHealth.uptime)}</span>\n                  </div>\n                  \n                  <div className=\"flex justify-between\">\n                    <span>Latency:</span>\n                    <span className=\"font-mono\">{formatLatency(webSocket.connectionHealth.latency)}</span>\n                  </div>\n                </>\n              )}\n              \n              {webSocket.connectionHealth.reconnectAttempts > 0 && (\n                <div className=\"flex justify-between\">\n                  <span>Reconnects:</span>\n                  <span className=\"font-mono\">{webSocket.connectionHealth.reconnectAttempts}</span>\n                </div>\n              )}\n\n              <div className=\"flex justify-between\">\n                <span>State:</span>\n                <span className=\"font-mono capitalize\">{webSocket.connectionState}</span>\n              </div>\n\n              {webSocket.lastError && (\n                <div className=\"pt-2 border-t border-current border-opacity-20\">\n                  <div className=\"flex items-start space-x-1\">\n                    <AlertCircle className=\"w-3 h-3 mt-0.5 flex-shrink-0\" />\n                    <span className=\"text-xs break-all\">{webSocket.lastError}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionHealth;","import React, { useState, useEffect } from 'react';\nimport './EnvDebug.css';\n\nexport const EnvDebug: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Load dismissed state from localStorage\n  useEffect(() => {\n    const dismissed = localStorage.getItem('envDebug_dismissed') === 'true';\n    const minimized = localStorage.getItem('envDebug_minimized') === 'true';\n    setIsVisible(!dismissed);\n    setIsMinimized(minimized);\n  }, []);\n\n  // Handle dismiss\n  const handleDismiss = () => {\n    setIsVisible(false);\n    localStorage.setItem('envDebug_dismissed', 'true');\n  };\n\n  // Handle minimize/restore\n  const handleToggleMinimize = () => {\n    const newMinimized = !isMinimized;\n    setIsMinimized(newMinimized);\n    localStorage.setItem('envDebug_minimized', newMinimized.toString());\n  };\n\n  // Handle show again\n  const handleShowAgain = () => {\n    setIsVisible(true);\n    localStorage.setItem('envDebug_dismissed', 'false');\n  };\n\n  // Show a small restore button if dismissed\n  if (!isVisible) {\n    return (\n      <button\n        onClick={handleShowAgain}\n        className=\"env-debug-restore\"\n        title=\"Show environment debug info\"\n      >\n        🔍\n      </button>\n    );\n  }\n\n  const envVars = {\n    // Check what the frontend is actually receiving\n    API_KEY: import.meta.env.VITE_POLONIEX_API_KEY,\n    API_SECRET: import.meta.env.VITE_POLONIEX_API_SECRET,\n    API_URL: import.meta.env.VITE_API_URL,\n    WS_URL: import.meta.env.VITE_WS_URL,\n    FORCE_MOCK: import.meta.env.VITE_FORCE_MOCK_MODE,\n    NODE_ENV: import.meta.env.MODE,\n    IS_PROD: import.meta.env.PROD,\n  };\n\n  // Determine why mock mode is active\n  const hasApiKey = !!(envVars.API_KEY && envVars.API_KEY.length > 10);\n  const hasApiSecret = !!(envVars.API_SECRET && envVars.API_SECRET.length > 10);\n  const forceMock = envVars.FORCE_MOCK === 'true';\n  \n  const isLiveMode = hasApiKey && hasApiSecret && !forceMock;\n\n  if (isMinimized) {\n    return (\n      <div className=\"env-debug-minimized\" onClick={handleToggleMinimize}>\n        <span className=\"env-debug-mode-indicator\">\n          Mode: <span className={isLiveMode ? 'status-connected' : 'status-disconnected'}>\n            {isLiveMode ? 'LIVE' : 'MOCK'}\n          </span>\n          | {envVars.NODE_ENV} | 🔍\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"env-debug\">\n      <div className=\"env-debug-header\">\n        <h3 className=\"env-debug-title\">🔍 Environment Debug</h3>\n        <div className=\"env-debug-actions\">\n          <button\n            onClick={handleToggleMinimize}\n            className=\"env-debug-button\"\n            title=\"Minimize\"\n          >\n            {isMinimized ? '⬆️' : '⬇️'}\n          </button>\n          <button\n            onClick={handleDismiss}\n            className=\"env-debug-button danger\"\n            title=\"Dismiss\"\n          >\n            ✖️\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"env-debug-content\">\n        {/* Environment Mode */}\n        <div className=\"env-debug-section\">\n          <div>Environment Mode:</div>\n          <div>\n            <span className={`env-debug-mode ${isLiveMode ? 'status-connected' : 'status-disconnected'}`}>\n              {isLiveMode ? 'LIVE' : 'OFFLINE'}\n            </span>\n          </div>\n        </div>\n\n        {/* Issues */}\n        <div className=\"env-debug-section\">\n          <div>Issues:</div>\n          <ul className=\"env-debug-issues\">\n            {!hasApiKey && <li className=\"env-debug-issue\">No API Key</li>}\n            {!hasApiSecret && <li className=\"env-debug-issue\">No API Secret</li>}\n            {forceMock && <li className=\"env-debug-issue\">Force Mock = true</li>}\n            {isLiveMode && <li className=\"env-debug-success\">All conditions met!</li>}\n          </ul>\n        </div>\n\n        {/* Environment Variables */}\n        <details className=\"env-debug-details\">\n          <summary>Show Environment Variables</summary>\n          <pre className=\"env-debug-pre\">\n            {JSON.stringify(envVars, null, 2)}\n          </pre>\n        </details>\n      </div>\n\n      <div className=\"env-debug-footer\">\n        Mode: <span className={isLiveMode ? 'status-connected' : 'status-disconnected'}>\n          {isLiveMode ? 'LIVE' : 'OFFLINE'}\n        </span> | {envVars.NODE_ENV} | v{import.meta.env.VITE_APP_VERSION}\n      </div>\n    </div>\n  );\n};","import { useAppStore } from '@/store';\nimport { getBackendUrl, getWebSocketUrl } from '@/utils/environment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nexport const ConnectionTest: React.FC = () => {\n  const [apiStatus, setApiStatus] = useState<'checking' | 'connected' | 'failed' | 'cors-blocked'>('checking');\n  const [wsStatus, setWsStatus] = useState<'checking' | 'connected' | 'failed'>('checking');\n  const [apiData, setApiData] = useState<{ status: string; timestamp: string } | null>(null);\n  const [isVisible, setIsVisible] = useState(true);\n\n  // Refs to track if we've already shown notifications for these errors\n  const apiErrorNotifiedRef = useRef(false);\n  const wsErrorNotifiedRef = useRef(false);\n  const lastErrorTimeRef = useRef<{ api: number, ws: number }>({ api: 0, ws: 0 });\n\n  const addToast = useAppStore(state => state.addToast);\n\n  const apiUrl = (import.meta.env.VITE_API_URL as string) || getBackendUrl();\n  const wsUrl = (import.meta.env.VITE_WS_URL as string) || getWebSocketUrl();\n\n  useEffect(() => {\n    // Test API connection with better error handling\n    const testApiConnection = async () => {\n      try\n      {\n        const url = `${apiUrl}/api/health`;\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n          },\n          mode: 'cors', // Explicitly set CORS mode\n        });\n\n        const contentType = response.headers.get('content-type') || '';\n\n        if (!response.ok)\n        {\n          let preview = '';\n          try { preview = await response.text(); } catch (_e) { preview = ''; }\n          throw new Error(`HTTP ${response.status}: ${response.statusText} (${url}) ${preview.slice(0, 200)}`);\n        }\n\n        if (!contentType.includes('application/json'))\n        {\n          const text = await response.text().catch(() => '');\n          throw new Error(`Non-JSON response ${response.status} from ${url}: ${text.slice(0, 200)}`);\n        }\n\n        const data = await response.json();\n        setApiStatus('connected');\n        setApiData(data);\n        apiErrorNotifiedRef.current = false; // Reset error notification flag on success\n      } catch (err)\n      {\n        // Handle CORS and network errors more gracefully\n        const error = err as Error;\n        const now = Date.now();\n\n        // Only show toast notification once every 30 seconds to avoid spam\n        if (!apiErrorNotifiedRef.current || now - lastErrorTimeRef.current.api > 30000)\n        {\n          if (error.message.includes('CORS') || error.message.includes('Failed to fetch'))\n          {\n            if (import.meta.env.DEV)\n            {\n               \n              // console.warn('API connection failed due to CORS policy or network error. This is expected in development mode.');\n            }\n            setApiStatus('cors-blocked');\n            addToast({\n              message: 'Backend API unavailable - using mock data (expected in development)',\n              type: 'warning',\n              dismissible: true\n            });\n          } else\n          {\n            if (import.meta.env.DEV)\n            {\n               \n              // console.warn('API connection error:', error.message);\n            }\n            setApiStatus('failed');\n            addToast({\n              message: `API connection failed: ${error.message}`,\n              type: 'error',\n              dismissible: true\n            });\n          }\n\n          apiErrorNotifiedRef.current = true;\n          lastErrorTimeRef.current.api = now;\n        } else\n        {\n          // Still update status but don't spam notifications\n          if (error.message.includes('CORS') || error.message.includes('Failed to fetch'))\n          {\n            setApiStatus('cors-blocked');\n          } else\n          {\n            setApiStatus('failed');\n          }\n        }\n      }\n    };\n\n    testApiConnection();\n\n    // Test WebSocket connection with better error handling\n    const newSocket = io(wsUrl, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 3,\n      timeout: 5000,\n    });\n\n    newSocket.on('connect', () => {\n      if (import.meta.env.DEV)\n      {\n        // eslint-disable-next-line no-console\n        console.info('WebSocket connected!');\n      }\n      setWsStatus('connected');\n      wsErrorNotifiedRef.current = false; // Reset error notification flag on success\n    });\n\n    newSocket.on('connect_error', (err) => {\n      const now = Date.now();\n\n      // Only show toast notification once every 30 seconds to avoid spam\n      if (!wsErrorNotifiedRef.current || now - lastErrorTimeRef.current.ws > 30000)\n      {\n        if (err.message.includes('WebSocket is closed before the connection is established'))\n        {\n          if (import.meta.env.DEV)\n          {\n             \n            // console.warn('WebSocket connection failed due to server unavailability. This is expected in development mode.');\n          }\n          addToast({\n            message: 'WebSocket unavailable - using mock data (expected in development)',\n            type: 'warning',\n            dismissible: true\n          });\n        } else\n        {\n          if (import.meta.env.DEV)\n          {\n             \n            // console.warn('WebSocket error:', err.message);\n          }\n          addToast({\n            message: `WebSocket error: ${err.message}`,\n            type: 'error',\n            dismissible: true\n          });\n        }\n\n        wsErrorNotifiedRef.current = true;\n        lastErrorTimeRef.current.ws = now;\n      }\n\n      setWsStatus('failed');\n    });\n\n    return () => {\n      const anySocket = newSocket as unknown as { disconnect?: () => void; close?: () => void };\n      if (typeof anySocket.disconnect === 'function') {\n        anySocket.disconnect();\n      } else if (typeof anySocket.close === 'function') {\n        anySocket.close();\n      }\n    };\n  }, [apiUrl, wsUrl, addToast]);\n\n  const getStatusClass = (status: string) => {\n    switch (status)\n    {\n      case 'connected': return 'connection-status-widget__status--connected';\n      case 'failed': return 'connection-status-widget__status--failed';\n      case 'cors-blocked': return 'connection-status-widget__status--warning';\n      default: return 'connection-status-widget__status--warning';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status)\n    {\n      case 'connected': return 'CONNECTED';\n      case 'failed': return 'FAILED';\n      case 'cors-blocked': return 'CORS BLOCKED';\n      case 'checking': return 'CHECKING';\n      default: return status.toUpperCase();\n    }\n  };\n\n  return (\n    <>\n      {isVisible && (\n        <div className=\"connection-status-widget\">\n          <div className=\"connection-status-widget__header\">\n            <h3 className=\"connection-status-widget__title\">\n              🔌 Connection Status\n            </h3>\n            <button\n              onClick={() => setIsVisible(false)}\n              className=\"connection-status-widget__close-btn\"\n              title=\"Hide connection status\"\n            >\n              ×\n            </button>\n          </div>\n\n          <div className=\"connection-status-widget__section\">\n            <div className=\"connection-status-widget__row\">\n              <span>API Connection:</span>\n              <span className={`connection-status-widget__status ${getStatusClass(apiStatus)}`}>\n                {getStatusText(apiStatus)}\n              </span>\n            </div>\n            <div className=\"connection-status-widget__url\">\n              {apiUrl}\n            </div>\n            {apiData && (\n              <pre className=\"connection-status-widget__pre\">\n                {JSON.stringify(apiData, null, 2)}\n              </pre>\n            )}\n          </div>\n\n          <div className=\"connection-status-widget__section\">\n            <div className=\"connection-status-widget__row\">\n              <span>WebSocket:</span>\n              <span className={`connection-status-widget__status ${getStatusClass(wsStatus)}`}>\n                {getStatusText(wsStatus)}\n              </span>\n            </div>\n            <div className=\"connection-status-widget__url\">\n              {wsUrl}\n            </div>\n          </div>\n\n          <button\n            onClick={() => window.location.reload()}\n            className=\"connection-status-widget__refresh-btn\"\n          >\n            Refresh\n          </button>\n        </div>\n      )}\n\n      {!isVisible && (\n        <button\n          onClick={() => setIsVisible(true)}\n          className=\"connection-status-widget__toggle-btn\"\n          title=\"Show connection status\"\n        >\n          🔌 Status\n        </button>\n      )}\n    </>\n  );\n};\n","/**\n * Structured logging service for the trading platform\n */\n\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nexport interface LogContext {\n  service?: string;\n  component?: string;\n  action?: string;\n  metadata?: Record<string, unknown>;\n}\n\nexport class Logger {\n  private static instance: Logger;\n  private logLevel: LogLevel;\n\n  private constructor() {\n    this.logLevel = (import.meta.env.VITE_LOG_LEVEL as LogLevel) || 'info';\n  }\n\n  public static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  public setLogLevel(level: LogLevel): void {\n    this.logLevel = level;\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    const levels = { debug: 0, info: 1, warn: 2, error: 3 };\n    return levels[level] >= levels[this.logLevel];\n  }\n\n  public log(level: LogLevel, message: string, context?: LogContext): void {\n    if (!this.shouldLog(level)) return;\n\n    const timestamp = new Date().toISOString();\n    const logEntry = {\n      timestamp,\n      level: level.toUpperCase(),\n      message,\n      context: {\n        ...context,\n        service: context?.service || 'frontend',\n      },\n    };\n\n    // In production, this could send to a logging service\n    if (import.meta.env.MODE === 'production') {\n      console[level](JSON.stringify(logEntry));\n    } else {\n      console[level](`[${timestamp}] [${level.toUpperCase()}] ${message}`, context ? JSON.stringify(context.metadata || {}) : '');\n    }\n  }\n\n  public debug(message: string, context?: LogContext): void {\n    this.log('debug', message, context);\n  }\n\n  public info(message: string, context?: LogContext): void {\n    this.log('info', message, context);\n  }\n\n  public warn(message: string, context?: LogContext): void {\n    this.log('warn', message, context);\n  }\n\n  public error(message: string, context?: LogContext): void {\n    this.log('error', message, context);\n  }\n}\n\nexport const logger = Logger.getInstance();\nexport default logger;\n","import { logger } from '@/services/logger';\nimport React, { useEffect, useState } from 'react';\n\n// Extend the Window interface to include PWA-related properties\ndeclare global {\n  interface Window {\n    deferredPrompt?: BeforeInstallPromptEvent;\n  }\n\n  interface BeforeInstallPromptEvent extends Event {\n    prompt: () => Promise<void>;\n    userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>;\n  }\n}\n\n// Type for installed related apps\ninterface InstalledApp {\n  id: string;\n  url: string;\n  platform: string;\n}\n\ninterface PWAInstallPromptProps {\n  onInstall?: () => void;\n  onDismiss?: () => void;\n}\n\nconst PWAInstallPrompt: React.FC<PWAInstallPromptProps> = ({\n  onInstall,\n  onDismiss\n}) => {\n  const [isStandalone, setIsStandalone] = useState<boolean>(false);\n  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);\n  const [showPrompt, setShowPrompt] = useState<boolean>(false);\n\n  useEffect(() => {\n    // Check if app is running in standalone mode\n    const checkStandaloneMode = () => {\n      const nav = (typeof window !== 'undefined' ? window.navigator : undefined) as (Navigator & { standalone?: boolean }) | undefined;\n\n      const isStandaloneMatchMedia = typeof window !== 'undefined'\n        && typeof window.matchMedia === 'function'\n        && window.matchMedia('(display-mode: standalone)').matches;\n\n      const isNavigatorStandalone = Boolean(nav && (nav as any).standalone === true);\n\n      const isAndroidReferrer = typeof document !== 'undefined'\n        && typeof document.referrer === 'string'\n        && document.referrer.includes('android-app://');\n\n      const standalone = Boolean(isStandaloneMatchMedia || isNavigatorStandalone || isAndroidReferrer);\n\n      setIsStandalone(standalone);\n      logger.info('Standalone mode checked', {\n        component: 'PWAInstallPrompt',\n        metadata: { standalone }\n      });\n    };\n\n    checkStandaloneMode();\n\n    // Listen for beforeinstallprompt event\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault();\n\n      // Respect prior dismissal and standalone state to avoid noisy warnings\n      const dismissed = (() => {\n        try {\n          return localStorage.getItem('pwa_install_dismissed') === 'true';\n        } catch {\n          return false;\n        }\n      })();\n      if (dismissed || isStandalone) {\n        return;\n      }\n\n      // Type assertion for the beforeinstallprompt event\n      const beforeInstallEvent = e as unknown as BeforeInstallPromptEvent;\n      setDeferredPrompt(beforeInstallEvent);\n      setShowPrompt(true);\n      logger.info('PWA install prompt available', {\n        component: 'PWAInstallPrompt'\n      });\n    };\n\n    // Hide banner and clear deferred prompt when app is installed via browser UI\n    const handleAppInstalled = () => {\n      setShowPrompt(false);\n      setDeferredPrompt(null);\n      logger.info('PWA installed', {\n        component: 'PWAInstallPrompt'\n      });\n      onInstall?.();\n    };\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener === 'function') {\n      window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n      window.addEventListener('appinstalled', handleAppInstalled);\n    }\n\n    // Check if already installed (with type assertion for getInstalledRelatedApps)\n    if (typeof window !== 'undefined' && typeof window.navigator !== 'undefined') {\n      const nav = window.navigator as Navigator & {\n        getInstalledRelatedApps?: () => Promise<InstalledApp[]>;\n      };\n\n      if (typeof nav.getInstalledRelatedApps === 'function') {\n        nav.getInstalledRelatedApps().then((apps: InstalledApp[]) => {\n          if (apps.length > 0)\n          {\n            logger.info('PWA already installed', {\n              component: 'PWAInstallPrompt',\n              metadata: { appsCount: apps.length }\n            });\n            setShowPrompt(false);\n          }\n        });\n      }\n    }\n\n    return () => {\n      if (typeof window !== 'undefined' && typeof window.removeEventListener === 'function') {\n        window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n        window.removeEventListener('appinstalled', handleAppInstalled);\n      }\n    };\n  }, []);\n\n  const handleInstall = async () => {\n    if (!deferredPrompt) return;\n\n    try {\n      // Use the properly typed deferredPrompt\n      deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n\n      logger.info('User response to install prompt', {\n        component: 'PWAInstallPrompt',\n        metadata: { outcome }\n      });\n\n      if (outcome === 'accepted')\n      {\n        setShowPrompt(false);\n        onInstall?.();\n      }\n\n      setDeferredPrompt(null);\n    } catch (error)\n    {\n      logger.error('Error installing PWA', {\n        component: 'PWAInstallPrompt',\n        metadata: { error: error instanceof Error ? error.message : 'Unknown error' }\n      });\n    }\n  };\n\n  const handleDismiss = () => {\n    setShowPrompt(false);\n    try {\n      localStorage.setItem('pwa_install_dismissed', 'true');\n    } catch {\n      // no-op if storage unavailable\n    }\n    onDismiss?.();\n  };\n\n  if (isStandalone || !showPrompt)\n  {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white shadow-lg rounded-lg p-4 max-w-sm z-50 border border-neutral-200\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-center\">\n          <img\n            src=\"/icon-192.png\"\n            alt=\"Trading Bot\"\n            className=\"w-8 h-8 mr-3\"\n          />\n          <div>\n            <h3 className=\"text-sm font-semibold\">Install Trading Bot</h3>\n            <p className=\"text-xs text-neutral-600 mt-1\">\n              Get better performance and offline access\n            </p>\n          </div>\n        </div>\n        <button\n          onClick={handleDismiss}\n          className=\"text-neutral-400 hover:text-neutral-600\"\n          aria-label=\"Dismiss\"\n        >\n          ×\n        </button>\n      </div>\n\n      <div className=\"mt-3 flex space-x-2\">\n        <button\n          onClick={handleInstall}\n          className=\"flex-1 bg-blue-600 text-white text-sm py-2 px-3 rounded-md hover:bg-blue-700 transition-colors\"\n        >\n          Install\n        </button>\n        <button\n          onClick={handleDismiss}\n          className=\"flex-1 bg-neutral-100 text-neutral-700 text-sm py-2 px-3 rounded-md hover:bg-neutral-200 transition-colors\"\n        >\n          Not now\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PWAInstallPrompt;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const useErrorRecovery = (hasError: boolean, error: Error | null) => {\n  const navigate = useNavigate();\n  const [countdown, setCountdown] = useState(5);\n  \n  useEffect(() => {\n    if (!hasError) return;\n    \n    // Check if error is related to routing/navigation\n    const isRoutingError = error?.message?.includes('Failed to load') || \n                          error?.message?.includes('chunk') ||\n                          error?.message?.includes('route');\n    \n    // Start countdown for auto-navigation to dashboard\n    if (isRoutingError) {\n      const timer = setInterval(() => {\n        setCountdown(prev => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            navigate('/dashboard');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      \n      return () => clearInterval(timer);\n    }\n  }, [hasError, error, navigate]);\n  \n  const navigateToDashboard = () => {\n    navigate('/dashboard');\n  };\n  \n  return { countdown, navigateToDashboard };\n};","import type { ErrorInfo } from 'react';\nimport React, { useState } from 'react';\nimport { useErrorRecovery } from '../hooks/useErrorRecovery';\n\n \n\ninterface ErrorFallbackProps {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n  errorCount: number;\n  onReset: () => void;\n}\n\nexport const ErrorFallback: React.FC<ErrorFallbackProps> = ({\n  error,\n  errorInfo: _errorInfo,\n  errorCount,\n  onReset\n}) => {\n  const { countdown, navigateToDashboard } = useErrorRecovery(true, error);\n  const [showDetails, setShowDetails] = useState(false);\n\n  // Determine if this is a critical error or something we can recover from\n  const isCriticalError = errorCount > 3 || error?.message?.includes('critical');\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n      <div className=\"max-w-lg w-full bg-white rounded-lg shadow-lg p-6 text-center\">\n        <div className=\"mb-4\">\n          <div className=\"mx-auto w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mb-4\">\n            <svg className=\"w-8 h-8 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            {isCriticalError ? 'Critical Error' : 'Something went wrong'}\n          </h2>\n          <p className=\"text-gray-600 mb-4\">\n            {isCriticalError\n              ? 'A critical error has occurred. Please refresh the page or contact support.'\n              : 'Don\\'t worry, we\\'re working on fixing this issue.'}\n          </p>\n        </div>\n\n        {error && (\n          <div className=\"mb-4 text-left\">\n            <button\n              onClick={() => setShowDetails(!showDetails)}\n              className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n            >\n              {showDetails ? 'Hide' : 'Show'} Error Details\n            </button>\n            {showDetails && (\n              <div className=\"mt-2 p-3 bg-gray-100 rounded text-sm text-gray-700\">\n                <p><strong>Error:</strong> {error.message}</p>\n                {error.stack && (\n                  <details className=\"mt-2\">\n                    <summary className=\"cursor-pointer text-gray-600\">Stack Trace</summary>\n                    <pre className=\"mt-1 text-xs whitespace-pre-wrap break-all\">\n                      {error.stack}\n                    </pre>\n                  </details>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n          <button\n            onClick={onReset}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n          >\n            Try Again\n          </button>\n          <button\n            onClick={navigateToDashboard}\n            className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400 transition-colors\"\n          >\n            Go to Dashboard\n          </button>\n        </div>\n\n        {countdown > 0 && (\n          <p className=\"mt-4 text-sm text-gray-500\">\n            Automatically redirecting to dashboard in {countdown} seconds...\n          </p>\n        )}\n\n        {errorCount > 1 && (\n          <p className=\"mt-2 text-sm text-orange-600\">\n            Error occurred {errorCount} times\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","/**\n * Structured JSON Logger\n * Provides centralized logging with consistent formatting\n */\nclass Logger {\n    constructor() {\n        // Determine environment based on available globals\n        // Default to development for safety\n        this.isDevelopment = true;\n        this.version = '1.0.0';\n        this.environment = 'development';\n        // Try to detect environment from various sources\n        try {\n            // Check if we're in a browser with Vite\n            if (typeof window !== 'undefined' && window.__VITE_DEV__) {\n                this.isDevelopment = true;\n                this.environment = 'development';\n            }\n            // Check for Node.js production indicators\n            else if (typeof globalThis !== 'undefined') {\n                const nodeEnv = globalThis.process?.env?.NODE_ENV;\n                if (nodeEnv) {\n                    this.isDevelopment = nodeEnv === 'development';\n                    this.environment = nodeEnv;\n                }\n            }\n        }\n        catch (e) {\n            // Fall back to defaults if environment detection fails\n            console.warn('Failed to detect environment, using development defaults');\n        }\n    }\n    createLogEntry(level, message, context, error) {\n        const entry = {\n            level,\n            message,\n            timestamp: new Date().toISOString(),\n            environment: this.environment,\n            version: this.version,\n        };\n        if (context) {\n            entry.context = context;\n        }\n        if (error) {\n            entry.error = {\n                name: error.name,\n                message: error.message,\n                stack: error.stack,\n            };\n        }\n        // Add browser context in browser environment\n        if (typeof window !== 'undefined') {\n            entry.userAgent = navigator.userAgent;\n            entry.url = window.location.href;\n        }\n        return entry;\n    }\n    logToConsole(entry) {\n        const { level, message, context, error } = entry;\n        if (this.isDevelopment) {\n            // Development: Pretty formatting with colors\n            const timestamp = new Date(entry.timestamp).toLocaleTimeString();\n            const levelEmoji = {\n                debug: '🐛',\n                info: 'ℹ️',\n                warn: '⚠️',\n                error: '❌',\n                critical: '🚨'\n            }[level];\n            console.group(`${levelEmoji} [${timestamp}] ${message}`);\n            if (context) {\n                console.log('Context:', context);\n            }\n            if (error) {\n                console.error('Error:', error);\n            }\n            console.groupEnd();\n        }\n        else {\n            // Production: Structured JSON\n            console.log(JSON.stringify(entry));\n        }\n    }\n    async logToServer(entry) {\n        // Only log errors and above to server in production\n        if (!this.isDevelopment && ['error', 'critical'].includes(entry.level)) {\n            try {\n                // In a real application, this would send to your logging service\n                await fetch('/api/logs', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(entry),\n                });\n            }\n            catch (error) {\n                // Silently fail - don't create logging loops\n                console.error('Failed to log to server:', error);\n            }\n        }\n    }\n    log(level, message, context, error) {\n        const entry = this.createLogEntry(level, message, context, error);\n        this.logToConsole(entry);\n        this.logToServer(entry);\n        // Store critical errors in localStorage for debugging\n        if (level === 'critical' || level === 'error') {\n            try {\n                const errorLog = JSON.parse(localStorage.getItem('errorLog') || '[]');\n                errorLog.push(entry);\n                // Keep only last 50 errors\n                if (errorLog.length > 50) {\n                    errorLog.shift();\n                }\n                localStorage.setItem('errorLog', JSON.stringify(errorLog));\n            }\n            catch (storageError) {\n                console.error('Failed to store error log:', storageError);\n            }\n        }\n    }\n    debug(message, context) {\n        this.log('debug', message, context);\n    }\n    info(message, context) {\n        this.log('info', message, context);\n    }\n    warn(message, context) {\n        this.log('warn', message, context);\n    }\n    error(message, error, context) {\n        this.log('error', message, context, error);\n    }\n    critical(message, error, context) {\n        this.log('critical', message, context, error);\n    }\n    // Performance logging\n    time(label) {\n        if (this.isDevelopment) {\n            console.time(label);\n        }\n    }\n    timeEnd(label, context) {\n        if (this.isDevelopment) {\n            console.timeEnd(label);\n        }\n        this.info(`Performance: ${label} completed`, context);\n    }\n    // API request logging\n    apiRequest(method, url, context) {\n        this.info(`API ${method} ${url}`, {\n            ...context,\n            component: 'api',\n            action: 'request',\n        });\n    }\n    apiResponse(method, url, status, duration, context) {\n        const level = status >= 400 ? 'error' : status >= 300 ? 'warn' : 'info';\n        this.log(level, `API ${method} ${url} ${status} (${duration}ms)`, {\n            ...context,\n            component: 'api',\n            action: 'response',\n            status,\n            duration,\n        });\n    }\n    // Trading-specific logging\n    tradeExecuted(trade, context) {\n        this.info('Trade executed', {\n            ...context,\n            component: 'trading',\n            action: 'trade_executed',\n            tradeId: trade.id,\n            pair: trade.pair,\n            side: trade.side,\n            amount: trade.amount,\n        });\n    }\n    strategyAction(strategyId, action, context) {\n        this.info(`Strategy ${action}`, {\n            ...context,\n            component: 'strategy',\n            action,\n            strategyId,\n        });\n    }\n    modelPrediction(modelName, prediction, confidence, context) {\n        this.info('Model prediction generated', {\n            ...context,\n            component: 'ml',\n            action: 'prediction',\n            modelName,\n            prediction,\n            confidence,\n        });\n    }\n    // Get stored error logs for debugging\n    getErrorLogs() {\n        try {\n            return JSON.parse(localStorage.getItem('errorLog') || '[]');\n        }\n        catch (error) {\n            return [];\n        }\n    }\n    // Clear stored error logs\n    clearErrorLogs() {\n        localStorage.removeItem('errorLog');\n    }\n}\n// Export singleton instance\nexport const logger = new Logger();\n// Export for testing\nexport { Logger };\n","import React, { Component, type ErrorInfo, type ReactNode } from 'react';\nimport { ErrorFallback } from './ErrorFallback';\nimport { logger } from '@shared/logger';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n  errorCount: number;\n  errorId: string;\n}\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: React.ComponentType<{\n    error: Error | null;\n    errorInfo: ErrorInfo | null;\n    errorCount: number;\n    onReset: () => void;\n  }>;\n}\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  private resetTimeoutId: ReturnType<typeof setTimeout> | null = null;\n  private onWindowError?: (event: ErrorEvent) => void;\n  private onUnhandledRejection?: (event: PromiseRejectionEvent) => void;\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorCount: 0,\n      errorId: ''\n    };\n  }\n\n  componentDidMount(): void {\n    // Capture errors thrown in event handlers or other async contexts\n    this.onWindowError = (event: ErrorEvent) => {\n      if (!this.state.hasError) {\n        this.setState({\n          hasError: true,\n          error: event.error instanceof Error ? event.error : new Error(event.message || 'Unknown error'),\n          errorInfo: null,\n          errorId: `error-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n        });\n      }\n    };\n\n    this.onUnhandledRejection = (event: PromiseRejectionEvent) => {\n      const reason = event.reason;\n      const err = reason instanceof Error ? reason : new Error(typeof reason === 'string' ? reason : 'Unhandled rejection');\n      if (!this.state.hasError) {\n        this.setState({\n          hasError: true,\n          error: err,\n          errorInfo: null,\n          errorId: `error-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n        });\n      }\n    };\n\n    if (typeof window.addEventListener === 'function') {\n      window.addEventListener('error', this.onWindowError as any);\n      window.addEventListener('unhandledrejection', this.onUnhandledRejection as unknown as EventListener);\n    }\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    return {\n      hasError: true,\n      error,\n      errorId: `error-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState(prevState => ({\n      errorInfo,\n      errorCount: prevState.errorCount + 1\n    }));\n\n    // Log error to monitoring service\n    this.logError(error, errorInfo);\n\n    // Auto-reset after 30 seconds for non-critical errors, but only for first few errors\n    if (this.state.errorCount < 3 && !this.isInitializationError(error))\n    {\n      this.resetTimeoutId = globalThis.setTimeout(() => {\n        this.handleReset();\n      }, 30000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.resetTimeoutId)\n    {\n      clearTimeout(this.resetTimeoutId);\n    }\n    if (typeof window.removeEventListener === 'function') {\n      if (this.onWindowError) {\n        window.removeEventListener('error', this.onWindowError as any);\n      }\n      if (this.onUnhandledRejection) {\n        window.removeEventListener('unhandledrejection', this.onUnhandledRejection as unknown as EventListener);\n      }\n    }\n  }\n\n  private logError = (error: Error, _errorInfo: ErrorInfo) => {\n    // Centralized logging\n    const context = {\n      component: 'ErrorBoundary',\n      errorCount: this.state.errorCount,\n      errorId: this.state.errorId,\n    } as const;\n\n    if (this.isInitializationError(error)) {\n      logger.critical('Initialization error detected - may require page refresh', error, context);\n    } else {\n      logger.error('ErrorBoundary caught an error', error, context);\n    }\n\n    // Hook: place to forward to monitoring service in production if needed\n    // e.g., send to Sentry/DataDog here using error and _errorInfo\n  };\n\n  private isInitializationError = (error: Error): boolean => {\n    const message = error.message || '';\n    return (\n      message.includes('Cannot access') && message.includes('before initialization') ||\n      message.includes('temporal dead zone') ||\n      message.includes('ReferenceError') ||\n      // React Error #185 - Maximum update depth exceeded (infinite loop)\n      message.includes('185') ||\n      message.includes('Maximum update depth exceeded') ||\n      message.includes('infinite') ||\n      message.includes('hydration') ||\n      message.includes('Text content does not match server-rendered HTML') ||\n      message.includes('Hydration failed')\n    );\n  };\n\n  private handleReset = () => {\n    if (this.resetTimeoutId)\n    {\n      clearTimeout(this.resetTimeoutId);\n      this.resetTimeoutId = null;\n    }\n\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: ''\n    });\n  };\n\n  render() {\n    if (this.state.hasError)\n    {\n      const FallbackComponent = this.props.fallback || ErrorFallback;\n\n      return (\n        <FallbackComponent\n          error={this.state.error}\n          errorInfo={this.state.errorInfo}\n          errorCount={this.state.errorCount}\n          onReset={this.handleReset}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  RefreshCw,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Settings,\n  ExternalLink\n} from 'lucide-react';\n\n \n\ninterface IntegrationStatus {\n  name: string;\n  status: 'connected' | 'disconnected' | 'error';\n  lastSync?: string;\n  message?: string;\n}\n\nconst Integration: React.FC = () => {\n  const [integrations, setIntegrations] = useState<IntegrationStatus[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState<string | null>(null);\n\n  const checkIntegrationStatus = async (name: string) => {\n    setRefreshing(name);\n\n    // Simulate API call\n    setTimeout(() => {\n      const mockIntegrations: IntegrationStatus[] = [\n        {\n          name: 'Poloniex API',\n          status: 'connected',\n          lastSync: new Date().toLocaleTimeString(),\n          message: 'Real-time data sync active'\n        },\n        {\n          name: 'TradingView',\n          status: 'connected',\n          lastSync: new Date().toLocaleTimeString(),\n          message: 'Chart data extraction active'\n        },\n        {\n          name: 'Chrome Extension',\n          status: 'disconnected',\n          message: 'Extension not detected'\n        }\n      ];\n\n      setIntegrations(mockIntegrations);\n      setIsLoading(false);\n      setRefreshing(null);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    checkIntegrationStatus('all');\n  }, []);\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n      case 'error':\n        return <AlertTriangle className=\"h-5 w-5 text-red-500\" />;\n      default:\n        return <XCircle className=\"h-5 w-5 text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return 'text-green-600';\n      case 'error':\n        return 'text-red-600';\n      default:\n        return 'text-gray-500';\n    }\n  };\n\n  const getStatusBg = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return 'bg-green-50 border-green-200';\n      case 'error':\n        return 'bg-red-50 border-red-200';\n      default:\n        return 'bg-gray-50 border-gray-200';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold\">Integration Status</h2>\n          <RefreshCw className=\"h-5 w-5 animate-spin text-blue-500\" />\n        </div>\n        <div className=\"space-y-3\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-semibold\">Integration Status</h2>\n        <button\n          onClick={() => checkIntegrationStatus('all')}\n          disabled={refreshing === 'all'}\n          className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-md transition-colors\"\n          title=\"Refresh all integrations\"\n        >\n          <RefreshCw className={`h-4 w-4 ${refreshing === 'all' ? 'animate-spin' : ''}`} />\n        </button>\n      </div>\n\n      <div className=\"space-y-4\">\n        {integrations.map((integration) => (\n          <div\n            key={integration.name}\n            className={`p-4 rounded-lg border ${getStatusBg(integration.status)}`}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                {getStatusIcon(integration.status)}\n                <div className=\"ml-3\">\n                  <h3 className=\"font-medium text-gray-900\">{integration.name}</h3>\n                  <p className={`text-sm ${getStatusColor(integration.status)}`}>\n                    {integration.message}\n                  </p>\n                </div>\n              </div>\n\n              <button\n                onClick={() => checkIntegrationStatus(integration.name)}\n                disabled={refreshing === integration.name}\n                className=\"p-1 text-gray-400 hover:text-gray-600\"\n                title={`Refresh ${integration.name}`}\n              >\n                <RefreshCw className={`h-4 w-4 ${refreshing === integration.name ? 'animate-spin' : ''}`} />\n              </button>\n            </div>\n\n            {integration.lastSync && (\n              <div className=\"mt-2 text-xs text-gray-500\">\n                Last sync: {integration.lastSync}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n        <div className=\"flex items-start\">\n          <Settings className=\"h-5 w-5 text-blue-500 mt-0.5\" />\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-blue-800\">Setup Instructions</h3>\n            <div className=\"mt-2 text-sm text-blue-700\">\n              <p>To enable all integrations:</p>\n              <ul className=\"list-disc pl-5 mt-1 space-y-1\">\n                <li>Install the Chrome extension from the Chrome Web Store</li>\n                <li>Add your Poloniex API credentials in Settings</li>\n                <li>Visit TradingView and enable the extension</li>\n                <li>Grant necessary permissions when prompted</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-4 flex justify-end\">\n        <a\n          href=\"https://docs.poloniex.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center text-sm text-blue-600 hover:text-blue-800\"\n        >\n          <ExternalLink className=\"h-4 w-4 mr-1\" />\n          View Documentation\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Integration;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport { X, CheckCircle, AlertCircle, AlertTriangle, Info } from 'lucide-react';\nimport { useAppStore } from '@/store';\nimport { clsx } from 'clsx';\n\nconst ToastContainer: React.FC = () => {\n  const toasts = useAppStore(state => state.toasts);\n  const removeToast = useAppStore(state => state.removeToast);\n  const autoRemovalTimers = useRef<Map<string, NodeJS.Timeout>>(new Map());\n\n  const scheduleAutoRemoval = useCallback((toastId: string) => {\n    // Clear existing timer if any\n    const existingTimer = autoRemovalTimers.current.get(toastId);\n    if (existingTimer) {\n      clearTimeout(existingTimer);\n    }\n\n    // Schedule new removal\n    const timer = setTimeout(() => {\n      removeToast(toastId);\n      autoRemovalTimers.current.delete(toastId);\n    }, 5000);\n\n    autoRemovalTimers.current.set(toastId, timer);\n  }, [removeToast]);\n\n  // Handle auto-removal for new toasts\n  useEffect(() => {\n    toasts.forEach(toast => {\n      if (toast.dismissible !== false && !autoRemovalTimers.current.has(toast.id)) {\n        scheduleAutoRemoval(toast.id);\n      }\n    });\n\n    // Clean up timers for removed toasts\n    const currentToastIds = new Set(toasts.map(t => t.id));\n    autoRemovalTimers.current.forEach((timer, toastId) => {\n      if (!currentToastIds.has(toastId)) {\n        clearTimeout(timer);\n        autoRemovalTimers.current.delete(toastId);\n      }\n    });\n  }, [toasts.length, scheduleAutoRemoval]); // Only depend on toasts.length to avoid infinite loops\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      autoRemovalTimers.current.forEach(timer => clearTimeout(timer));\n      autoRemovalTimers.current.clear();\n    };\n  }, []);\n\n  const getIcon = (type: string) => {\n    switch (type) {\n      case 'success':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'error':\n        return <AlertCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />;\n      case 'info':\n      default:\n        return <Info className=\"w-5 h-5 text-blue-500\" />;\n    }\n  };\n\n  const getToastStyles = (type: string) => {\n    const baseStyles = \"relative flex items-center p-4 mb-3 rounded-lg shadow-lg border transition-all duration-300 max-w-md\";\n    \n    switch (type) {\n      case 'success':\n        return clsx(baseStyles, \"bg-green-50 border-green-200 text-green-800\");\n      case 'error':\n        return clsx(baseStyles, \"bg-red-50 border-red-200 text-red-800\");\n      case 'warning':\n        return clsx(baseStyles, \"bg-yellow-50 border-yellow-200 text-yellow-800\");\n      case 'info':\n      default:\n        return clsx(baseStyles, \"bg-blue-50 border-blue-200 text-blue-800\");\n    }\n  };\n\n  if (toasts.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed top-20 right-4 z-30 space-y-2 max-w-md\">\n      {toasts.map((toast) => (\n        <div\n          key={toast.id}\n          className={getToastStyles(toast.type)}\n        >\n          <div className=\"flex items-start space-x-3 flex-1\">\n            {getIcon(toast.type)}\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium\">{toast.message}</p>\n            </div>\n          </div>\n          \n          {toast.dismissible !== false && (\n            <button\n              onClick={() => removeToast(toast.id)}\n              className=\"ml-3 flex-shrink-0 p-1 rounded-full hover:bg-gray-200 transition-colors\"\n              aria-label=\"Dismiss notification\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ToastContainer;","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ninterface RouteGuardProps {\n  children: React.ReactNode;\n}\n\n// Component to preserve navigation state and handle route transitions\nconst RouteGuard: React.FC<RouteGuardProps> = ({ children }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    // Add navigation state preservation logic here\n    // For now, we'll just log the route change in development\n    if (import.meta.env.DEV) {\n      console.info('Route changed to:', location.pathname);\n    }\n    \n    // Store current path in session storage for state preservation\n    sessionStorage.setItem('lastRoute', location.pathname);\n    \n    // Add route validation if needed\n    const validRoutes = [\n      '/', \n      '/strategies', \n      '/backtesting',\n      '/charts', \n      '/performance', \n      '/account', \n      '/transactions',\n      '/trades',\n      '/chat', \n      '/settings', \n      '/extension',\n      '/status',\n      '/login',\n      '/dashboard/live',\n      '/404'\n    ];\n    \n    // If route is not valid and not already a 404, redirect to 404\n    if (!validRoutes.includes(location.pathname) && location.pathname !== '/404') {\n      navigate('/404', { replace: true });\n    }\n  }, [location.pathname, navigate]);\n\n  return <>{children}</>;\n};\n\nexport default RouteGuard;","/**\n * Platform detection utilities for Chrome extension vs web environment\n */\n\n/**\n * Check if running in Chrome extension environment\n * More robust check that handles both extension and web contexts\n */\nexport const isChromeExtension = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  try {\n    return !!(\n      window.chrome &&\n      window.chrome.runtime &&\n      window.chrome.runtime.id &&\n      typeof window.chrome.runtime.sendMessage === 'function'\n    );\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Check if Chrome APIs are available (even if not in extension context)\n */\nexport const isChromeApiAvailable = (): boolean => {\n  if (typeof window === 'undefined') return false;\n  \n  try {\n    return !!(window.chrome && window.chrome.runtime);\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Get Chrome runtime safely\n */\nexport const getChromeRuntime = (): typeof chrome.runtime | null => {\n  if (!isChromeApiAvailable()) return null;\n  return (window as any).chrome?.runtime || null;\n};\n\n/**\n * Get Chrome tabs API safely  \n */\nexport const getChromeTabs = (): typeof chrome.tabs | null => {\n  if (!isChromeApiAvailable()) return null;\n  return (window as any).chrome?.tabs || null;\n};","/* eslint-disable no-console */\n/**\n * Handles browser extension communication errors\n * These errors occur when extensions try to communicate but channels close prematurely\n */\n\nimport { isChromeApiAvailable, getChromeRuntime } from './chromeExtensionCheck';\n\nexport class ExtensionErrorHandler {\n  private static instance: ExtensionErrorHandler;\n  private errorCount = 0;\n  private maxErrors = 10;\n  private suppressErrors = false;\n  \n  private constructor() {\n    this.setupErrorInterceptor();\n  }\n  \n  static getInstance(): ExtensionErrorHandler {\n    if (!ExtensionErrorHandler.instance) {\n      ExtensionErrorHandler.instance = new ExtensionErrorHandler();\n    }\n    return ExtensionErrorHandler.instance;\n  }\n  \n  private setupErrorInterceptor(): void {\n    // Override console.error to filter extension errors\n    const originalError = console.error;\n    \n    console.error = (...args: unknown[]) => {\n      const errorMessage = args[0]?.toString() || '';\n      \n      // Check if this is an extension communication error\n      if (this.isExtensionError(errorMessage)) {\n        this.handleExtensionError(errorMessage);\n        \n        // Suppress the error if we've seen too many\n        if (this.suppressErrors || this.errorCount > this.maxErrors) {\n          return;\n        }\n      }\n\n      // Check if this is a React production error\n      if (this.isReactProductionError(errorMessage)) {\n        this.handleExtensionError(errorMessage);\n        return; // Don't call original console.error for React production errors\n      }\n      \n      // Call original console.error for other errors\n      originalError.apply(console, args);\n    };\n    \n    // Also handle unhandled promise rejections\n    window.addEventListener('unhandledrejection', (event) => {\n      if (this.isExtensionError(event.reason?.toString() || '')) {\n        event.preventDefault();\n        this.handleExtensionError(event.reason);\n      }\n    });\n  }\n  \n  private isExtensionError(message: string): boolean {\n    const extensionErrorPatterns = [\n      'listener indicated an asynchronous response',\n      'message channel closed',\n      'Extension context invalidated',\n      'Receiving end does not exist',\n      'Could not establish connection',\n      'chrome-extension'\n    ];\n    \n    return extensionErrorPatterns.some(pattern => \n      message.toLowerCase().includes(pattern.toLowerCase())\n    );\n  }\n\n  private isReactProductionError(message: string): boolean {\n    // Detect minified React errors that should be handled differently\n    const reactErrorPatterns = [\n      'Minified React error #185',\n      'visit https://react.dev/errors/185',\n      'use the non-minified dev environment for full errors'\n    ];\n    \n    return reactErrorPatterns.some(pattern => \n      message.toLowerCase().includes(pattern.toLowerCase())\n    );\n  }\n\n  private handleExtensionError(error: Error | string): void {\n    this.errorCount++;\n    \n    const errorMessage = typeof error === 'string' ? error : error.message || error.toString();\n    \n    // Handle React production errors differently\n    if (this.isReactProductionError(errorMessage)) {\n      // console.warn(\n      //   'React Error #185 detected: This is likely caused by maximum update depth exceeded. ' +\n      //   'Check for infinite re-renders in component state updates or useEffect dependencies.'\n      // );\n      // console.warn('Initialization error detected - this may require a page refresh');\n      return;\n    }\n    \n    // Log once every 10 errors to avoid spam\n    if (this.errorCount === 1 || this.errorCount % 10 === 0) {\n      console.warn(\n        `Browser extension communication error (${this.errorCount} occurrences). ` +\n        'This is likely caused by a browser extension and can be safely ignored.'\n      );\n    }\n    \n    // Start suppressing after too many errors\n    if (this.errorCount > this.maxErrors * 2) {\n      this.suppressErrors = true;\n      // console.warn('Suppressing further extension errors to reduce console noise.');\n    }\n  }\n  \n  reset(): void {\n    this.errorCount = 0;\n    this.suppressErrors = false;\n  }\n}\n\n/**\n * Browser compatibility and extension detection utilities\n */\nexport class BrowserCompatibility {\n  static isExtensionInstalled(extensionId?: string): boolean {\n    // Check for common extension indicators\n    const runtime = getChromeRuntime();\n    if (extensionId && runtime) {\n      try {\n        runtime.sendMessage(extensionId, { ping: true }, () => {\n          if (runtime.lastError) {\n            return false;\n          }\n          return true;\n        });\n      } catch {\n        return false;\n      }\n    }\n    \n    // Check for generic extension artifacts\n    return !!(\n      isChromeApiAvailable() ||\n      (window as unknown as { browser?: { runtime?: unknown } }).browser?.runtime\n    );\n  }\n  \n  static detectConflictingExtensions(): string[] {\n    const conflicts: string[] = [];\n    \n    // Check for known conflicting extensions\n    const conflictingExtensions = [\n      { name: 'MetaMask', check: () => !!(window as unknown as { ethereum?: unknown }).ethereum },\n      { name: 'AdBlock', check: () => !!(window as unknown as { adblockDetected?: unknown }).adblockDetected },\n      { name: 'React DevTools', check: () => !!(window as unknown as { __REACT_DEVTOOLS_GLOBAL_HOOK__?: unknown }).__REACT_DEVTOOLS_GLOBAL_HOOK__ },\n    ];\n    \n    conflictingExtensions.forEach(ext => {\n      if (ext.check()) {\n        conflicts.push(ext.name);\n      }\n    });\n    \n    return conflicts;\n  }\n  \n  static setupExtensionCompatibility(): void {\n    // Initialize error handler\n    ExtensionErrorHandler.getInstance();\n    \n    // Detect and warn about conflicts\n    const conflicts = this.detectConflictingExtensions();\n    if (conflicts.length > 0) {\n      console.info(\n        `Detected browser extensions: ${conflicts.join(', ')}. ` +\n        'Some console errors may appear due to extension communication.'\n      );\n    }\n    \n    // Set up message channel protection\n    this.protectMessageChannels();\n  }\n  \n  private static protectMessageChannels(): void {\n    // Wrap postMessage to handle closed channels gracefully\n    const originalPostMessage = window.postMessage;\n    \n    window.postMessage = function(...args: Parameters<typeof originalPostMessage>) {\n      try {\n        return originalPostMessage.apply(window, args);\n      } catch (error) {\n        if (error?.toString().includes('message channel closed')) {\n          // Silently ignore\n          return;\n        }\n        throw error;\n      }\n    };\n  }\n}","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { lazy, Suspense, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport SkipLinks from './components/SkipLinks';\nimport ConnectionHealth from './components/ConnectionHealth';\n\nimport { EnvDebug } from './components/EnvDebug';\nimport { ConnectionTest } from './components/ConnectionTest';\nimport PWAInstallPrompt from './components/PWAInstallPrompt';\nimport { TradingProvider } from './context/TradingContext';\nimport { SettingsProvider } from './context/SettingsContext';\nimport { WebSocketProvider } from './context/WebSocketContext';\nimport { AuthProvider } from './context/AuthContext';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport Integration from './components/Integration';\nimport ToastContainer from './components/ToastContainer';\nimport RouteGuard from './components/RouteGuard';\nimport { BrowserCompatibility } from './utils/extensionErrorHandler';\nimport './styles/theme.css';\nimport './App.css';\n\n// Lazy load page components\nconst Dashboard = lazy(() => import('./pages/Dashboard'));\nconst LiveTradingDashboard = lazy(() => import('./pages/LiveTradingDashboard'));\nconst Strategies = lazy(() => import('./pages/Strategies'));\nconst Backtesting = lazy(() => import('./pages/Backtesting'));\nconst Account = lazy(() => import('./pages/Account'));\nconst TransactionHistory = lazy(() => import('./pages/TransactionHistory'));\nconst TradeHistory = lazy(() => import('./pages/TradeHistory'));\nconst MarketAnalysis = lazy(() => import('./pages/MarketAnalysis'));\nconst Performance = lazy(() => import('./pages/Performance'));\nconst Settings = lazy(() => import('./pages/Settings'));\nconst Chat = lazy(() => import('./pages/Chat'));\nconst ExtensionDownload = lazy(() => import('./pages/ExtensionDownload'));\nconst Status = lazy(() => import('./pages/Status'));\nconst Login = lazy(() => import('./pages/Login'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\n// Loading component\nconst LoadingSpinner = () => (\n  <div \n    className=\"flex items-center justify-center min-h-screen\"\n    role=\"status\"\n    aria-label=\"Loading application\"\n  >\n    <div \n      className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"\n      aria-hidden=\"true\"\n    ></div>\n    <span className=\"sr-only\">Loading...</span>\n  </div>\n);\n\nfunction App() {\n  useEffect(() => {\n    BrowserCompatibility.setupExtensionCompatibility();\n    \n    const darkMode = (window as any).useAppStore?.getState?.()?.ui?.darkMode;\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    }\n  }, []);\n\n  return (\n    <>\n      <SkipLinks />\n      <Router>\n        <ErrorBoundary>\n          <AuthProvider>\n            <SettingsProvider>\n              <WebSocketProvider>\n                <TradingProvider>\n                <div className=\"flex h-screen bg-neutral-100 overflow-hidden\">\n                  <Sidebar />\n                  <div className=\"flex-1 flex flex-col min-w-0\">\n                    <Navbar />\n                    <main \n                      id=\"main-content\"\n                      className=\"flex-1 overflow-y-auto bg-neutral-100 p-4 sm:p-6 lg:p-8\"\n                      role=\"main\"\n                      aria-label=\"Main content\"\n                      tabIndex={-1}\n                    >\n                      <RouteGuard>\n                        <Suspense fallback={<LoadingSpinner />}>\n                          <Routes>\n                            <Route path=\"/\" element={<Dashboard />} />\n                            <Route path=\"/dashboard/live\" element={<LiveTradingDashboard />} />\n                            <Route path=\"/strategies\" element={<Strategies />} />\n                            <Route path=\"/backtesting\" element={<Backtesting />} />\n                            <Route path=\"/charts\" element={<MarketAnalysis />} />\n                            <Route path=\"/performance\" element={<Performance />} />\n                            <Route path=\"/account\" element={<Account />} />\n                            <Route path=\"/transactions\" element={<TransactionHistory />} />\n                            <Route path=\"/trades\" element={<TradeHistory />} />\n                            <Route path=\"/chat\" element={<Chat />} />\n                            <Route path=\"/settings\" element={<Settings />} />\n                            <Route path=\"/extension\" element={<ExtensionDownload />} />\n                            <Route path=\"/status\" element={<Status />} />\n                            <Route path=\"/login\" element={<Login />} />\n                            <Route path=\"/404\" element={<NotFound />} />\n                            <Route path=\"*\" element={<NotFound />} />\n                          </Routes>\n                        </Suspense>\n                      </RouteGuard>\n                    </main>\n                  </div>\n                </div>\n                <Integration />\n                <ToastContainer />\n\n                <ConnectionHealth />\n                <EnvDebug />\n                <ConnectionTest />\n                <PWAInstallPrompt />\n                </TradingProvider>\n              </WebSocketProvider>\n            </SettingsProvider>\n          </AuthProvider>\n        </ErrorBoundary>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'  // ✅ Must be imported\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"file":"index-CKZf6eLu.js"}