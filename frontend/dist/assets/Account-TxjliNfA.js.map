{"version":3,"file":"Account-TxjliNfA.js","sources":["../../src/services/poloniexFuturesAPI.ts","../../src/components/account/TransactionHistory.tsx","../../src/components/account/ApiKeyManagement.tsx","../../src/pages/Account.tsx"],"sourcesContent":["import {\n  getApiBaseUrl,\n  getPoloniexApiKey,\n  getPoloniexApiSecret,\n} from \"@/utils/environment\";\nimport crypto from \"crypto\";\n\n/**\n * Resolve Poloniex Futures REST base and API prefix\n * We avoid brittle string replaces and instead derive a canonical host + prefix.\n * Docs reference paths like: /v3/futures/api/market/get-*\n * - For hosts under api.poloniex.com we use baseHost=https://api.poloniex.com and apiPrefix=/v3/futures/api\n * - If a custom base explicitly targets a futures host, we fall back to /v3 by default\n */\nconst RAW_BASE = getApiBaseUrl(\"futures\");\nfunction resolveFuturesBase(raw: string): { baseHost: string; apiPrefix: string } {\n  try {\n    const u = new URL(raw);\n    const host = u.origin; // protocol + host\n\n    // Primary: standard API host\n    if (host.includes(\"api.poloniex.com\")) {\n      return { baseHost: \"https://api.poloniex.com\", apiPrefix: \"/v3/futures/api\" };\n    }\n\n    // Secondary: futures-dedicated host\n    if (host.includes(\"futures-api.poloniex.com\")) {\n      // Some deployments use /v3 on this host\n      return { baseHost: host, apiPrefix: \"/v3\" };\n    }\n\n    // Fallback: default to api.poloniex.com\n    return { baseHost: \"https://api.poloniex.com\", apiPrefix: \"/v3/futures/api\" };\n  } catch {\n    // If RAW_BASE isn't a valid URL, use canonical default\n    return { baseHost: \"https://api.poloniex.com\", apiPrefix: \"/v3/futures/api\" };\n  }\n}\n\n// Always use backend proxy to avoid CORS issues\nconst BASE_HOST = \"\";\nconst API_PREFIX = \"/api/futures\";\n\n// Normalize symbol (UI uses BTC-USDT; API commonly expects BTCUSDT)\nconst normalizeFuturesSymbol = (sym?: string): string | undefined => {\n  if (!sym) return sym;\n  return sym.replace(/-/g, \"\").toUpperCase();\n};\n\n// API endpoints (aligned to documented futures routes)\nconst ENDPOINTS = {\n  // Account / positions / trading (authenticated)\n  ACCOUNT_BALANCE: `${API_PREFIX}/account/balance`,\n  ACCOUNT_BILLS: `${API_PREFIX}/account/bills`,\n  CURRENT_POSITIONS: `${API_PREFIX}/trade/position/opens`,\n  POSITION_HISTORY: `${API_PREFIX}/trade/position/history`,\n  ADJUST_MARGIN: `${API_PREFIX}/position/margin`,\n  GET_LEVERAGES: `${API_PREFIX}/account/leverage-info`,\n  SET_LEVERAGE: `${API_PREFIX}/trade/set-leverage`,\n  SWITCH_POSITION_MODE: `${API_PREFIX}/position/mode`,\n  VIEW_POSITION_MODE: `${API_PREFIX}/position/mode-info`,\n  PLACE_ORDER: `${API_PREFIX}/trade/order`,\n  CANCEL_ORDER: `${API_PREFIX}/trade/cancel-order`,\n  CANCEL_ALL_ORDERS: `${API_PREFIX}/trade/cancel-all-orders`,\n  ORDER_HISTORY: `${API_PREFIX}/trade/history-orders`,\n  OPEN_ORDERS: `${API_PREFIX}/trade/open-orders`,\n\n  // Market data (public)\n  // Use \"get-trading-info\" for 24h stats/last price\n  MARKET_TICKER: `${API_PREFIX}/market/get-trading-info`,\n  // Klines/candles\n  MARKET_KLINES: `${API_PREFIX}/market/get-kline-data`,\n  // Order book (Level 2)\n  MARKET_DEPTH: `${API_PREFIX}/market/get-order-book`,\n  // Recent executions/trades\n  MARKET_TRADES: `${API_PREFIX}/market/get-execution-info`,\n  // Funding rate\n  MARKET_FUNDING_RATE: `${API_PREFIX}/market/get-funding-rate`,\n};\n\n// Enums\nexport enum PositionMode {\n  HEDGE = \"HEDGE\",\n  ONE_WAY = \"ONE_WAY\",\n}\n\nexport enum PositionSide {\n  LONG = \"LONG\",\n  SHORT = \"SHORT\",\n  BOTH = \"BOTH\",\n}\n\nexport enum MarginMode {\n  ISOLATED = \"ISOLATED\",\n  CROSS = \"CROSS\",\n}\n\nexport enum OrderType {\n  LIMIT = \"LIMIT\",\n  MARKET = \"MARKET\",\n  POST_ONLY = \"POST_ONLY\",\n  FOK = \"FOK\",\n  IOC = \"IOC\",\n}\n\nexport enum OrderSide {\n  BUY = \"BUY\",\n  SELL = \"SELL\",\n}\n\nexport enum PositionStatus {\n  NORMAL = \"NORMAL\",\n  LIQ = \"LIQ\",\n  ADL = \"ADL\",\n}\n\n// Interfaces\nexport interface AccountBill {\n  billId: string;\n  symbol: string;\n  currency: string;\n  amount: string;\n  balance: string;\n  type: string;\n  ts: number;\n}\n\nexport interface PositionHistory {\n  symbol: string;\n  side: OrderSide;\n  posSide: PositionSide;\n  mgnMode: MarginMode;\n  openAvgPx: string;\n  closeAvgPx: string;\n  qty: string;\n  lever: string;\n  openTime: number;\n  closeTime: number;\n  pnl: string;\n  state: string;\n}\n\nexport interface LeverageInfo {\n  symbol: string;\n  leverage: string;\n  maxLeverage: string;\n}\n\nexport interface OrderResponse {\n  orderId: string;\n  clientOrderId?: string;\n  symbol: string;\n  side: OrderSide;\n  type: OrderType;\n  price: string;\n  size: string;\n  filledSize: string;\n  filledValue: string;\n  state: string;\n  createTime: number;\n  updateTime: number;\n}\n\nexport interface GenericApiResponse {\n  code: string;\n  msg: string;\n  data: Record<string, unknown>;\n}\n\nexport interface MarketTicker {\n  symbol: string;\n  last: string;\n  bestAsk: string;\n  bestBid: string;\n  high24h: string;\n  low24h: string;\n  volume24h: string;\n  fundingRate: string;\n  nextFundingTime: number;\n}\n\nexport interface MarketKline {\n  ts: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n}\n\nexport interface MarketDepth {\n  asks: [string, string][];\n  bids: [string, string][];\n  ts: number;\n}\n\nexport interface MarketTrade {\n  ts: number;\n  price: string;\n  size: string;\n  side: OrderSide;\n}\n\nexport interface FundingRate {\n  symbol: string;\n  fundingRate: string;\n  nextFundingTime: number;\n}\n\nexport interface FuturesPosition {\n  symbol: string;\n  side: OrderSide;\n  mgnMode: MarginMode;\n  posSide: PositionSide;\n  openAvgPx: string;\n  qty: string;\n  availQty: string;\n  lever: string;\n  adl: string;\n  liqPx: string;\n  im: string;\n  mm: string;\n  mgn: string;\n  maxWAmt: string;\n  upl: string;\n  uplRatio: string;\n  pnl: string;\n  markPx: string;\n  mgnRatio: string;\n  state: PositionStatus;\n}\n\nexport interface FuturesAccountBalance {\n  state: string;\n  eq: string;\n  isoEq: string;\n  im: string;\n  mm: string;\n}\n\nexport interface FuturesOrder {\n  id: string;\n  symbol: string;\n  side: OrderSide;\n  type: OrderType;\n  price: string;\n  size: string;\n  value: string;\n  leverage: string;\n  marginMode: MarginMode;\n  positionSide: PositionSide;\n  state: string;\n  createTime: number;\n  updateTime: number;\n  filledSize: string;\n  filledValue: string;\n  avgPrice: string;\n  fee: string;\n  clientOrderId?: string;\n}\n\n// Generate HMAC-SHA256 signature\nconst generateSignature = (\n  timestamp: string,\n  method: string,\n  requestPath: string,\n  body: string = \"\"\n): string => {\n  const apiSecret = getPoloniexApiSecret();\n  if (!apiSecret) {\n    throw new Error(\"VITE_POLONIEX_API_SECRET is not defined\");\n  }\n  const message = timestamp + method + requestPath + body;\n  return crypto\n    .createHmac(\"sha256\", apiSecret)\n    .update(message)\n    .digest(\"base64\");\n};\n\n// Create auth headers\nconst createAuthHeaders = (\n  method: string,\n  endpoint: string,\n  body: string = \"\"\n): Record<string, string> => {\n  const apiKey = getPoloniexApiKey();\n  if (!apiKey) {\n    throw new Error(\"VITE_POLONIEX_API_KEY is not defined\");\n  }\n  const timestamp = Date.now().toString();\n  const signature = generateSignature(timestamp, method, endpoint, body);\n  return {\n    \"Content-Type\": \"application/json\",\n    \"PF-API-KEY\": apiKey,\n    \"PF-API-SIGN\": signature,\n    \"PF-API-TIMESTAMP\": timestamp,\n  };\n};\n\n// Main API class\nclass PoloniexFuturesAPI {\n  private baseHost: string;\n  private mockMode: boolean;\n\n  constructor(mockMode = false) {\n    this.baseHost = BASE_HOST;\n    this.mockMode = mockMode;\n  }\n\n  private async request<T>(\n    method: string,\n    endpoint: string,\n    params: Record<string, unknown> = {},\n    authenticated = true\n  ): Promise<T> {\n    if (this.mockMode) {\n      return this.mockResponse<T>(endpoint, params);\n    }\n\n    const url = new URL(this.baseHost + endpoint);\n    let body = \"\";\n\n    if (method === \"GET\" && Object.keys(params).length > 0) {\n      Object.keys(params).forEach((key) => {\n        if (params[key] !== undefined) {\n          url.searchParams.append(key, String(params[key]));\n        }\n      });\n    } else if (method !== \"GET\" && Object.keys(params).length > 0) {\n      body = JSON.stringify(params);\n    }\n\n    const headers = authenticated\n      ? createAuthHeaders(method, endpoint, body)\n      : { \"Content-Type\": \"application/json\" };\n\n    const response = await fetch(url.toString(), {\n      method,\n      headers,\n      body: method !== \"GET\" ? body : undefined,\n    });\n\n    // Determine response content type up-front\n    const contentType = response.headers.get(\"content-type\") || \"\";\n\n    // Handle non-OK responses with robust parsing\n    if (!response.ok) {\n      // Try to parse JSON error first, otherwise capture text snippet\n      let errorPayload: unknown = {};\n      if (contentType.includes(\"application/json\")) {\n        errorPayload = await response.json().catch(() => ({}));\n      } else {\n        const text = await response.text().catch(() => \"\");\n        errorPayload = { status: response.status, url: url.toString(), preview: text?.slice(0, 200) };\n      }\n      throw new Error(`API error (${response.status}) from ${url.toString()}: ${JSON.stringify(errorPayload)}`);\n    }\n\n    // Guard: successful but non-JSON (e.g., HTML index.html) should not be parsed as JSON\n    if (!contentType.includes(\"application/json\")) {\n      const text = await response.text().catch(() => \"\");\n      throw new Error(\n        `Non-JSON response (${response.status}) from ${url.toString()}: ${text?.slice(0, 200)}`\n      );\n    }\n\n    return (await response.json()) as T;\n  }\n\n  private mockResponse<T>(\n    endpoint: string,\n    params: Record<string, unknown>\n  ): Promise<T> {\n    let mockData: T;\n\n    switch (endpoint) {\n      case ENDPOINTS.ACCOUNT_BALANCE:\n        mockData = {\n          state: \"NORMAL\",\n          eq: \"10000.00\",\n          isoEq: \"5000.00\",\n          im: \"1000.00\",\n          mm: \"500.00\",\n        } as T;\n        break;\n\n      case ENDPOINTS.CURRENT_POSITIONS:\n        mockData = [\n          {\n            symbol: \"BTC-USDT\",\n            side: OrderSide.BUY,\n            mgnMode: MarginMode.ISOLATED,\n            posSide: PositionSide.LONG,\n            openAvgPx: \"50000.00\",\n            qty: \"0.1\",\n            availQty: \"0.1\",\n            lever: \"10\",\n            adl: \"1\",\n            liqPx: \"45000.00\",\n            im: \"500.00\",\n            mm: \"250.00\",\n            mgn: \"500.00\",\n            maxWAmt: \"4500.00\",\n            upl: \"100.00\",\n            uplRatio: \"0.02\",\n            pnl: \"100.00\",\n            markPx: \"51000.00\",\n            mgnRatio: \"0.05\",\n            state: PositionStatus.NORMAL,\n          },\n        ] as T;\n        break;\n\n      case ENDPOINTS.VIEW_POSITION_MODE:\n        mockData = { posMode: PositionMode.ONE_WAY } as T;\n        break;\n\n      case ENDPOINTS.GET_LEVERAGES:\n        mockData = {\n          symbol: String(params.symbol || \"BTC-USDT\"),\n          leverage: \"10\",\n          maxLeverage: \"75\",\n        } as T;\n        break;\n\n      case ENDPOINTS.OPEN_ORDERS:\n        mockData = [] as T;\n        break;\n\n      case ENDPOINTS.MARKET_TICKER:\n        mockData = {\n          symbol: String(params.symbol || \"BTC-USDT\"),\n          last: \"50000.00\",\n          bestAsk: \"50010.00\",\n          bestBid: \"49990.00\",\n          high24h: \"51000.00\",\n          low24h: \"49000.00\",\n          volume24h: \"1000.00\",\n          fundingRate: \"0.0001\",\n          nextFundingTime: Date.now() + 8 * 60 * 60 * 1000,\n        } as T;\n        break;\n\n      case ENDPOINTS.MARKET_KLINES:\n        mockData = [\n          {\n            ts: Date.now(),\n            open: \"50000.00\",\n            high: \"50200.00\",\n            low: \"49900.00\",\n            close: \"50050.00\",\n            volume: \"100.00\",\n          },\n        ] as T;\n        break;\n\n      case ENDPOINTS.MARKET_DEPTH:\n        mockData = {\n          asks: [\n            [\"50010.00\", \"10.00\"],\n            [\"50020.00\", \"20.00\"],\n          ],\n          bids: [\n            [\"49990.00\", \"15.00\"],\n            [\"49980.00\", \"25.00\"],\n          ],\n          ts: Date.now(),\n        } as T;\n        break;\n\n      case ENDPOINTS.MARKET_TRADES:\n        mockData = [\n          {\n            ts: Date.now(),\n            price: \"50000.00\",\n            size: \"0.1\",\n            side: OrderSide.BUY,\n          },\n        ] as T;\n        break;\n\n      case ENDPOINTS.MARKET_FUNDING_RATE:\n        mockData = {\n          symbol: String(params.symbol || \"BTC-USDT\"),\n          fundingRate: \"0.0001\",\n          nextFundingTime: Date.now() + 8 * 60 * 60 * 1000,\n        } as T;\n        break;\n\n      default:\n        mockData = {} as T;\n    }\n\n    return Promise.resolve(mockData);\n  }\n\n  // Account endpoints\n  async getAccountBalance(): Promise<FuturesAccountBalance> {\n    return this.request<FuturesAccountBalance>(\n      \"GET\",\n      ENDPOINTS.ACCOUNT_BALANCE\n    );\n  }\n\n  async getAccountBills(params: {\n    symbol?: string;\n    startTime?: number;\n    endTime?: number;\n    limit?: number;\n  }): Promise<AccountBill[]> {\n    return this.request<AccountBill[]>(\"GET\", ENDPOINTS.ACCOUNT_BILLS, params);\n  }\n\n  // Position endpoints\n  async getCurrentPositions(symbol?: string): Promise<FuturesPosition[]> {\n    return this.request<FuturesPosition[]>(\"GET\", ENDPOINTS.CURRENT_POSITIONS, {\n      symbol,\n    });\n  }\n\n  async getPositionHistory(params: {\n    symbol?: string;\n    startTime?: number;\n    endTime?: number;\n    limit?: number;\n  }): Promise<PositionHistory[]> {\n    return this.request<PositionHistory[]>(\n      \"GET\",\n      ENDPOINTS.POSITION_HISTORY,\n      params\n    );\n  }\n\n  async adjustMargin(params: {\n    symbol: string;\n    posSide: PositionSide;\n    amount: string;\n  }): Promise<GenericApiResponse> {\n    return this.request<GenericApiResponse>(\n      \"POST\",\n      ENDPOINTS.ADJUST_MARGIN,\n      params\n    );\n  }\n\n  async getLeverages(symbol: string): Promise<LeverageInfo> {\n    return this.request<LeverageInfo>(\"GET\", ENDPOINTS.GET_LEVERAGES, {\n      symbol,\n    });\n  }\n\n  async setLeverage(params: {\n    symbol: string;\n    lever: string;\n    mgnMode: MarginMode;\n  }): Promise<GenericApiResponse> {\n    return this.request<GenericApiResponse>(\n      \"POST\",\n      ENDPOINTS.SET_LEVERAGE,\n      params\n    );\n  }\n\n  async switchPositionMode(posMode: PositionMode): Promise<GenericApiResponse> {\n    return this.request<GenericApiResponse>(\n      \"POST\",\n      ENDPOINTS.SWITCH_POSITION_MODE,\n      { posMode }\n    );\n  }\n\n  async getPositionMode(): Promise<{ posMode: PositionMode }> {\n    return this.request<{ posMode: PositionMode }>(\n      \"GET\",\n      ENDPOINTS.VIEW_POSITION_MODE\n    );\n  }\n\n  // Trading endpoints\n  async placeOrder(params: {\n    symbol: string;\n    side: OrderSide;\n    type: OrderType;\n    price?: string;\n    size: string;\n    posSide: PositionSide;\n    clientOrderId?: string;\n  }): Promise<OrderResponse> {\n    return this.request<OrderResponse>(\"POST\", ENDPOINTS.PLACE_ORDER, params);\n  }\n\n  async cancelOrder(params: {\n    symbol: string;\n    orderId: string;\n  }): Promise<OrderResponse> {\n    return this.request<OrderResponse>(\"POST\", ENDPOINTS.CANCEL_ORDER, params);\n  }\n\n  async cancelAllOrders(symbol?: string): Promise<GenericApiResponse> {\n    return this.request<GenericApiResponse>(\n      \"POST\",\n      ENDPOINTS.CANCEL_ALL_ORDERS,\n      { symbol }\n    );\n  }\n\n  async getOrderHistory(params: {\n    symbol?: string;\n    startTime?: number;\n    endTime?: number;\n    limit?: number;\n  }): Promise<FuturesOrder[]> {\n    return this.request<FuturesOrder[]>(\"GET\", ENDPOINTS.ORDER_HISTORY, params);\n  }\n\n  async getOpenOrders(symbol?: string): Promise<FuturesOrder[]> {\n    return this.request<FuturesOrder[]>(\"GET\", ENDPOINTS.OPEN_ORDERS, {\n      symbol,\n    });\n  }\n\n  // Market data endpoints\n  async getMarketTicker(symbol: string): Promise<MarketTicker> {\n    return this.request<MarketTicker>(\n      \"GET\",\n      ENDPOINTS.MARKET_TICKER,\n      { symbol: normalizeFuturesSymbol(symbol) },\n      false\n    );\n  }\n\n  async getMarketKlines(params: {\n    symbol: string;\n    interval: string;\n    startTime?: number;\n    endTime?: number;\n    limit?: number;\n  }): Promise<MarketKline[]> {\n    const payload = {\n      ...params,\n      symbol: normalizeFuturesSymbol(params.symbol),\n    };\n    return this.request<MarketKline[]>(\n      \"GET\",\n      ENDPOINTS.MARKET_KLINES,\n      payload,\n      false\n    );\n  }\n\n  async getMarketDepth(params: {\n    symbol: string;\n    limit?: number;\n  }): Promise<MarketDepth> {\n    const payload = {\n      ...params,\n      symbol: normalizeFuturesSymbol(params.symbol),\n    };\n    return this.request<MarketDepth>(\n      \"GET\",\n      ENDPOINTS.MARKET_DEPTH,\n      payload,\n      false\n    );\n  }\n\n  async getMarketTrades(params: {\n    symbol: string;\n    limit?: number;\n  }): Promise<MarketTrade[]> {\n    const payload = {\n      ...params,\n      symbol: normalizeFuturesSymbol(params.symbol),\n    };\n    return this.request<MarketTrade[]>(\n      \"GET\",\n      ENDPOINTS.MARKET_TRADES,\n      payload,\n      false\n    );\n  }\n\n  async getMarketFundingRate(symbol: string): Promise<FundingRate> {\n    return this.request<FundingRate>(\n      \"GET\",\n      ENDPOINTS.MARKET_FUNDING_RATE,\n      { symbol: normalizeFuturesSymbol(symbol) },\n      false\n    );\n  }\n}\n\nexport default PoloniexFuturesAPI;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Download, Upload, RefreshCw, Search, Filter, Download as DownloadIcon } from 'lucide-react';\nimport PoloniexFuturesAPI, { AccountBill } from '../../services/poloniexFuturesAPI';\n\nconst TransactionHistory: React.FC = () => {\n  const [filter, setFilter] = useState<'all' | 'deposit' | 'withdrawal' | 'trade'>('all');\n  const [dateRange, setDateRange] = useState<'all' | 'week' | 'month' | 'quarter' | 'year'>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Format numbers for display\n  const formatCurrency = (value: number | string) => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(numValue);\n  };\n\n  // Format date for display\n  const formatDate = (timestamp: number | string) => {\n    try {\n      const date = new Date(typeof timestamp === 'string' ? parseInt(timestamp) : timestamp);\n      \n      // Check if date is valid\n      if (isNaN(date.getTime())) {\n        return 'Invalid Date';\n      }\n      \n      // Return formatted date and time\n      return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n    } catch (error) {\n      // console.error('Error formatting date:', error);\n      return 'Invalid Date';\n    }\n  };\n  \n  // Local state for transactions from API\n  const [rows, setRows] = useState<Array<{\n    id: string;\n    type: 'DEPOSIT' | 'WITHDRAWAL' | 'TRADE';\n    description: string;\n    amount: number;\n    status: 'COMPLETED' | 'PENDING' | 'FAILED';\n    timestamp: number;\n  }>>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Map AccountBill to UI row\n  const mapBillToRow = (b: AccountBill) => {\n    const typeMap: Record<string, 'DEPOSIT' | 'WITHDRAWAL' | 'TRADE'> = {\n      deposit: 'DEPOSIT',\n      withdrawal: 'WITHDRAWAL',\n      trade: 'TRADE',\n      fee: 'TRADE',\n      funding: 'TRADE',\n    };\n    const t = typeMap[b.type?.toLowerCase?.() || 'trade'] || 'TRADE';\n    return {\n      id: b.billId,\n      type: t,\n      description: `${b.symbol || b.currency || ''} ${b.type}`.trim(),\n      amount: parseFloat(b.amount || '0'),\n      status: 'COMPLETED' as const,\n      timestamp: typeof b.ts === 'number' && b.ts < 1e12 ? b.ts * 1000 : b.ts,\n    };\n  };\n\n  // Load transactions from API on mount and when dateRange changes (to reduce payload)\n  useEffect(() => {\n    let mounted = true;\n    const load = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const params: { startTime?: number; endTime?: number; limit?: number } = { limit: 200 };\n        const now = Date.now();\n        if (dateRange !== 'all') {\n          let start = 0;\n          if (dateRange === 'week') start = now - 7 * 24 * 60 * 60 * 1000;\n          else if (dateRange === 'month') start = new Date(new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate()).getTime();\n          else if (dateRange === 'quarter') start = new Date(new Date().getFullYear(), new Date().getMonth() - 3, new Date().getDate()).getTime();\n          else if (dateRange === 'year') start = new Date(new Date().getFullYear() - 1, new Date().getMonth(), new Date().getDate()).getTime();\n          params.startTime = start;\n          params.endTime = now;\n        }\n        const bills = await new PoloniexFuturesAPI().getAccountBills(params);\n        const mapped = bills.map(mapBillToRow);\n        if (mounted) setRows(mapped);\n      } catch (e) {\n        if (mounted) setError(e instanceof Error ? e.message : 'Failed to load transactions');\n      } finally {\n        if (mounted) setLoading(false);\n      }\n    };\n    load();\n    return () => {\n      mounted = false;\n    };\n  }, [dateRange]);\n\n  // Filter transactions\n  const filteredTransactions = useMemo(() => rows.filter(transaction => {\n    // Filter by type\n    if (filter !== 'all' && transaction.type.toLowerCase() !== filter.toLowerCase()) {\n      return false;\n    }\n    \n    // Filter by search query\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      return (\n        transaction.id.toLowerCase().includes(query) ||\n        transaction.description.toLowerCase().includes(query) ||\n        transaction.type.toLowerCase().includes(query) ||\n        transaction.status.toLowerCase().includes(query)\n      );\n    }\n    \n    return true;\n  }), [rows, filter, searchQuery]);\n  \n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex flex-col md:flex-row md:justify-between md:items-center space-y-4 md:space-y-0\">\n        <div className=\"flex space-x-2\">\n          <button \n            onClick={() => setFilter('all')} \n            className={`px-3 py-1.5 text-sm rounded-md ${\n              filter === 'all' \n                ? 'bg-blue-600 text-white' \n                : 'bg-neutral-100 text-neutral-700 hover:bg-neutral-200'\n            }`}\n          >\n            All\n          </button>\n          <button \n            onClick={() => setFilter('deposit')} \n            className={`px-3 py-1.5 text-sm rounded-md flex items-center ${\n              filter === 'deposit' \n                ? 'bg-green-600 text-white' \n                : 'bg-neutral-100 text-neutral-700 hover:bg-neutral-200'\n            }`}\n          >\n            <Upload className=\"h-3.5 w-3.5 mr-1\" />\n            Deposits\n          </button>\n          <button \n            onClick={() => setFilter('withdrawal')} \n            className={`px-3 py-1.5 text-sm rounded-md flex items-center ${\n              filter === 'withdrawal' \n                ? 'bg-red-600 text-white' \n                : 'bg-neutral-100 text-neutral-700 hover:bg-neutral-200'\n            }`}\n          >\n            <Download className=\"h-3.5 w-3.5 mr-1\" />\n            Withdrawals\n          </button>\n          <button \n            onClick={() => setFilter('trade')} \n            className={`px-3 py-1.5 text-sm rounded-md flex items-center ${\n              filter === 'trade' \n                ? 'bg-blue-600 text-white' \n                : 'bg-neutral-100 text-neutral-700 hover:bg-neutral-200'\n            }`}\n          >\n            <RefreshCw className=\"h-3.5 w-3.5 mr-1\" />\n            Trades\n          </button>\n        </div>\n        \n        <div className=\"flex space-x-2\">\n          <div className=\"relative\">\n            <input\n              type=\"text\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              placeholder=\"Search transactions...\"\n              className=\"pl-9 pr-3 py-2 border border-neutral-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n            <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-neutral-400\" />\n          </div>\n          \n          <div className=\"relative\">\n            <select\n              value={dateRange}\n              onChange={(e) => setDateRange(e.target.value as 'all' | 'week' | 'month' | 'year')}\n              className=\"pl-9 pr-8 py-2 border border-neutral-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none\"\n              aria-label=\"Filter transactions by date range\"\n              title=\"Filter transactions by date range\"\n            >\n              <option value=\"all\">All Time</option>\n              <option value=\"week\">Last Week</option>\n              <option value=\"month\">Last Month</option>\n              <option value=\"quarter\">Last Quarter</option>\n              <option value=\"year\">Last Year</option>\n            </select>\n            <Filter className=\"absolute left-3 top-2.5 h-4 w-4 text-neutral-400\" />\n          </div>\n          \n          <button className=\"flex items-center px-3 py-2 bg-neutral-100 text-neutral-700 rounded-md hover:bg-neutral-200\">\n            <DownloadIcon className=\"h-4 w-4 mr-1\" />\n            Export\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"bg-white rounded-lg border border-neutral-200 overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-neutral-200\">\n            <thead className=\"bg-neutral-50\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                  Transaction ID\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                  Description\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                  Amount\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                  Date\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-neutral-200\">\n              {loading && (\n                <tr>\n                  <td colSpan={6} className=\"px-4 py-6 text-center text-sm text-neutral-500\">Loading transactions...</td>\n                </tr>\n              )}\n              {error && !loading && (\n                <tr>\n                  <td colSpan={6} className=\"px-4 py-6 text-center text-sm text-red-600\">{error}</td>\n                </tr>\n              )}\n              {!loading && !error && filteredTransactions.length === 0 && (\n                <tr>\n                  <td colSpan={6} className=\"px-4 py-6 text-center text-sm text-neutral-500\">No transactions found</td>\n                </tr>\n              )}\n              {!loading && !error && filteredTransactions.map((transaction) => (\n                <tr key={transaction.id} className=\"hover:bg-neutral-50\">\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                    {transaction.id}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className={`mr-2 flex-shrink-0 h-8 w-8 rounded-full flex items-center justify-center ${\n                        transaction.type === 'DEPOSIT' \n                          ? 'bg-green-100' \n                          : transaction.type === 'WITHDRAWAL' \n                            ? 'bg-red-100' \n                            : 'bg-blue-100'\n                      }`}>\n                        {transaction.type === 'DEPOSIT' && (\n                          <Upload className={`h-4 w-4 text-green-600`} />\n                        )}\n                        {transaction.type === 'WITHDRAWAL' && (\n                          <Download className={`h-4 w-4 text-red-600`} />\n                        )}\n                        {transaction.type === 'TRADE' && (\n                          <RefreshCw className={`h-4 w-4 text-blue-600`} />\n                        )}\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-neutral-900\">{transaction.type}</div>\n                        <div className=\"text-xs text-neutral-500\">{transaction.description}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-neutral-900\">\n                      {transaction.type === 'WITHDRAWAL' ? '-' : ''}\n                      {formatCurrency(transaction.amount)}\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      transaction.status === 'COMPLETED' \n                        ? 'bg-green-100 text-green-800' \n                        : transaction.status === 'PENDING' \n                          ? 'bg-yellow-100 text-yellow-800' \n                          : 'bg-red-100 text-red-800'\n                    }`}>\n                      {transaction.status}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                    {formatDate(transaction.timestamp)}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      \n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-sm text-neutral-500\">\n          Showing {filteredTransactions.length} of {rows.length} transactions\n        </div>\n        <div className=\"flex\">\n          <button className=\"px-3 py-1 border border-neutral-300 rounded-l-md bg-white text-neutral-700 hover:bg-neutral-50 disabled:opacity-50 disabled:cursor-not-allowed\">\n            Previous\n          </button>\n          <button className=\"px-3 py-1 border border-neutral-300 border-l-0 rounded-r-md bg-white text-neutral-700 hover:bg-neutral-50\">\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionHistory;","import { AlertTriangle, CheckCircle, Plus, RefreshCw, Shield, Trash2, XCircle } from 'lucide-react';\nimport { useEffect, useState } from 'react';\nimport { getAccessToken } from '@/utils/auth';\n\ninterface ApiCredential {\n  id: string;\n  exchange: string;\n  credentialName: string;\n  permissions: {\n    read: boolean;\n    trade: boolean;\n    withdraw: boolean;\n  };\n  isActive: boolean;\n  lastUsedAt: string | null;\n  createdAt: string;\n}\n\ninterface NewCredentialForm {\n  credentialName: string;\n  apiKey: string;\n  apiSecret: string;\n  passphrase: string;\n  permissions: {\n    read: boolean;\n    trade: boolean;\n    withdraw: boolean;\n  };\n}\n\nconst ApiKeyManagement: React.FC = () => {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  const [apiCredentials, setApiCredentials] = useState<ApiCredential[]>([]);\n\n  const [newCredentialForm, setNewCredentialForm] = useState<NewCredentialForm>({\n    credentialName: '',\n    apiKey: '',\n    apiSecret: '',\n    passphrase: '',\n    permissions: {\n      read: true,\n      trade: false,\n      withdraw: false\n    }\n  });\n\n  // API base URL\n  const API_BASE = import.meta.env.VITE_API_URL || 'http://localhost:3000';\n\n  // Clear messages after 5 seconds\n  useEffect(() => {\n    if (successMessage || error) {\n      const timer = setTimeout(() => {\n        setSuccessMessage(null);\n        setError(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage, error]);\n\n  const loadApiCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const token = getAccessToken();\n      if (!token) {\n        setError('You must be logged in to view API credentials');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE}/api/keys`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to load API credentials');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setApiCredentials(data.credentials);\n      } else {\n        throw new Error(data.error || 'Failed to load API credentials');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load API credentials');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load API credentials on component mount\n  useEffect(() => {\n    loadApiCredentials();\n  }, [loadApiCredentials]);\n\n  const handleFormChange = (field: keyof NewCredentialForm, value: string) => {\n    setNewCredentialForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handlePermissionChange = (permission: 'read' | 'trade' | 'withdraw') => {\n    setNewCredentialForm(prev => ({\n      ...prev,\n      permissions: {\n        ...prev.permissions,\n        [permission]: !prev.permissions[permission]\n      }\n    }));\n  };\n\n  const handleCreateCredentials = async () => {\n    if (!newCredentialForm.credentialName.trim() || !newCredentialForm.apiKey.trim() || !newCredentialForm.apiSecret.trim()) {\n      setError('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      setSubmitting(true);\n      setError(null);\n\n      const token = getAccessToken();\n      if (!token) {\n        setError('You must be logged in to create API credentials');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE}/api/keys`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          credentialName: newCredentialForm.credentialName,\n          apiKey: newCredentialForm.apiKey,\n          apiSecret: newCredentialForm.apiSecret,\n          passphrase: newCredentialForm.passphrase || undefined,\n          permissions: newCredentialForm.permissions\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to create API credentials');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setSuccessMessage('API credentials created successfully');\n        setShowCreateForm(false);\n        setNewCredentialForm({\n          credentialName: '',\n          apiKey: '',\n          apiSecret: '',\n          passphrase: '',\n          permissions: {\n            read: true,\n            trade: false,\n            withdraw: false\n          }\n        });\n        // Reload credentials\n        await loadApiCredentials();\n      } else {\n        throw new Error(data.error || 'Failed to create API credentials');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to create API credentials');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleDeleteCredentials = async (id: string) => {\n    if (!confirm('Are you sure you want to delete these API credentials? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      const token = getAccessToken();\n      if (!token) {\n        setError('You must be logged in to delete API credentials');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE}/api/keys/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to delete API credentials');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setSuccessMessage('API credentials deleted successfully');\n        // Reload credentials\n        await loadApiCredentials();\n      } else {\n        throw new Error(data.error || 'Failed to delete API credentials');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to delete API credentials');\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Success Message */}\n      {successMessage && (\n        <div className=\"bg-green-50 border-l-4 border-green-500 p-4 text-green-700\">\n          <div className=\"flex\">\n            <CheckCircle className=\"h-5 w-5 mr-3 flex-shrink-0\" />\n            <p>{successMessage}</p>\n          </div>\n        </div>\n      )}\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"bg-red-50 border-l-4 border-red-500 p-4 text-red-700\">\n          <div className=\"flex\">\n            <XCircle className=\"h-5 w-5 mr-3 flex-shrink-0\" />\n            <p>{error}</p>\n          </div>\n        </div>\n      )}\n\n      {/* Security Warning */}\n      <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 text-blue-700\">\n        <div className=\"flex\">\n          <Shield className=\"h-6 w-6 mr-3 flex-shrink-0\" />\n          <div>\n            <h3 className=\"font-medium\">API Key Security</h3>\n            <p className=\"mt-1 text-sm\">\n              Keep your API keys secure. Never share them with others or expose them in client-side code.\n              Keys with trade and withdraw permissions should be used with extreme caution.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-lg font-medium\">Your API Keys</h2>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={loadApiCredentials}\n            disabled={loading}\n            className=\"flex items-center px-3 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 disabled:opacity-50\"\n            title=\"Refresh API credentials list\"\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n            Refresh\n          </button>\n          <button\n            onClick={() => setShowCreateForm(true)}\n            className=\"flex items-center px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add API Keys\n          </button>\n        </div>\n      </div>\n\n      {/* Create Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-lg border border-neutral-200 overflow-hidden\">\n          <div className=\"px-4 py-3 bg-neutral-50 border-b border-neutral-200\">\n            <h3 className=\"font-medium\">Add Poloniex API Keys</h3>\n          </div>\n          <div className=\"p-4 space-y-4\">\n            <div>\n              <label htmlFor=\"credential-name\" className=\"block text-sm font-medium text-neutral-700\">\n                Credential Name *\n              </label>\n              <input\n                type=\"text\"\n                id=\"credential-name\"\n                value={newCredentialForm.credentialName}\n                onChange={(e) => handleFormChange('credentialName', e.target.value)}\n                className=\"mt-1 block w-full border border-neutral-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g., Main Trading Account\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"api-key\" className=\"block text-sm font-medium text-neutral-700\">\n                API Key *\n              </label>\n              <input\n                type=\"text\"\n                id=\"api-key\"\n                value={newCredentialForm.apiKey}\n                onChange={(e) => handleFormChange('apiKey', e.target.value)}\n                className=\"mt-1 block w-full border border-neutral-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 font-mono\"\n                placeholder=\"Enter your Poloniex API Key\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"api-secret\" className=\"block text-sm font-medium text-neutral-700\">\n                API Secret *\n              </label>\n              <input\n                type=\"password\"\n                id=\"api-secret\"\n                value={newCredentialForm.apiSecret}\n                onChange={(e) => handleFormChange('apiSecret', e.target.value)}\n                className=\"mt-1 block w-full border border-neutral-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 font-mono\"\n                placeholder=\"Enter your Poloniex API Secret\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"passphrase\" className=\"block text-sm font-medium text-neutral-700\">\n                Passphrase (Optional)\n              </label>\n              <input\n                type=\"password\"\n                id=\"passphrase\"\n                value={newCredentialForm.passphrase}\n                onChange={(e) => handleFormChange('passphrase', e.target.value)}\n                className=\"mt-1 block w-full border border-neutral-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 font-mono\"\n                placeholder=\"Enter passphrase if required\"\n              />\n            </div>\n\n            <div>\n              <span className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                Permissions\n              </span>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"permission-read\"\n                    type=\"checkbox\"\n                    checked={newCredentialForm.permissions.read}\n                    onChange={() => handlePermissionChange('read')}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-neutral-300 rounded\"\n                  />\n                  <label htmlFor=\"permission-read\" className=\"ml-2 block text-sm text-neutral-700\">\n                    Read (View account balances and trades)\n                  </label>\n                </div>\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"permission-trade\"\n                    type=\"checkbox\"\n                    checked={newCredentialForm.permissions.trade}\n                    onChange={() => handlePermissionChange('trade')}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-neutral-300 rounded\"\n                  />\n                  <label htmlFor=\"permission-trade\" className=\"ml-2 block text-sm text-neutral-700\">\n                    Trade (Place and cancel orders)\n                  </label>\n                </div>\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"permission-withdraw\"\n                    type=\"checkbox\"\n                    checked={newCredentialForm.permissions.withdraw}\n                    onChange={() => handlePermissionChange('withdraw')}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-neutral-300 rounded\"\n                  />\n                  <label htmlFor=\"permission-withdraw\" className=\"ml-2 flex items-center text-sm text-neutral-700\">\n                    Withdraw (Transfer funds out of your account)\n                    <span className=\"ml-2 text-red-600 flex items-center text-xs\">\n                      <AlertTriangle className=\"h-3 w-3 mr-0.5\" />\n                      High Risk\n                    </span>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex justify-end space-x-3 pt-2\">\n              <button\n                type=\"button\"\n                onClick={() => setShowCreateForm(false)}\n                disabled={submitting}\n                className=\"px-4 py-2 border border-neutral-300 rounded-md shadow-sm text-sm font-medium text-neutral-700 bg-white hover:bg-neutral-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleCreateCredentials}\n                disabled={submitting || !newCredentialForm.credentialName.trim() || !newCredentialForm.apiKey.trim() || !newCredentialForm.apiSecret.trim()}\n                className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n              >\n                {submitting ? 'Creating...' : 'Create Credentials'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Credentials List */}\n      <div className=\"bg-white rounded-lg border border-neutral-200 overflow-hidden\">\n        <div className=\"px-4 py-3 bg-neutral-50 border-b border-neutral-200\">\n          <h3 className=\"font-medium\">Your API Credentials</h3>\n        </div>\n        <div className=\"overflow-x-auto\">\n          {loading ? (\n            <div className=\"p-8 text-center\">\n              <RefreshCw className=\"h-8 w-8 animate-spin mx-auto text-neutral-400 mb-2\" />\n              <p className=\"text-neutral-500\">Loading API credentials...</p>\n            </div>\n          ) : apiCredentials.length === 0 ? (\n            <div className=\"p-8 text-center\">\n              <p className=\"text-neutral-500\">No API credentials found. Add your first set of credentials to get started.</p>\n            </div>\n          ) : (\n            <table className=\"min-w-full divide-y divide-neutral-200\">\n              <thead className=\"bg-neutral-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                    Name\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                    Exchange\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                    Permissions\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                    Created\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                    Last Used\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th scope=\"col\" className=\"relative px-4 py-3\">\n                    <span className=\"sr-only\">Actions</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-neutral-200\">\n                {apiCredentials.map((credential) => (\n                  <tr key={credential.id}>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-neutral-900\">\n                      {credential.credentialName}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                      <span className=\"capitalize\">{credential.exchange}</span>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                      <div className=\"space-x-2\">\n                        {credential.permissions.read && (\n                          <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\n                            Read\n                          </span>\n                        )}\n                        {credential.permissions.trade && (\n                          <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800\">\n                            Trade\n                          </span>\n                        )}\n                        {credential.permissions.withdraw && (\n                          <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-red-100 text-red-800\">\n                            Withdraw\n                          </span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                      {formatDate(credential.createdAt)}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                      {credential.lastUsedAt ? formatDate(credential.lastUsedAt) : 'Never'}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                      <span className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${credential.isActive\n                        ? 'bg-green-100 text-green-800'\n                        : 'bg-red-100 text-red-800'\n                        }`}>\n                        {credential.isActive ? 'Active' : 'Inactive'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-right text-sm font-medium\">\n                      <button\n                        onClick={() => handleDeleteCredentials(credential.id)}\n                        className=\"text-red-600 hover:text-red-900\"\n                        title=\"Delete API credentials\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ApiKeyManagement;\n","import { useEffect, useState } from 'react';\nimport {\n  Clock,\n  CreditCard,\n  Download,\n  Upload,\n  User,\n  Shield,\n  Key,\n  RefreshCw,\n  ArrowUpRight,\n  ArrowDownRight,\n  DollarSign,\n  BarChart4\n} from 'lucide-react';\nimport { useTradingContext } from '../hooks/useTradingContext';\nimport { poloniexApi } from '../services/poloniexAPI';\nimport PoloniexFuturesAPI, { AccountBill } from '../services/poloniexFuturesAPI';\nimport TransactionHistory from '../components/account/TransactionHistory';\nimport ApiKeyManagement from '../components/account/ApiKeyManagement';\n// Remove mock data usage\n\nconst Account: React.FC = () => {\n  const { accountBalance } = useTradingContext();\n  const [activeTab, setActiveTab] = useState<'overview' | 'transactions' | 'api' | 'settings'>('overview');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [recent, setRecent] = useState<Array<{\n    id: string;\n    type: 'DEPOSIT' | 'WITHDRAWAL' | 'TRADE';\n    description: string;\n    amount: number;\n    status: 'COMPLETED' | 'PENDING' | 'FAILED';\n    timestamp: number;\n  }>>([]);\n  const [recentLoading, setRecentLoading] = useState(false);\n  const [recentError, setRecentError] = useState<string | null>(null);\n\n  // instantiate inside effect to avoid extra deps\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    try {\n      // Force API credentials reload\n      poloniexApi.loadCredentials();\n      // Refresh all data - using getAccountBalance instead of loadData\n      await poloniexApi.getAccountBalance();\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  // Format numbers for display\n  const formatCurrency = (value: number | string) => {\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(numValue);\n  };\n\n  // Format date for display\n  const formatDate = (timestamp: number | string) => {\n    try {\n      const date = new Date(typeof timestamp === 'string' ? parseInt(timestamp) : timestamp);\n\n      // Validate date\n      if (isNaN(date.getTime())) {\n        return 'Invalid Date';\n      }\n\n      // Return formatted date-time string\n      return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n    } catch {\n      return 'Invalid Date';\n    }\n  };\n\n  // Map AccountBill to UI transaction row\n  const mapBillToTx = (b: AccountBill) => {\n    const typeMap: Record<string, 'DEPOSIT' | 'WITHDRAWAL' | 'TRADE'> = {\n      deposit: 'DEPOSIT',\n      withdrawal: 'WITHDRAWAL',\n      trade: 'TRADE',\n      fee: 'TRADE',\n      funding: 'TRADE',\n    };\n    const t = typeMap[b.type?.toLowerCase?.() || 'trade'] || 'TRADE';\n    return {\n      id: b.billId,\n      type: t,\n      description: `${b.symbol || b.currency || ''} ${b.type}`.trim(),\n      amount: parseFloat(b.amount || '0'),\n      status: 'COMPLETED' as const,\n      timestamp: typeof b.ts === 'number' && b.ts < 1e12 ? b.ts * 1000 : b.ts,\n    };\n  };\n\n  // Load recent 5 transactions from API\n  useEffect(() => {\n    let mounted = true;\n    const load = async () => {\n      setRecentLoading(true);\n      setRecentError(null);\n      try {\n        const bills = await new PoloniexFuturesAPI().getAccountBills({ limit: 5 });\n        const rows = bills.map(mapBillToTx);\n        if (mounted) setRecent(rows);\n      } catch (e) {\n        if (mounted) setRecentError(e instanceof Error ? e.message : 'Failed to load');\n      } finally {\n        if (mounted) setRecentLoading(false);\n      }\n    };\n    load();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  // Parse account data\n  const accountData = {\n    totalBalance: parseFloat(accountBalance?.total?.toString() || '0'),\n    availableBalance: parseFloat(accountBalance?.available?.toString() || '0'),\n    equity: parseFloat(accountBalance?.total?.toString() || '0'), // Use total as fallback for equity\n    unrealizedPnL: 0, // Placeholder until backend endpoint provided\n    todayPnL: 0, // Placeholder\n    weeklyPnL: undefined as number | undefined, // Remove hardcoded values\n    monthlyPnL: undefined as number | undefined,\n    lifetimePnL: undefined as number | undefined,\n    depositsPending: 0,\n    withdrawalsPending: 0,\n    verificationStatus: 'Verified',\n    tradingLevel: 'Advanced',\n    feeRate: '0.1%',\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Account Overview</h1>\n        <button\n          onClick={handleRefresh}\n          disabled={isRefreshing}\n          className=\"flex items-center px-3 py-2 bg-blue-50 text-blue-600 rounded-md hover:bg-blue-100\"\n        >\n          <RefreshCw className={`h-4 w-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\n          {isRefreshing ? 'Refreshing...' : 'Refresh Data'}\n        </button>\n      </div>\n\n      <div className=\"bg-bg-tertiary rounded-lg shadow-md\">\n        <div className=\"flex border-b\">\n          <button\n            onClick={() => setActiveTab('overview')}\n            className={`px-4 py-3 font-medium text-sm flex items-center ${\n              activeTab === 'overview' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-text-muted hover:text-text-secondary'\n            }`}\n          >\n            <User className=\"h-4 w-4 mr-2\" />\n            Overview\n          </button>\n          <button\n            onClick={() => setActiveTab('transactions')}\n            className={`px-4 py-3 font-medium text-sm flex items-center ${\n              activeTab === 'transactions' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-text-muted hover:text-text-secondary'\n            }`}\n          >\n            <CreditCard className=\"h-4 w-4 mr-2\" />\n            Transactions\n          </button>\n          <button\n            onClick={() => setActiveTab('api')}\n            className={`px-4 py-3 font-medium text-sm flex items-center ${\n              activeTab === 'api' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-text-muted hover:text-text-secondary'\n            }`}\n          >\n            <Key className=\"h-4 w-4 mr-2\" />\n            API Keys\n          </button>\n          <button\n            onClick={() => setActiveTab('settings')}\n            className={`px-4 py-3 font-medium text-sm flex items-center ${\n              activeTab === 'settings' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-text-muted hover:text-text-secondary'\n            }`}\n          >\n            <Shield className=\"h-4 w-4 mr-2\" />\n            Security\n          </button>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              {/* Account Summary Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"gradient-primary text-white rounded-lg shadow-elev-2 p-4\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <p className=\"text-white/80 text-sm\">Total Balance</p>\n                      <p className=\"text-2xl font-bold mt-1\">{formatCurrency(accountData.totalBalance)}</p>\n                    </div>\n                    <div className=\"bg-blue-400/30 p-2 rounded-full\">\n                      <DollarSign className=\"h-6 w-6\" />\n                    </div>\n                  </div>\n                  <div className=\"mt-4 text-sm\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-blue-100\">Available</span>\n                      <span className=\"font-medium\">{formatCurrency(accountData.availableBalance)}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center mt-1\">\n                      <span className=\"text-blue-100\">Equity</span>\n                      <span className=\"font-medium\">{formatCurrency(accountData.equity)}</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-bg-tertiary rounded-lg shadow-md p-4 border border-border-subtle\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <p className=\"text-neutral-500 text-sm\">Profit & Loss</p>\n                      <p className={`text-2xl font-bold mt-1 ${accountData.todayPnL >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {accountData.todayPnL >= 0 ? '+' : ''}{formatCurrency(accountData.todayPnL)}\n                      </p>\n                    </div>\n                    <div className=\"bg-neutral-100 p-2 rounded-full\">\n                      <BarChart4 className=\"h-6 w-6 text-neutral-600\" />\n                    </div>\n                  </div>\n                  <div className=\"mt-4 text-sm\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-neutral-500\">Weekly</span>\n                      <span className=\"font-medium text-neutral-600\">\n                        {accountData.weeklyPnL === undefined ? '—' : `${accountData.weeklyPnL >= 0 ? '+' : ''}${formatCurrency(accountData.weeklyPnL)}`}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center mt-1\">\n                      <span className=\"text-neutral-500\">Monthly</span>\n                      <span className=\"font-medium text-neutral-600\">\n                        {accountData.monthlyPnL === undefined ? '—' : `${accountData.monthlyPnL >= 0 ? '+' : ''}${formatCurrency(accountData.monthlyPnL)}`}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-bg-tertiary rounded-lg shadow-md p-4 border border-border-subtle\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <p className=\"text-neutral-500 text-sm\">Recent Activity</p>\n                      <p className=\"text-2xl font-bold mt-1\">12 Trades</p>\n                    </div>\n                    <div className=\"bg-neutral-100 p-2 rounded-full\">\n                      <Clock className=\"h-6 w-6 text-neutral-600\" />\n                    </div>\n                  </div>\n                  <div className=\"mt-4 text-sm\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"flex items-center text-neutral-500\">\n                        <ArrowUpRight className=\"h-4 w-4 mr-1 text-green-500\" />\n                        Buys\n                      </span>\n                      <span className=\"font-medium\">7 orders</span>\n                    </div>\n                    <div className=\"flex justify-between items-center mt-1\">\n                      <span className=\"flex items-center text-neutral-500\">\n                        <ArrowDownRight className=\"h-4 w-4 mr-1 text-red-500\" />\n                        Sells\n                      </span>\n                      <span className=\"font-medium\">5 orders</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Deposit/Withdraw Buttons */}\n              <div className=\"flex space-x-4\">\n                <button className=\"flex items-center justify-center w-full bg-green-600 text-white py-2 rounded-md hover:bg-green-700\">\n                  <Upload className=\"h-4 w-4 mr-2\" />\n                  Deposit\n                </button>\n                <button className=\"flex items-center justify-center w-full bg-neutral-600 text-white py-2 rounded-md hover:bg-neutral-700\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Withdraw\n                </button>\n              </div>\n\n              {/* Account Status */}\n              <div className=\"bg-bg-tertiary rounded-lg border border-border-subtle overflow-hidden\">\n                <div className=\"px-4 py-3 bg-neutral-50 border-b border-border-subtle\">\n                  <h3 className=\"font-medium\">Account Status</h3>\n                </div>\n                <div className=\"p-4 space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-neutral-500\">Verification Status</h4>\n                      <div className=\"flex items-center mt-1\">\n                        <div className=\"h-3 w-3 rounded-full bg-green-500 mr-2\"></div>\n                        <span className=\"font-medium\">{accountData.verificationStatus}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-neutral-500\">Trading Level</h4>\n                      <div className=\"flex items-center mt-1\">\n                        <span className=\"font-medium\">{accountData.tradingLevel}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-neutral-500\">Fee Rate</h4>\n                      <div className=\"flex items-center mt-1\">\n                        <span className=\"font-medium\">{accountData.feeRate}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-neutral-500\">Account Age</h4>\n                      <div className=\"flex items-center mt-1\">\n                        <span className=\"font-medium\">147 days</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Recent Transactions Summary */}\n              <div className=\"bg-bg-tertiary rounded-lg border border-border-subtle overflow-hidden\">\n                <div className=\"px-4 py-3 bg-neutral-50 border-b border-border-subtle flex justify-between items-center\">\n                  <h3 className=\"font-medium\">Recent Transactions</h3>\n                  <button\n                    onClick={() => setActiveTab('transactions')}\n                    className=\"text-sm text-blue-600 hover:text-blue-700\"\n                  >\n                    View All\n                  </button>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-border-subtle\">\n                    <thead className=\"bg-neutral-50\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                          Type\n                        </th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                          Amount\n                        </th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                          Status\n                        </th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-neutral-500 uppercase tracking-wider\">\n                          Date\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-bg-tertiary divide-y divide-border-subtle\">\n                      {recentLoading && (\n                        <tr>\n                          <td colSpan={4} className=\"px-4 py-6 text-center text-sm text-neutral-500\">Loading recent transactions...</td>\n                        </tr>\n                      )}\n                      {recentError && !recentLoading && (\n                        <tr>\n                          <td colSpan={4} className=\"px-4 py-6 text-center text-sm text-red-600\">{recentError}</td>\n                        </tr>\n                      )}\n                      {!recentLoading && !recentError && recent.length === 0 && (\n                        <tr>\n                          <td colSpan={4} className=\"px-4 py-6 text-center text-sm text-neutral-500\">No recent transactions</td>\n                        </tr>\n                      )}\n                      {!recentLoading && !recentError && recent.slice(0, 5).map((transaction) => (\n                        <tr key={transaction.id}>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className={`mr-2 flex-shrink-0 h-8 w-8 rounded-full flex items-center justify-center ${\n                                transaction.type === 'DEPOSIT' \n                                  ? 'bg-green-100' \n                                  : transaction.type === 'WITHDRAWAL' \n                                    ? 'bg-red-100' \n                                    : 'bg-blue-100'\n                              }`}>\n                                {transaction.type === 'DEPOSIT' && (\n                                  <Upload className={`h-4 w-4 text-green-600`} />\n                                )}\n                                {transaction.type === 'WITHDRAWAL' && (\n                                  <Download className={`h-4 w-4 text-red-600`} />\n                                )}\n                                {transaction.type === 'TRADE' && (\n                                  <RefreshCw className={`h-4 w-4 text-blue-600`} />\n                                )}\n                              </div>\n                              <div>\n                                <div className=\"text-sm font-medium text-neutral-900\">{transaction.type}</div>\n                                <div className=\"text-xs text-neutral-500\">{transaction.description}</div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <div className=\"text-sm font-medium text-neutral-900\">\n                              {transaction.type === 'WITHDRAWAL' ? '-' : ''}\n                              {formatCurrency(transaction.amount)}\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              transaction.status === 'COMPLETED' \n                                ? 'bg-green-100 text-green-800' \n                                : transaction.status === 'PENDING' \n                                  ? 'bg-yellow-100 text-yellow-800' \n                                  : 'bg-red-100 text-red-800'\n                            }`}>\n                              {transaction.status}\n                            </span>\n                          </td>\n                          <td className=\"px-4 py-3 whitespace-nowrap text-sm text-neutral-500\">\n                            {formatDate(transaction.timestamp)}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'transactions' && (\n            <TransactionHistory />\n          )}\n\n          {activeTab === 'api' && (\n            <ApiKeyManagement />\n          )}\n\n          {activeTab === 'settings' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-bg-tertiary rounded-lg border border-border-subtle overflow-hidden shadow-elev-1\">\n                <div className=\"px-4 py-3 bg-bg-secondary border-b border-border-subtle\">\n                  <h3 className=\"font-semibold text-text-primary\">Security Settings</h3>\n                </div>\n                <div className=\"p-4 space-y-4\">\n                  <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                    <div>\n                      <h4 className=\"font-medium\">Two-Factor Authentication</h4>\n                      <p className=\"text-sm text-neutral-500 mt-1\">Secure your account with 2FA</p>\n                    </div>\n                    <button className=\"px-3 py-1 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\n                      Enable\n                    </button>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                    <div>\n                      <h4 className=\"font-medium\">Change Password</h4>\n                      <p className=\"text-sm text-neutral-500 mt-1\">Update your account password</p>\n                    </div>\n                    <button className=\"px-3 py-1 bg-neutral-200 text-neutral-800 rounded-md hover:bg-neutral-300\">\n                      Update\n                    </button>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                    <div>\n                      <h4 className=\"font-medium\">Login History</h4>\n                      <p className=\"text-sm text-neutral-500 mt-1\">View your recent login activity</p>\n                    </div>\n                    <button className=\"px-3 py-1 bg-neutral-200 text-neutral-800 rounded-md hover:bg-neutral-300\">\n                      View\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n"],"names":["getApiBaseUrl","BASE_HOST","API_PREFIX","normalizeFuturesSymbol","sym","ENDPOINTS","generateSignature","timestamp","method","requestPath","body","apiSecret","getPoloniexApiSecret","message","crypto","createAuthHeaders","endpoint","apiKey","getPoloniexApiKey","signature","PoloniexFuturesAPI","mockMode","__publicField","params","authenticated","url","key","headers","response","contentType","errorPayload","text","mockData","symbol","posMode","payload","TransactionHistory","filter","setFilter","useState","dateRange","setDateRange","searchQuery","setSearchQuery","formatCurrency","value","numValue","formatDate","date","rows","setRows","loading","setLoading","error","setError","mapBillToRow","b","t","useEffect","mounted","now","start","mapped","e","filteredTransactions","useMemo","transaction","query","jsxs","jsx","Upload","Download","RefreshCw","Search","Filter","DownloadIcon","ApiKeyManagement","showCreateForm","setShowCreateForm","submitting","setSubmitting","successMessage","setSuccessMessage","apiCredentials","setApiCredentials","newCredentialForm","setNewCredentialForm","API_BASE","timer","loadApiCredentials","token","getAccessToken","data","err","handleFormChange","field","prev","handlePermissionChange","permission","handleCreateCredentials","errorData","handleDeleteCredentials","id","dateString","CheckCircle","XCircle","Shield","Plus","AlertTriangle","credential","Trash2","Account","accountBalance","useTradingContext","activeTab","setActiveTab","isRefreshing","setIsRefreshing","recent","setRecent","recentLoading","setRecentLoading","recentError","setRecentError","handleRefresh","poloniexApi","mapBillToTx","accountData","User","CreditCard","Key","DollarSign","BarChart4","Clock","ArrowUpRight","ArrowDownRight"],"mappings":"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"}