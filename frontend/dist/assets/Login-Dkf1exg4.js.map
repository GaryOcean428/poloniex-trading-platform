{"version":3,"file":"Login-Dkf1exg4.js","sources":["../../src/components/ui/Card.tsx","../../src/components/ui/Alert.tsx","../../src/components/auth/Login.tsx","../../src/pages/Login.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface CardProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const Card: React.FC<CardProps> = ({ className = '', children }) => {\n  return (\n    <div className={`bg-white dark:bg-neutral-800 rounded-lg shadow-md p-4 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport interface CardHeaderProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const CardHeader: React.FC<CardHeaderProps> = ({ className = '', children }) => {\n  return (\n    <div className={`border-b border-neutral-200 dark:border-neutral-700 pb-3 mb-4 font-semibold text-lg ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport interface CardTitleProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const CardTitle: React.FC<CardTitleProps> = ({ className = '', children }) => {\n  return (\n    <h3 className={`font-bold text-xl ${className}`}>\n      {children}\n    </h3>\n  );\n};\n\nexport interface CardBodyProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const CardBody: React.FC<CardBodyProps> = ({ className = '', children }) => {\n  return (\n    <div className={`${className}`}>\n      {children}\n    </div>\n  );\n};\n\n// Alias for CardBody to support both naming conventions\nexport const CardContent: React.FC<CardBodyProps> = CardBody;\n\nexport interface CardFooterProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const CardFooter: React.FC<CardFooterProps> = ({ className = '', children }) => {\n  return (\n    <div className={`border-t border-neutral-200 dark:border-neutral-700 pt-3 mt-4 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nexport interface AlertProps {\n  variant?: 'info' | 'success' | 'warning' | 'error';\n  type?: 'info' | 'success' | 'warning' | 'error';\n  message?: string;\n  children?: React.ReactNode;\n  className?: string;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<AlertProps> = ({ \n  variant = 'info',\n  type,\n  message,\n  children,\n  className = '',\n  onClose\n}) => {\n  // Use variant prop if provided, otherwise fall back to type prop\n  const alertType = variant || type || 'info';\n  \n  const getAlertStyles = () => {\n    switch (alertType) {\n      case 'success':\n        return 'bg-green-100 border-green-500 text-green-700';\n      case 'warning':\n        return 'bg-yellow-100 border-yellow-500 text-yellow-700';\n      case 'error':\n        return 'bg-red-100 border-red-500 text-red-700';\n      case 'info':\n      default:\n        return 'bg-blue-100 border-blue-500 text-blue-700';\n    }\n  };\n\n  const content = message || children;\n\n  return (\n    <div className={`border-l-4 p-4 mb-4 rounded ${getAlertStyles()} ${className}`} role=\"alert\">\n      <div className=\"flex items-center justify-between\">\n        <p>{content}</p>\n        {onClose && (\n          <button \n            onClick={onClose}\n            className=\"ml-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 p-1.5 inline-flex h-8 w-8 hover:bg-opacity-25 hover:bg-neutral-500\"\n          >\n            <span className=\"sr-only\">Close</span>\n            <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path>\n            </svg>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { Button, Input, Card, CardHeader, CardBody, CardFooter, Alert } from '@/components/ui';\n\ninterface LoginProps {\n  onSuccess?: () => void;\n}\n\nconst Login: React.FC<LoginProps> = ({ onSuccess }) => {\n  const { login } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!username || !password) {\n      setError('Please enter both username and password');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Use new JWT login method\n      const success = await login(username, password);\n      \n      if (success) {\n        // console.log('Login successful');\n        if (onSuccess) {\n          onSuccess();\n        }\n      } else {\n        setError('Invalid username or password. Try demo/password');\n      }\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : 'Login failed. Please try again.';\n      setError(errorMessage);\n      // console.error('Login error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-md mx-auto\">\n      <CardHeader>\n        <h2 className=\"text-xl font-bold\">Login to Your Account</h2>\n      </CardHeader>\n      <CardBody>\n        {error && (\n          <Alert variant=\"error\" className=\"mb-4\">\n            {error}\n          </Alert>\n        )}\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label htmlFor=\"username\" className=\"block text-sm font-medium mb-1\">\n              Username\n            </label>\n            <Input\n              id=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder=\"Enter your username\"\n              disabled={isLoading}\n              autoComplete=\"username\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"password\" className=\"block text-sm font-medium mb-1\">\n              Password\n            </label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              disabled={isLoading}\n              autoComplete=\"current-password\"\n            />\n          </div>\n          <div className=\"mt-2 text-sm text-neutral-500\">\n            <p>Demo credentials: username: <strong>demo</strong>, password: <strong>password</strong></p>\n            <p>Or try: username: <strong>trader</strong>, password: <strong>password</strong></p>\n          </div>\n        </form>\n      </CardBody>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"outline\" disabled={isLoading}>\n          Register\n        </Button>\n        <Button \n          type=\"submit\" \n          onClick={handleSubmit}\n          disabled={isLoading}\n        >\n          {isLoading ? 'Logging in...' : 'Login'}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport Login from '../components/auth/Login';\n\nconst LoginPage: React.FC = () => {\n  const { isLoggedIn, loading } = useAuth();\n\n  // Show loading state while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-bg-secondary\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // Redirect if already logged in\n  if (isLoggedIn) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-bg-secondary py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-text-primary\">\n            Welcome to Poloniex Trading\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-text-secondary\">\n            Sign in to access your trading dashboard\n          </p>\n        </div>\n        \n        <Login \n          onSuccess={() => {\n            // Navigation will be handled by the redirect logic above\n            window.location.reload();\n          }} \n        />\n        \n        <div className=\"text-center\">\n          <p className=\"text-sm text-text-secondary\">\n            Don't have an account?{' '}\n            <button className=\"font-medium text-brand-cyan hover:text-brand-cyan/90\">\n              Contact us for access\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Card","className","children","jsx","CardHeader","CardBody","CardFooter","Alert","variant","type","message","onClose","alertType","getAlertStyles","content","jsxs","Login","onSuccess","login","useAuth","username","setUsername","useState","password","setPassword","error","setError","isLoading","setIsLoading","handleSubmit","e","err","errorMessage","Input","Button","LoginPage","isLoggedIn","loading","Navigate"],"mappings":"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"}