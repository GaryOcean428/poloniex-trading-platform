# Railway deployment ignore file - Monorepo Support

# IMPORTANT: Keep these files for monorepo workspace support
# - package.json (root)
# - yarn.lock (root)
# - .yarnrc.yml (root)
# - .yarn/ directory (with patches/plugins)

# Development files
.git/
.vscode/
.idea/
*.log
*.tmp
*.swp
.DS_Store
.editorconfig

# Test files
tests/
test_reports/
*.test.js
*.test.ts
*.spec.ts
*.spec.js
*_test.py
backend_test.py
coverage/
.vitest/

# Frontend source (not needed for backend deployment, but node_modules needed for workspace)
frontend/src/
frontend/public/
frontend/.vscode/
frontend/index.html
frontend/vite.config.ts
frontend/tsconfig*.json

# Python services - DO NOT ignore the directory itself, Railway needs it for ml-worker service
# Individual services will be deployed via root railpack.json service definitions

# Documentation (keep only essential docs)
docs/
*.md
!README.md

# CI/CD files
.github/
.gitlab-ci.yml
.travis.yml
.pre-commit-config.yaml

# Package manager files (yarn.lock is needed!)
yarn-error.log
npm-debug.log*
package-lock.json
pnpm-lock.yaml

# IDE and editor files
.vscode/
.idea/
*.sublime-*

# OS files
.DS_Store
Thumbs.db

# Backup files
*.bak
*.backup

# Build artifacts from OTHER workspaces
frontend/dist/
frontend/build/
frontend/.next/

# Keep backend build artifacts - they're needed!
# backend/dist/ - DO NOT IGNORE
# backend/node_modules/ - DO NOT IGNORE (will be installed)

# Python cache
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
pip-log.txt

# Environment files (Railway injects these)
.env.local
.env.development
.env.test
